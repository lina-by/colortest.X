

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 04 15:13:07 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Version 2.35
    55                           ; Generated 05/05/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     _RC4STAbits	set	3815
    90   000000                     _SP4BRGH	set	3814
    91   000000                     _SP4BRGL	set	3813
    92   000000                     _TX4STAbits	set	3816
    93   000000                     _BAUD4CONbits	set	3817
    94   000000                     _LATAbits	set	3961
    95   000000                     _LATFbits	set	3966
    96   000000                     _LATGbits	set	3967
    97   000000                     _TRISAbits	set	3969
    98   000000                     _TRISFbits	set	3974
    99   000000                     _TRISGbits	set	3975
   100   000000                     _SSP2CON2bits	set	3802
   101   000000                     _RX4PPS	set	3605
   102   000000                     _PIE0bits	set	3625
   103   000000                     _PIE4bits	set	3629
   104   000000                     _PIR4bits	set	3639
   105   000000                     _INTCONbits	set	4082
   106   000000                     _RC0PPS	set	3682
   107   000000                     _RC4REG	set	3811
   108   000000                     _TX4REG	set	3812
   109   000000                     _TMR0L	set	4051
   110   000000                     _TMR0H	set	4052
   111   000000                     _T0CON0bits	set	4053
   112   000000                     _T0CON1bits	set	4054
   113   000000                     _TRISDbits	set	3972
   114   000000                     _RD5PPS	set	3695
   115   000000                     _ANSELDbits	set	3751
   116   000000                     _SSP2ADD	set	3798
   117   000000                     _SSP2CON1bits	set	3801
   118   000000                     _SSP2CLKPPS	set	3612
   119   000000                     _SSP2DATPPS	set	3613
   120   000000                     _SSP2CON2	set	3802
   121   000000                     _SSP2STAT	set	3800
   122   000000                     _SSP2BUF	set	3797
   123   000000                     _RD6PPS	set	3696
   124                           
   125                           	psect	smallconst
   126   000E00                     __psmallconst:
   127                           	callstack 0
   128   000E00  00                 	db	0
   129   000E01                     STR_1:
   130   000E01  6C                 	db	108	;'l'
   131   000E02  65                 	db	101	;'e'
   132   000E03  76                 	db	118	;'v'
   133   000E04  65                 	db	101	;'e'
   134   000E05  6C                 	db	108	;'l'
   135   000E06  73                 	db	115	;'s'
   136   000E07  3D                 	db	61	;'='
   137   000E08  25                 	db	37
   138   000E09  64                 	db	100	;'d'
   139   000E0A  20                 	db	32
   140   000E0B  3B                 	db	59	;';'
   141   000E0C  20                 	db	32
   142   000E0D  72                 	db	114	;'r'
   143   000E0E  65                 	db	101	;'e'
   144   000E0F  64                 	db	100	;'d'
   145   000E10  3D                 	db	61	;'='
   146   000E11  25                 	db	37
   147   000E12  64                 	db	100	;'d'
   148   000E13  20                 	db	32
   149   000E14  3B                 	db	59	;';'
   150   000E15  20                 	db	32
   151   000E16  62                 	db	98	;'b'
   152   000E17  6C                 	db	108	;'l'
   153   000E18  75                 	db	117	;'u'
   154   000E19  65                 	db	101	;'e'
   155   000E1A  3D                 	db	61	;'='
   156   000E1B  25                 	db	37
   157   000E1C  64                 	db	100	;'d'
   158   000E1D  20                 	db	32
   159   000E1E  3B                 	db	59	;';'
   160   000E1F  20                 	db	32
   161   000E20  67                 	db	103	;'g'
   162   000E21  72                 	db	114	;'r'
   163   000E22  65                 	db	101	;'e'
   164   000E23  65                 	db	101	;'e'
   165   000E24  6E                 	db	110	;'n'
   166   000E25  3D                 	db	61	;'='
   167   000E26  25                 	db	37
   168   000E27  64                 	db	100	;'d'
   169   000E28  20                 	db	32
   170   000E29  3B                 	db	59	;';'
   171   000E2A  20                 	db	32
   172   000E2B  63                 	db	99	;'c'
   173   000E2C  6C                 	db	108	;'l'
   174   000E2D  65                 	db	101	;'e'
   175   000E2E  61                 	db	97	;'a'
   176   000E2F  72                 	db	114	;'r'
   177   000E30  3D                 	db	61	;'='
   178   000E31  25                 	db	37
   179   000E32  64                 	db	100	;'d'
   180   000E33  0A                 	db	10
   181   000E34  00                 	db	0
   182   000E35  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   001A0A                     __pcinit:
   188                           	callstack 0
   189   001A0A                     start_initialization:
   190                           	callstack 0
   191   001A0A                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Clear objects allocated to BANK1 (212 bytes)
   195   001A0A  EE01  F000         	lfsr	0,__pbssBANK1
   196   001A0E  0ED4               	movlw	212
   197   001A10                     clear_0:
   198   001A10  6AEE               	clrf	postinc0,c
   199   001A12  06E8               	decf	wreg,f,c
   200   001A14  E1FD               	bnz	clear_0
   201                           
   202                           ; Clear objects allocated to BANK0 (15 bytes)
   203   001A16  EE00  F0F0         	lfsr	0,__pbssBANK0
   204   001A1A  0E0F               	movlw	15
   205   001A1C                     clear_1:
   206   001A1C  6AEE               	clrf	postinc0,c
   207   001A1E  06E8               	decf	wreg,f,c
   208   001A20  E1FD               	bnz	clear_1
   209                           
   210                           ; Clear objects allocated to COMRAM (7 bytes)
   211   001A22  EE00  F04E         	lfsr	0,__pbssCOMRAM
   212   001A26  0E07               	movlw	7
   213   001A28                     clear_2:
   214   001A28  6AEE               	clrf	postinc0,c
   215   001A2A  06E8               	decf	wreg,f,c
   216   001A2C  E1FD               	bnz	clear_2
   217   001A2E                     end_of_initialization:
   218                           	callstack 0
   219   001A2E                     __end_of__initialization:
   220                           	callstack 0
   221   001A2E  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   222   001A30  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   223   001A32  0E00               	movlw	low (__Lsmallconst shr (0+16))
   224   001A34  6EF8               	movwf	tblptru,c
   225   001A36  0E0E               	movlw	high __Lsmallconst
   226   001A38  6EF7               	movwf	tblptrh,c
   227   001A3A  0100               	movlb	0
   228   001A3C  EFDC  F00A         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231   00004E                     __pbssCOMRAM:
   232                           	callstack 0
   233   00004E                     _sendFLAG:
   234                           	callstack 0
   235   00004E                     	ds	1
   236   00004F                     _VxBufReadCnt:
   237                           	callstack 0
   238   00004F                     	ds	1
   239   000050                     _VxBufWriteCnt:
   240                           	callstack 0
   241   000050                     	ds	1
   242   000051                     _TxBufReadCnt:
   243                           	callstack 0
   244   000051                     	ds	1
   245   000052                     _TxBufWriteCnt:
   246                           	callstack 0
   247   000052                     	ds	1
   248   000053                     _RxBufReadCnt:
   249                           	callstack 0
   250   000053                     	ds	1
   251   000054                     _RxBufWriteCnt:
   252                           	callstack 0
   253   000054                     	ds	1
   254                           
   255                           	psect	bssBANK0
   256   0000F0                     __pbssBANK0:
   257                           	callstack 0
   258   0000F0                     _width:
   259                           	callstack 0
   260   0000F0                     	ds	2
   261   0000F2                     _prec:
   262                           	callstack 0
   263   0000F2                     	ds	2
   264   0000F4                     _clear:
   265                           	callstack 0
   266   0000F4                     	ds	2
   267   0000F6                     _green:
   268                           	callstack 0
   269   0000F6                     	ds	2
   270   0000F8                     _blue:
   271                           	callstack 0
   272   0000F8                     	ds	2
   273   0000FA                     _red:
   274                           	callstack 0
   275   0000FA                     	ds	2
   276   0000FC                     _flags:
   277                           	callstack 0
   278   0000FC                     	ds	1
   279   0000FD                     _charFLAG:
   280                           	callstack 0
   281   0000FD                     	ds	1
   282   0000FE                     _ReturnFLAG:
   283                           	callstack 0
   284   0000FE                     	ds	1
   285                           
   286                           	psect	bssBANK1
   287   000100                     __pbssBANK1:
   288                           	callstack 0
   289   000100                     _EUSART4TXbuf:
   290                           	callstack 0
   291   000100                     	ds	100
   292   000164                     _EUSART4VXbuf:
   293                           	callstack 0
   294   000164                     	ds	60
   295   0001A0                     _EUSART4RXbuf:
   296                           	callstack 0
   297   0001A0                     	ds	20
   298   0001B4                     _dbuf:
   299                           	callstack 0
   300   0001B4                     	ds	32
   301                           
   302                           	psect	cstackBANK0
   303   000060                     __pcstackBANK0:
   304                           	callstack 0
   305   000060                     vfpfcnvrt@convarg:
   306                           	callstack 0
   307                           
   308                           ; 8 bytes @ 0x0
   309   000060                     	ds	8
   310   000068                     vfpfcnvrt@cp:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x8
   314   000068                     	ds	2
   315   00006A                     ?_vfprintf:
   316                           	callstack 0
   317   00006A                     vfprintf@fp:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0xA
   321   00006A                     	ds	2
   322   00006C                     vfprintf@fmt:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0xC
   326   00006C                     	ds	2
   327   00006E                     vfprintf@ap:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0xE
   331   00006E                     	ds	2
   332   000070                     ?_sprintf:
   333                           	callstack 0
   334   000070                     sprintf@s:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x10
   338   000070                     	ds	2
   339   000072                     sprintf@fmt:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x12
   343   000072                     	ds	12
   344   00007E                     sprintf@ap:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x1E
   348   00007E                     	ds	2
   349   000080                     sprintf@f:
   350                           	callstack 0
   351                           
   352                           ; 11 bytes @ 0x20
   353   000080                     	ds	11
   354   00008B                     main@buf:
   355                           	callstack 0
   356                           
   357                           ; 100 bytes @ 0x2B
   358   00008B                     	ds	100
   359   0000EF                     main@i:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x8F
   363   0000EF                     	ds	1
   364                           
   365                           	psect	cstackCOMRAM
   366   000001                     __pcstackCOMRAM:
   367                           	callstack 0
   368   000001                     ??_getCharFromTxBuf:
   369   000001                     putCharToRxBuf@byte:
   370                           	callstack 0
   371   000001                     
   372                           ; 1 bytes @ 0x0
   373   000001                     	ds	2
   374   000003                     ??_HighISR:
   375                           
   376                           ; 1 bytes @ 0x2
   377   000003                     	ds	2
   378   000005                     HighISR@reg:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x4
   382   000005                     	ds	1
   383   000006                     ??_I2C_2_Master_Idle:
   384   000006                     ?___aodiv:
   385                           	callstack 0
   386   000006                     ?___aomod:
   387                           	callstack 0
   388   000006                     Light@colorcode:
   389                           	callstack 0
   390   000006                     putCharToTxBuf@byte:
   391                           	callstack 0
   392   000006                     fputc@c:
   393                           	callstack 0
   394   000006                     ___aodiv@dividend:
   395                           	callstack 0
   396   000006                     ___aomod@dividend:
   397                           	callstack 0
   398                           
   399                           ; 8 bytes @ 0x5
   400   000006                     	ds	1
   401   000007                     ??_I2C_2_Master_Read:
   402   000007                     I2C_2_Master_Write@data_byte:
   403                           	callstack 0
   404   000007                     TxBufferedString@string:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x6
   408   000007                     	ds	1
   409   000008                     color_writetoaddr@value:
   410                           	callstack 0
   411   000008                     I2C_2_Master_Read@ack:
   412                           	callstack 0
   413   000008                     fputc@fp:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x7
   417   000008                     	ds	1
   418   000009                     color_writetoaddr@address:
   419                           	callstack 0
   420   000009                     I2C_2_Master_Read@tmp:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x8
   424   000009                     	ds	1
   425   00000A                     ??_color_click_init:
   426   00000A                     ??_fputc:
   427   00000A                     ?_color_read_Red:
   428                           	callstack 0
   429   00000A                     ?_color_read_Blue:
   430                           	callstack 0
   431   00000A                     ?_color_read_Green:
   432                           	callstack 0
   433   00000A                     ?_color_read_Clear:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x9
   437   00000A                     	ds	2
   438   00000C                     ??_color_read_Red:
   439   00000C                     ??_color_read_Blue:
   440   00000C                     ??_color_read_Green:
   441   00000C                     ??_color_read_Clear:
   442                           
   443                           ; 1 bytes @ 0xB
   444   00000C                     	ds	2
   445   00000E                     ___aodiv@divisor:
   446                           	callstack 0
   447   00000E                     ___aomod@divisor:
   448                           	callstack 0
   449                           
   450                           ; 8 bytes @ 0xD
   451   00000E                     	ds	1
   452   00000F                     color_read_Red@tmp:
   453                           	callstack 0
   454   00000F                     color_read_Blue@tmp:
   455                           	callstack 0
   456   00000F                     color_read_Green@tmp:
   457                           	callstack 0
   458   00000F                     color_read_Clear@tmp:
   459                           	callstack 0
   460   00000F                     fputs@s:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xE
   464   00000F                     	ds	2
   465   000011                     levels@i:
   466                           	callstack 0
   467   000011                     fputs@fp:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x10
   471   000011                     	ds	2
   472   000013                     ??_levels:
   473   000013                     fputs@c:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x12
   477   000013                     	ds	1
   478   000014                     fputs@i:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x13
   482   000014                     	ds	2
   483   000016                     ___aodiv@counter:
   484                           	callstack 0
   485   000016                     ___aomod@counter:
   486                           	callstack 0
   487   000016                     pad@fp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x15
   491   000016                     	ds	1
   492   000017                     ___aodiv@sign:
   493                           	callstack 0
   494   000017                     ___aomod@sign:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x16
   498   000017                     	ds	1
   499   000018                     ?_abs:
   500                           	callstack 0
   501   000018                     pad@buf:
   502                           	callstack 0
   503   000018                     abs@a:
   504                           	callstack 0
   505   000018                     ___aodiv@quotient:
   506                           	callstack 0
   507                           
   508                           ; 8 bytes @ 0x17
   509   000018                     	ds	2
   510   00001A                     ??_abs:
   511   00001A                     pad@p:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x19
   515   00001A                     	ds	2
   516   00001C                     ??_pad:
   517                           
   518                           ; 1 bytes @ 0x1B
   519   00001C                     	ds	1
   520   00001D                     pad@i:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x1C
   524   00001D                     	ds	2
   525   00001F                     pad@w:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x1E
   529   00001F                     	ds	2
   530   000021                     dtoa@fp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x20
   534   000021                     	ds	2
   535   000023                     dtoa@d:
   536                           	callstack 0
   537                           
   538                           ; 8 bytes @ 0x22
   539   000023                     	ds	8
   540   00002B                     ??_dtoa:
   541                           
   542                           ; 1 bytes @ 0x2A
   543   00002B                     	ds	8
   544   000033                     _dtoa$1516:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x32
   548   000033                     	ds	2
   549   000035                     dtoa@p:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x34
   553   000035                     	ds	2
   554   000037                     dtoa@w:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x36
   558   000037                     	ds	2
   559   000039                     dtoa@n:
   560                           	callstack 0
   561                           
   562                           ; 8 bytes @ 0x38
   563   000039                     	ds	8
   564   000041                     dtoa@s:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x40
   568   000041                     	ds	1
   569   000042                     dtoa@i:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x41
   573   000042                     	ds	2
   574   000044                     vfpfcnvrt@fp:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x43
   578   000044                     	ds	2
   579   000046                     vfpfcnvrt@fmt:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x45
   583   000046                     	ds	2
   584   000048                     vfpfcnvrt@ap:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x47
   588   000048                     	ds	2
   589   00004A                     ??_vfpfcnvrt:
   590                           
   591                           ; 1 bytes @ 0x49
   592   00004A                     	ds	2
   593   00004C                     vfprintf@cfmt:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x4B
   597   00004C                     	ds	2
   598   00004E                     
   599                           ; 1 bytes @ 0x4D
   600 ;;
   601 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   602 ;;
   603 ;; *************** function _main *****************
   604 ;; Defined at:
   605 ;;		line 44 in file "main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  buf           100   43[BANK0 ] unsigned char [100]
   610 ;;  i               1  143[BANK0 ] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   621 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   623 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   624 ;;Total ram usage:      101 bytes
   625 ;; Hardware stack levels required when called: 10
   626 ;; This function calls:
   627 ;;		_Interrupts_init
   628 ;;		_LightInit
   629 ;;		_TxBufferedString
   630 ;;		_color_click_init
   631 ;;		_initUSART4
   632 ;;		_levels
   633 ;;		_sprintf
   634 ;; This function is called by:
   635 ;;		Startup code after reset
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text0
   640   0015B8                     __ptext0:
   641                           	callstack 0
   642   0015B8                     _main:
   643                           	callstack 21
   644   0015B8                     
   645                           ;main.c: 45:     initUSART4();
   646   0015B8  ECCB  F00D         	call	_initUSART4	;wreg free
   647   0015BC                     
   648                           ;main.c: 46:     Interrupts_init();
   649   0015BC  ECE6  F00D         	call	_Interrupts_init	;wreg free
   650   0015C0                     
   651                           ;main.c: 48:     color_click_init();
   652   0015C0  EC20  F00D         	call	_color_click_init	;wreg free
   653   0015C4                     
   654                           ;main.c: 49:     LightInit();
   655   0015C4  ECEE  F00D         	call	_LightInit	;wreg free
   656   0015C8                     
   657                           ;main.c: 50:     char i=0;
   658   0015C8  0E00               	movlw	0
   659   0015CA  0100               	movlb	0	; () banked
   660   0015CC  6FEF               	movwf	main@i& (0+255),b
   661   0015CE                     l2439:
   662                           
   663                           ; BSR set to: 0
   664                           ;main.c: 53:         levels(i);
   665   0015CE  C0EF  F011         	movff	main@i,levels@i
   666   0015D2  6A12               	clrf	(levels@i+1)^0,c
   667   0015D4  ECDA  F00B         	call	_levels	;wreg free
   668   0015D8                     
   669                           ;main.c: 54:         sprintf(&buf,"levels=%d ; red=%d ; blue=%d ; green=%d ; clear=%d\n"
      +                          , i,red,blue,green,clear);
   670   0015D8  0E8B               	movlw	low main@buf
   671   0015DA  0100               	movlb	0	; () banked
   672   0015DC  6F70               	movwf	sprintf@s& (0+255),b
   673   0015DE  0E00               	movlw	high main@buf
   674   0015E0  6F71               	movwf	(sprintf@s+1)& (0+255),b
   675   0015E2  0E01               	movlw	low STR_1
   676   0015E4  6F72               	movwf	sprintf@fmt& (0+255),b
   677   0015E6  0E0E               	movlw	high STR_1
   678   0015E8  6F73               	movwf	(sprintf@fmt+1)& (0+255),b
   679   0015EA  C0EF  F074         	movff	main@i,?_sprintf+4
   680   0015EE  6B75               	clrf	(?_sprintf+5)& (0+255),b
   681   0015F0  C0FA  F076         	movff	_red,?_sprintf+6
   682   0015F4  C0FB  F077         	movff	_red+1,?_sprintf+7
   683   0015F8  C0F8  F078         	movff	_blue,?_sprintf+8
   684   0015FC  C0F9  F079         	movff	_blue+1,?_sprintf+9
   685   001600  C0F6  F07A         	movff	_green,?_sprintf+10
   686   001604  C0F7  F07B         	movff	_green+1,?_sprintf+11
   687   001608  C0F4  F07C         	movff	_clear,?_sprintf+12
   688   00160C  C0F5  F07D         	movff	_clear+1,?_sprintf+13
   689   001610  EC89  F00B         	call	_sprintf	;wreg free
   690   001614                     
   691                           ;main.c: 55:         TxBufferedString(&buf);
   692   001614  0E8B               	movlw	low main@buf
   693   001616  6E07               	movwf	TxBufferedString@string^0,c
   694   001618  0E00               	movlw	high main@buf
   695   00161A  6E08               	movwf	(TxBufferedString@string+1)^0,c
   696   00161C  EC3A  F00D         	call	_TxBufferedString	;wreg free
   697   001620                     
   698                           ;main.c: 56:         sendFLAG=1;
   699   001620  0E01               	movlw	1
   700   001622  6E4E               	movwf	_sendFLAG^0,c
   701   001624                     
   702                           ;main.c: 57:         PIE4bits.TX4IE=1;
   703   001624  010E               	movlb	14	; () banked
   704   001626  852D               	bsf	45,2,b	;volatile
   705   001628                     
   706                           ; BSR set to: 14
   707                           ;main.c: 58:         i=(i+1)%4;
   708   001628  0100               	movlb	0	; () banked
   709   00162A  29EF               	incf	main@i& (0+255),w,b
   710   00162C  0B03               	andlw	3
   711   00162E  6FEF               	movwf	main@i& (0+255),b
   712   001630  EFE7  F00A         	goto	l2439
   713   001634  EF44  F000         	goto	start
   714   001638                     __end_of_main:
   715                           	callstack 0
   716                           
   717 ;; *************** function _sprintf *****************
   718 ;; Defined at:
   719 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  s               2   16[BANK0 ] PTR unsigned char 
   722 ;;		 -> main@buf(100), 
   723 ;;  fmt             2   18[BANK0 ] PTR const unsigned char 
   724 ;;		 -> STR_1(52), 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  f              11   32[BANK0 ] struct _IO_FILE
   727 ;;  ap              2   30[BANK0 ] PTR void [1]
   728 ;;		 -> ?_sprintf(2), 
   729 ;;  ret             2    0        int 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  2   16[BANK0 ] int 
   732 ;; Registers used:
   733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   739 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   740 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   742 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   743 ;;Total ram usage:       27 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 9
   746 ;; This function calls:
   747 ;;		_vfprintf
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text1
   754   001712                     __ptext1:
   755                           	callstack 0
   756   001712                     _sprintf:
   757                           	callstack 21
   758   001712  0E74               	movlw	low (?_sprintf+4)
   759   001714  0100               	movlb	0	; () banked
   760   001716  6F7E               	movwf	sprintf@ap& (0+255),b
   761   001718  0E00               	movlw	high (?_sprintf+4)
   762   00171A  6F7F               	movwf	(sprintf@ap+1)& (0+255),b
   763   00171C  C070  F080         	movff	sprintf@s,sprintf@f
   764   001720  C071  F081         	movff	sprintf@s+1,sprintf@f+1
   765   001724                     
   766                           ; BSR set to: 0
   767   001724  0E00               	movlw	0
   768   001726  6F84               	movwf	(sprintf@f+4)& (0+255),b
   769   001728  0E00               	movlw	0
   770   00172A  6F83               	movwf	(sprintf@f+3)& (0+255),b
   771   00172C                     
   772                           ; BSR set to: 0
   773   00172C  0E00               	movlw	0
   774   00172E  6F8A               	movwf	(sprintf@f+10)& (0+255),b
   775   001730  0E00               	movlw	0
   776   001732  6F89               	movwf	(sprintf@f+9)& (0+255),b
   777   001734                     
   778                           ; BSR set to: 0
   779   001734  0E80               	movlw	low sprintf@f
   780   001736  6F6A               	movwf	vfprintf@fp& (0+255),b
   781   001738  0E00               	movlw	high sprintf@f
   782   00173A  6F6B               	movwf	(vfprintf@fp+1)& (0+255),b
   783   00173C  C072  F06C         	movff	sprintf@fmt,vfprintf@fmt
   784   001740  C073  F06D         	movff	sprintf@fmt+1,vfprintf@fmt+1
   785   001744  0E7E               	movlw	low sprintf@ap
   786   001746  6F6E               	movwf	vfprintf@ap& (0+255),b
   787   001748  0E00               	movlw	high sprintf@ap
   788   00174A  6F6F               	movwf	(vfprintf@ap+1)& (0+255),b
   789   00174C  ECB2  F00B         	call	_vfprintf	;wreg free
   790   001750  0100               	movlb	0	; () banked
   791   001752  5183               	movf	(sprintf@f+3)& (0+255),w,b
   792   001754  2570               	addwf	sprintf@s& (0+255),w,b
   793   001756  6ED9               	movwf	fsr2l,c
   794   001758  5184               	movf	(sprintf@f+4)& (0+255),w,b
   795   00175A  2171               	addwfc	(sprintf@s+1)& (0+255),w,b
   796   00175C  6EDA               	movwf	fsr2h,c
   797   00175E  0E00               	movlw	0
   798   001760  6EDF               	movwf	indf2,c
   799   001762                     
   800                           ; BSR set to: 0
   801   001762  0012               	return		;funcret
   802   001764                     __end_of_sprintf:
   803                           	callstack 0
   804                           
   805 ;; *************** function _vfprintf *****************
   806 ;; Defined at:
   807 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
   810 ;;		 -> sprintf@f(11), 
   811 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
   812 ;;		 -> STR_1(52), 
   813 ;;  ap              2   14[BANK0 ] PTR PTR void 
   814 ;;		 -> sprintf@ap(2), 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  cfmt            2   75[COMRAM] PTR unsigned char 
   817 ;;		 -> STR_1(52), 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  2   10[BANK0 ] int 
   820 ;; Registers used:
   821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   827 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   830 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   831 ;;Total ram usage:        8 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 8
   834 ;; This function calls:
   835 ;;		_vfpfcnvrt
   836 ;; This function is called by:
   837 ;;		_sprintf
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text2
   842   001764                     __ptext2:
   843                           	callstack 0
   844   001764                     _vfprintf:
   845                           	callstack 21
   846   001764                     
   847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   848   001764  C06C  F04C         	movff	vfprintf@fmt,vfprintf@cfmt
   849   001768  C06D  F04D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   850                           
   851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   852   00176C  EFC6  F00B         	goto	l2411
   853   001770                     l2409:
   854                           
   855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   856   001770  C06A  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
   857   001774  C06B  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   858   001778  0E4C               	movlw	low vfprintf@cfmt
   859   00177A  6E46               	movwf	vfpfcnvrt@fmt^0,c
   860   00177C  0E00               	movlw	high vfprintf@cfmt
   861   00177E  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
   862   001780  C06E  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
   863   001784  C06F  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   864   001788  ECD0  F009         	call	_vfpfcnvrt	;wreg free
   865   00178C                     l2411:
   866                           
   867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   868   00178C  C04C  FFF6         	movff	vfprintf@cfmt,tblptrl
   869   001790  C04D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   870   001794                     	if	0	;tblptru may be non-zero
   871   001794                     	endif
   872   001794                     	if	0	;tblptru may be non-zero
   873   001794                     	endif
   874   001794  0008               	tblrd		*
   875   001796  50F5               	movf	tablat,w,c
   876   001798  0900               	iorlw	0
   877   00179A  A4D8               	btfss	status,2,c
   878   00179C  EFD2  F00B         	goto	u1681
   879   0017A0  EFD4  F00B         	goto	u1680
   880   0017A4                     u1681:
   881   0017A4  EFB8  F00B         	goto	l2409
   882   0017A8                     u1680:
   883   0017A8                     
   884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   885   0017A8  0E00               	movlw	0
   886   0017AA  0100               	movlb	0	; () banked
   887   0017AC  6F6B               	movwf	(?_vfprintf+1)& (0+255),b
   888   0017AE  0E00               	movlw	0
   889   0017B0  6F6A               	movwf	?_vfprintf& (0+255),b
   890   0017B2                     
   891                           ; BSR set to: 0
   892   0017B2  0012               	return		;funcret
   893   0017B4                     __end_of_vfprintf:
   894                           	callstack 0
   895                           
   896 ;; *************** function _vfpfcnvrt *****************
   897 ;; Defined at:
   898 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
   901 ;;		 -> sprintf@f(11), 
   902 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
   903 ;;		 -> vfprintf@cfmt(2), 
   904 ;;  ap              2   71[COMRAM] PTR PTR void 
   905 ;;		 -> sprintf@ap(2), 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  convarg         8    0[BANK0 ] struct .
   908 ;;  cp              2    8[BANK0 ] PTR unsigned char 
   909 ;;		 -> STR_1(52), 
   910 ;;  i               2    0        int 
   911 ;;  done            2    0        int 
   912 ;;  c               1    0        unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   922 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   923 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   925 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   926 ;;Total ram usage:       18 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 7
   929 ;; This function calls:
   930 ;;		_dtoa
   931 ;;		_fputc
   932 ;; This function is called by:
   933 ;;		_vfprintf
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text3
   938   0013A0                     __ptext3:
   939                           	callstack 0
   940   0013A0                     _vfpfcnvrt:
   941                           	callstack 21
   942   0013A0                     
   943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
   944   0013A0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   945   0013A4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   946   0013A8  CFDE FFF6          	movff	postinc2,tblptrl
   947   0013AC  CFDD FFF7          	movff	postdec2,tblptrh
   948   0013B0                     	if	0	;tblptru may be non-zero
   949   0013B0                     	endif
   950   0013B0                     	if	0	;tblptru may be non-zero
   951   0013B0                     	endif
   952   0013B0  0008               	tblrd		*
   953   0013B2  50F5               	movf	tablat,w,c
   954   0013B4  0A25               	xorlw	37
   955   0013B6  A4D8               	btfss	status,2,c
   956   0013B8  EFE0  F009         	goto	u1651
   957   0013BC  EFE2  F009         	goto	u1650
   958   0013C0                     u1651:
   959   0013C0  EF62  F00A         	goto	l2401
   960   0013C4                     u1650:
   961   0013C4                     
   962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
   963   0013C4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   964   0013C8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   965   0013CC  2ADE               	incf	postinc2,f,c
   966   0013CE  0E00               	movlw	0
   967   0013D0  22DD               	addwfc	postdec2,f,c
   968   0013D2                     
   969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
   970   0013D2  0E00               	movlw	0
   971   0013D4  0100               	movlb	0	; () banked
   972   0013D6  6FF1               	movwf	(_width+1)& (0+255),b
   973   0013D8  0E00               	movlw	0
   974   0013DA  6FF0               	movwf	_width& (0+255),b
   975   0013DC  C0F0  F0FC         	movff	_width,_flags
   976   0013E0                     
   977                           ; BSR set to: 0
   978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
   979   0013E0  69F2               	setf	_prec& (0+255),b
   980   0013E2  69F3               	setf	(_prec+1)& (0+255),b
   981   0013E4                     
   982                           ; BSR set to: 0
   983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
   984   0013E4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   985   0013E8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   986   0013EC  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
   987   0013F0  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
   988   0013F4                     
   989                           ; BSR set to: 0
   990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   991   0013F4  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   992   0013F8  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   993   0013FC                     	if	0	;tblptru may be non-zero
   994   0013FC                     	endif
   995   0013FC                     	if	0	;tblptru may be non-zero
   996   0013FC                     	endif
   997   0013FC  0008               	tblrd		*
   998   0013FE  50F5               	movf	tablat,w,c
   999   001400  0A64               	xorlw	100
  1000   001402  B4D8               	btfsc	status,2,c
  1001   001404  EF06  F00A         	goto	u1661
  1002   001408  EF08  F00A         	goto	u1660
  1003   00140C                     u1661:
  1004   00140C  EF16  F00A         	goto	l2391
  1005   001410                     u1660:
  1006   001410                     
  1007                           ; BSR set to: 0
  1008   001410  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1009   001414  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1010   001418                     	if	0	;tblptru may be non-zero
  1011   001418                     	endif
  1012   001418                     	if	0	;tblptru may be non-zero
  1013   001418                     	endif
  1014   001418  0008               	tblrd		*
  1015   00141A  50F5               	movf	tablat,w,c
  1016   00141C  0A69               	xorlw	105
  1017   00141E  A4D8               	btfss	status,2,c
  1018   001420  EF14  F00A         	goto	u1671
  1019   001424  EF16  F00A         	goto	u1670
  1020   001428                     u1671:
  1021   001428  EF59  F00A         	goto	l2397
  1022   00142C                     u1670:
  1023   00142C                     l2391:
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1027   00142C  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1028   001430  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1029   001434  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1030   001438  0E02               	movlw	2
  1031   00143A  26DE               	addwf	postinc2,f,c
  1032   00143C  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1033   001440  0E00               	movlw	0
  1034   001442  22DD               	addwfc	postdec2,f,c
  1035   001444  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1036   001448  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1037   00144C  CFDE F060          	movff	postinc2,vfpfcnvrt@convarg
  1038   001450  CFDD F061          	movff	postdec2,vfpfcnvrt@convarg+1
  1039   001454  0E00               	movlw	0
  1040   001456  BF61               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1041   001458  0EFF               	movlw	-1
  1042   00145A  6F62               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1043   00145C  6F63               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1044   00145E  6F64               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1045   001460  6F65               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1046   001462  6F66               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1047   001464  6F67               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1048                           
  1049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1050   001466  0E01               	movlw	1
  1051   001468  2568               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1052   00146A  6E4A               	movwf	??_vfpfcnvrt^0,c
  1053   00146C  0E00               	movlw	0
  1054   00146E  2169               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1055   001470  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1056   001472  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1057   001476  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1058   00147A  C04A  FFDE         	movff	??_vfpfcnvrt,postinc2
  1059   00147E  C04B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1060   001482                     
  1061                           ; BSR set to: 0
  1062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1063   001482  C044  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  1064   001486  C045  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1065   00148A  C060  F023         	movff	vfpfcnvrt@convarg,dtoa@d
  1066   00148E  C061  F024         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1067   001492  C062  F025         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1068   001496  C063  F026         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1069   00149A  C064  F027         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1070   00149E  C065  F028         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1071   0014A2  C066  F029         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1072   0014A6  C067  F02A         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1073   0014AA  EC1B  F007         	call	_dtoa	;wreg free
  1074   0014AE  EF76  F00A         	goto	l1099
  1075   0014B2                     l2397:
  1076                           
  1077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1078   0014B2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1079   0014B6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1080   0014BA  2ADE               	incf	postinc2,f,c
  1081   0014BC  0E00               	movlw	0
  1082   0014BE  22DD               	addwfc	postdec2,f,c
  1083   0014C0  EF76  F00A         	goto	l1099
  1084   0014C4                     l2401:
  1085                           
  1086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1087   0014C4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1088   0014C8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1089   0014CC  CFDE FFF6          	movff	postinc2,tblptrl
  1090   0014D0  CFDD FFF7          	movff	postdec2,tblptrh
  1091   0014D4                     	if	0	;tblptru may be non-zero
  1092   0014D4                     	endif
  1093   0014D4                     	if	0	;tblptru may be non-zero
  1094   0014D4                     	endif
  1095   0014D4  0008               	tblrd		*
  1096   0014D6  50F5               	movf	tablat,w,c
  1097   0014D8  6E06               	movwf	fputc@c^0,c
  1098   0014DA  6A07               	clrf	(fputc@c+1)^0,c
  1099   0014DC  C044  F008         	movff	vfpfcnvrt@fp,fputc@fp
  1100   0014E0  C045  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1101   0014E4  EC77  F00A         	call	_fputc	;wreg free
  1102   0014E8  EF59  F00A         	goto	l2397
  1103   0014EC                     l1099:
  1104   0014EC  0012               	return		;funcret
  1105   0014EE                     __end_of_vfpfcnvrt:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _dtoa *****************
  1109 ;; Defined at:
  1110 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  1113 ;;		 -> sprintf@f(11), 
  1114 ;;  d               8   34[COMRAM] long long 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  n               8   56[COMRAM] long long 
  1117 ;;  i               2   65[COMRAM] int 
  1118 ;;  w               2   54[COMRAM] int 
  1119 ;;  p               2   52[COMRAM] int 
  1120 ;;  s               1   64[COMRAM] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1130 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1131 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1132 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;Total ram usage:       35 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 6
  1137 ;; This function calls:
  1138 ;;		___aodiv
  1139 ;;		___aomod
  1140 ;;		_abs
  1141 ;;		_pad
  1142 ;; This function is called by:
  1143 ;;		_vfpfcnvrt
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text4
  1148   000E36                     __ptext4:
  1149                           	callstack 0
  1150   000E36                     _dtoa:
  1151                           	callstack 21
  1152   000E36                     
  1153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1154   000E36  C023  F039         	movff	dtoa@d,dtoa@n
  1155   000E3A  C024  F03A         	movff	dtoa@d+1,dtoa@n+1
  1156   000E3E  C025  F03B         	movff	dtoa@d+2,dtoa@n+2
  1157   000E42  C026  F03C         	movff	dtoa@d+3,dtoa@n+3
  1158   000E46  C027  F03D         	movff	dtoa@d+4,dtoa@n+4
  1159   000E4A  C028  F03E         	movff	dtoa@d+5,dtoa@n+5
  1160   000E4E  C029  F03F         	movff	dtoa@d+6,dtoa@n+6
  1161   000E52  C02A  F040         	movff	dtoa@d+7,dtoa@n+7
  1162   000E56                     
  1163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1164   000E56  BE40               	btfsc	(dtoa@n+7)^0,7,c
  1165   000E58  EF30  F007         	goto	u1551
  1166   000E5C  EF33  F007         	goto	u1550
  1167   000E60                     u1551:
  1168   000E60  0E01               	movlw	1
  1169   000E62  EF34  F007         	goto	u1560
  1170   000E66                     u1550:
  1171   000E66  0E00               	movlw	0
  1172   000E68                     u1560:
  1173   000E68  6E41               	movwf	dtoa@s^0,c
  1174   000E6A                     
  1175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1176   000E6A  5041               	movf	dtoa@s^0,w,c
  1177   000E6C  B4D8               	btfsc	status,2,c
  1178   000E6E  EF3B  F007         	goto	u1571
  1179   000E72  EF3D  F007         	goto	u1570
  1180   000E76                     u1571:
  1181   000E76  EF4D  F007         	goto	l2333
  1182   000E7A                     u1570:
  1183   000E7A                     
  1184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1185   000E7A  1E40               	comf	(dtoa@n+7)^0,f,c
  1186   000E7C  1E3F               	comf	(dtoa@n+6)^0,f,c
  1187   000E7E  1E3E               	comf	(dtoa@n+5)^0,f,c
  1188   000E80  1E3D               	comf	(dtoa@n+4)^0,f,c
  1189   000E82  1E3C               	comf	(dtoa@n+3)^0,f,c
  1190   000E84  1E3B               	comf	(dtoa@n+2)^0,f,c
  1191   000E86  1E3A               	comf	(dtoa@n+1)^0,f,c
  1192   000E88  6C39               	negf	dtoa@n^0,c
  1193   000E8A  0E00               	movlw	0
  1194   000E8C  223A               	addwfc	(dtoa@n+1)^0,f,c
  1195   000E8E  223B               	addwfc	(dtoa@n+2)^0,f,c
  1196   000E90  223C               	addwfc	(dtoa@n+3)^0,f,c
  1197   000E92  223D               	addwfc	(dtoa@n+4)^0,f,c
  1198   000E94  223E               	addwfc	(dtoa@n+5)^0,f,c
  1199   000E96  223F               	addwfc	(dtoa@n+6)^0,f,c
  1200   000E98  2240               	addwfc	(dtoa@n+7)^0,f,c
  1201   000E9A                     l2333:
  1202                           
  1203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1204   000E9A  0100               	movlb	0	; () banked
  1205   000E9C  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  1206   000E9E  EF5B  F007         	goto	u1580
  1207   000EA2  51F3               	movf	(_prec+1)& (0+255),w,b
  1208   000EA4  E106               	bnz	u1581
  1209   000EA6  05F2               	decf	_prec& (0+255),w,b
  1210   000EA8  B0D8               	btfsc	status,0,c
  1211   000EAA  EF59  F007         	goto	u1581
  1212   000EAE  EF5B  F007         	goto	u1580
  1213   000EB2                     u1581:
  1214   000EB2  EF61  F007         	goto	l1078
  1215   000EB6                     u1580:
  1216   000EB6                     
  1217                           ; BSR set to: 0
  1218   000EB6  0E00               	movlw	0
  1219   000EB8  6E36               	movwf	(dtoa@p+1)^0,c
  1220   000EBA  0E01               	movlw	1
  1221   000EBC  6E35               	movwf	dtoa@p^0,c
  1222   000EBE  EF65  F007         	goto	l1080
  1223   000EC2                     l1078:
  1224                           
  1225                           ; BSR set to: 0
  1226   000EC2  C0F2  F035         	movff	_prec,dtoa@p
  1227   000EC6  C0F3  F036         	movff	_prec+1,dtoa@p+1
  1228   000ECA                     l1080:
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1232   000ECA  C0F0  F037         	movff	_width,dtoa@w
  1233   000ECE  C0F1  F038         	movff	_width+1,dtoa@w+1
  1234   000ED2                     
  1235                           ; BSR set to: 0
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1237   000ED2  5041               	movf	dtoa@s^0,w,c
  1238   000ED4  B4D8               	btfsc	status,2,c
  1239   000ED6  EF6F  F007         	goto	u1591
  1240   000EDA  EF71  F007         	goto	u1590
  1241   000EDE                     u1591:
  1242   000EDE  EF88  F007         	goto	l1081
  1243   000EE2                     u1590:
  1244   000EE2                     
  1245                           ; BSR set to: 0
  1246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1247   000EE2  0637               	decf	dtoa@w^0,f,c
  1248   000EE4  A0D8               	btfss	status,0,c
  1249   000EE6  0638               	decf	(dtoa@w+1)^0,f,c
  1250   000EE8                     
  1251                           ; BSR set to: 0
  1252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1253   000EE8  5041               	movf	dtoa@s^0,w,c
  1254   000EEA  A4D8               	btfss	status,2,c
  1255   000EEC  EF7A  F007         	goto	u1601
  1256   000EF0  EF7C  F007         	goto	u1600
  1257   000EF4                     u1601:
  1258   000EF4  EF82  F007         	goto	l2345
  1259   000EF8                     u1600:
  1260   000EF8                     
  1261                           ; BSR set to: 0
  1262   000EF8  0E00               	movlw	0
  1263   000EFA  6E34               	movwf	(_dtoa$1516+1)^0,c
  1264   000EFC  0E2B               	movlw	43
  1265   000EFE  6E33               	movwf	_dtoa$1516^0,c
  1266   000F00  EF86  F007         	goto	l2347
  1267   000F04                     l2345:
  1268                           
  1269                           ; BSR set to: 0
  1270   000F04  0E00               	movlw	0
  1271   000F06  6E34               	movwf	(_dtoa$1516+1)^0,c
  1272   000F08  0E2D               	movlw	45
  1273   000F0A  6E33               	movwf	_dtoa$1516^0,c
  1274   000F0C                     l2347:
  1275                           
  1276                           ; BSR set to: 0
  1277   000F0C  C033  F041         	movff	_dtoa$1516,dtoa@s
  1278   000F10                     l1081:
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1282   000F10  0E00               	movlw	0
  1283   000F12  6E43               	movwf	(dtoa@i+1)^0,c
  1284   000F14  0E1F               	movlw	31
  1285   000F16  6E42               	movwf	dtoa@i^0,c
  1286   000F18                     
  1287                           ; BSR set to: 0
  1288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1289   000F18  0E00               	movlw	0
  1290   000F1A  0101               	movlb	1	; () banked
  1291   000F1C  6FD3               	movwf	(_dbuf+31)& (0+255),b
  1292                           
  1293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1294   000F1E  EF0D  F008         	goto	l2361
  1295   000F22                     l2351:
  1296                           
  1297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1298   000F22  0642               	decf	dtoa@i^0,f,c
  1299   000F24  A0D8               	btfss	status,0,c
  1300   000F26  0643               	decf	(dtoa@i+1)^0,f,c
  1301   000F28                     
  1302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1303   000F28  0EB4               	movlw	low _dbuf
  1304   000F2A  2442               	addwf	dtoa@i^0,w,c
  1305   000F2C  6ED9               	movwf	fsr2l,c
  1306   000F2E  0E01               	movlw	high _dbuf
  1307   000F30  2043               	addwfc	(dtoa@i+1)^0,w,c
  1308   000F32  6EDA               	movwf	fsr2h,c
  1309   000F34  C039  F006         	movff	dtoa@n,___aomod@dividend
  1310   000F38  C03A  F007         	movff	dtoa@n+1,___aomod@dividend+1
  1311   000F3C  C03B  F008         	movff	dtoa@n+2,___aomod@dividend+2
  1312   000F40  C03C  F009         	movff	dtoa@n+3,___aomod@dividend+3
  1313   000F44  C03D  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  1314   000F48  C03E  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  1315   000F4C  C03F  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  1316   000F50  C040  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  1317   000F54  0E0A               	movlw	10
  1318   000F56  6E0E               	movwf	___aomod@divisor^0,c
  1319   000F58  0E00               	movlw	0
  1320   000F5A  6E0F               	movwf	(___aomod@divisor+1)^0,c
  1321   000F5C  0E00               	movlw	0
  1322   000F5E  6E10               	movwf	(___aomod@divisor+2)^0,c
  1323   000F60  0E00               	movlw	0
  1324   000F62  6E11               	movwf	(___aomod@divisor+3)^0,c
  1325   000F64  0E00               	movlw	0
  1326   000F66  6E12               	movwf	(___aomod@divisor+4)^0,c
  1327   000F68  0E00               	movlw	0
  1328   000F6A  6E13               	movwf	(___aomod@divisor+5)^0,c
  1329   000F6C  0E00               	movlw	0
  1330   000F6E  6E14               	movwf	(___aomod@divisor+6)^0,c
  1331   000F70  0E00               	movlw	0
  1332   000F72  6E15               	movwf	(___aomod@divisor+7)^0,c
  1333   000F74  EC1E  F009         	call	___aomod	;wreg free
  1334   000F78  C006  F02B         	movff	?___aomod,??_dtoa
  1335   000F7C  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  1336   000F80  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  1337   000F84  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  1338   000F88  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  1339   000F8C  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  1340   000F90  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  1341   000F94  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  1342   000F98  C02B  F018         	movff	??_dtoa,abs@a
  1343   000F9C  C02C  F019         	movff	??_dtoa+1,abs@a+1
  1344   000FA0  ECE5  F00C         	call	_abs	;wreg free
  1345   000FA4  5018               	movf	?_abs^0,w,c
  1346   000FA6  0F30               	addlw	48
  1347   000FA8  6EDF               	movwf	indf2,c
  1348   000FAA                     
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1350   000FAA  0635               	decf	dtoa@p^0,f,c
  1351   000FAC  A0D8               	btfss	status,0,c
  1352   000FAE  0636               	decf	(dtoa@p+1)^0,f,c
  1353   000FB0                     
  1354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1355   000FB0  0637               	decf	dtoa@w^0,f,c
  1356   000FB2  A0D8               	btfss	status,0,c
  1357   000FB4  0638               	decf	(dtoa@w+1)^0,f,c
  1358   000FB6                     
  1359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1360   000FB6  C039  F006         	movff	dtoa@n,___aodiv@dividend
  1361   000FBA  C03A  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  1362   000FBE  C03B  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  1363   000FC2  C03C  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  1364   000FC6  C03D  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  1365   000FCA  C03E  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  1366   000FCE  C03F  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  1367   000FD2  C040  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  1368   000FD6  0E0A               	movlw	10
  1369   000FD8  6E0E               	movwf	___aodiv@divisor^0,c
  1370   000FDA  0E00               	movlw	0
  1371   000FDC  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  1372   000FDE  0E00               	movlw	0
  1373   000FE0  6E10               	movwf	(___aodiv@divisor+2)^0,c
  1374   000FE2  0E00               	movlw	0
  1375   000FE4  6E11               	movwf	(___aodiv@divisor+3)^0,c
  1376   000FE6  0E00               	movlw	0
  1377   000FE8  6E12               	movwf	(___aodiv@divisor+4)^0,c
  1378   000FEA  0E00               	movlw	0
  1379   000FEC  6E13               	movwf	(___aodiv@divisor+5)^0,c
  1380   000FEE  0E00               	movlw	0
  1381   000FF0  6E14               	movwf	(___aodiv@divisor+6)^0,c
  1382   000FF2  0E00               	movlw	0
  1383   000FF4  6E15               	movwf	(___aodiv@divisor+7)^0,c
  1384   000FF6  EC5A  F008         	call	___aodiv	;wreg free
  1385   000FFA  C006  F039         	movff	?___aodiv,dtoa@n
  1386   000FFE  C007  F03A         	movff	?___aodiv+1,dtoa@n+1
  1387   001002  C008  F03B         	movff	?___aodiv+2,dtoa@n+2
  1388   001006  C009  F03C         	movff	?___aodiv+3,dtoa@n+3
  1389   00100A  C00A  F03D         	movff	?___aodiv+4,dtoa@n+4
  1390   00100E  C00B  F03E         	movff	?___aodiv+5,dtoa@n+5
  1391   001012  C00C  F03F         	movff	?___aodiv+6,dtoa@n+6
  1392   001016  C00D  F040         	movff	?___aodiv+7,dtoa@n+7
  1393   00101A                     l2361:
  1394                           
  1395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1396   00101A  BE43               	btfsc	(dtoa@i+1)^0,7,c
  1397   00101C  EF18  F008         	goto	u1611
  1398   001020  5043               	movf	(dtoa@i+1)^0,w,c
  1399   001022  E108               	bnz	u1610
  1400   001024  0442               	decf	dtoa@i^0,w,c
  1401   001026  A0D8               	btfss	status,0,c
  1402   001028  EF18  F008         	goto	u1611
  1403   00102C  EF1A  F008         	goto	u1610
  1404   001030                     u1611:
  1405   001030  EF36  F008         	goto	l2367
  1406   001034                     u1610:
  1407   001034  5039               	movf	dtoa@n^0,w,c
  1408   001036  103A               	iorwf	(dtoa@n+1)^0,w,c
  1409   001038  103B               	iorwf	(dtoa@n+2)^0,w,c
  1410   00103A  103C               	iorwf	(dtoa@n+3)^0,w,c
  1411   00103C  103D               	iorwf	(dtoa@n+4)^0,w,c
  1412   00103E  103E               	iorwf	(dtoa@n+5)^0,w,c
  1413   001040  103F               	iorwf	(dtoa@n+6)^0,w,c
  1414   001042  1040               	iorwf	(dtoa@n+7)^0,w,c
  1415   001044  A4D8               	btfss	status,2,c
  1416   001046  EF27  F008         	goto	u1621
  1417   00104A  EF29  F008         	goto	u1620
  1418   00104E                     u1621:
  1419   00104E  EF91  F007         	goto	l2351
  1420   001052                     u1620:
  1421   001052  BE36               	btfsc	(dtoa@p+1)^0,7,c
  1422   001054  EF36  F008         	goto	u1630
  1423   001058  5036               	movf	(dtoa@p+1)^0,w,c
  1424   00105A  E106               	bnz	u1631
  1425   00105C  0435               	decf	dtoa@p^0,w,c
  1426   00105E  B0D8               	btfsc	status,0,c
  1427   001060  EF34  F008         	goto	u1631
  1428   001064  EF36  F008         	goto	u1630
  1429   001068                     u1631:
  1430   001068  EF91  F007         	goto	l2351
  1431   00106C                     u1630:
  1432   00106C                     l2367:
  1433                           
  1434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1435   00106C  5041               	movf	dtoa@s^0,w,c
  1436   00106E  B4D8               	btfsc	status,2,c
  1437   001070  EF3C  F008         	goto	u1641
  1438   001074  EF3E  F008         	goto	u1640
  1439   001078                     u1641:
  1440   001078  EF49  F008         	goto	l2373
  1441   00107C                     u1640:
  1442   00107C                     
  1443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1444   00107C  0642               	decf	dtoa@i^0,f,c
  1445   00107E  A0D8               	btfss	status,0,c
  1446   001080  0643               	decf	(dtoa@i+1)^0,f,c
  1447   001082                     
  1448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1449   001082  0EB4               	movlw	low _dbuf
  1450   001084  2442               	addwf	dtoa@i^0,w,c
  1451   001086  6ED9               	movwf	fsr2l,c
  1452   001088  0E01               	movlw	high _dbuf
  1453   00108A  2043               	addwfc	(dtoa@i+1)^0,w,c
  1454   00108C  6EDA               	movwf	fsr2h,c
  1455   00108E  C041  FFDF         	movff	dtoa@s,indf2
  1456   001092                     l2373:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1459   001092  C021  F016         	movff	dtoa@fp,pad@fp
  1460   001096  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  1461   00109A  0EB4               	movlw	low _dbuf
  1462   00109C  2442               	addwf	dtoa@i^0,w,c
  1463   00109E  6E18               	movwf	pad@buf^0,c
  1464   0010A0  0E01               	movlw	high _dbuf
  1465   0010A2  2043               	addwfc	(dtoa@i+1)^0,w,c
  1466   0010A4  6E19               	movwf	(pad@buf+1)^0,c
  1467   0010A6  C037  F01A         	movff	dtoa@w,pad@p
  1468   0010AA  C038  F01B         	movff	dtoa@w+1,pad@p+1
  1469   0010AE  EC1C  F00B         	call	_pad	;wreg free
  1470   0010B2  0012               	return		;funcret
  1471   0010B4                     __end_of_dtoa:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _pad *****************
  1475 ;; Defined at:
  1476 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  1479 ;;		 -> sprintf@f(11), 
  1480 ;;  buf             2   23[COMRAM] PTR unsigned char 
  1481 ;;		 -> dbuf(32), 
  1482 ;;  p               2   25[COMRAM] int 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  w               2   30[COMRAM] int 
  1485 ;;  i               2   28[COMRAM] int 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1495 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;Total ram usage:       11 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 5
  1502 ;; This function calls:
  1503 ;;		_fputc
  1504 ;;		_fputs
  1505 ;; This function is called by:
  1506 ;;		_dtoa
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text5
  1511   001638                     __ptext5:
  1512                           	callstack 0
  1513   001638                     _pad:
  1514                           	callstack 21
  1515   001638                     
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1517   001638  BE1B               	btfsc	(pad@p+1)^0,7,c
  1518   00163A  EF21  F00B         	goto	u1521
  1519   00163E  EF23  F00B         	goto	u1520
  1520   001642                     u1521:
  1521   001642  EF29  F00B         	goto	l2311
  1522   001646                     u1520:
  1523   001646  C01A  F01F         	movff	pad@p,pad@w
  1524   00164A  C01B  F020         	movff	pad@p+1,pad@w+1
  1525   00164E  EF2D  F00B         	goto	l1069
  1526   001652                     l2311:
  1527   001652  0E00               	movlw	0
  1528   001654  6E20               	movwf	(pad@w+1)^0,c
  1529   001656  0E00               	movlw	0
  1530   001658  6E1F               	movwf	pad@w^0,c
  1531   00165A                     l1069:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1534   00165A  0E00               	movlw	0
  1535   00165C  6E1E               	movwf	(pad@i+1)^0,c
  1536   00165E  0E00               	movlw	0
  1537   001660  6E1D               	movwf	pad@i^0,c
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1540   001662  EF3F  F00B         	goto	l2317
  1541   001666                     l2313:
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1544   001666  0E00               	movlw	0
  1545   001668  6E07               	movwf	(fputc@c+1)^0,c
  1546   00166A  0E20               	movlw	32
  1547   00166C  6E06               	movwf	fputc@c^0,c
  1548   00166E  C016  F008         	movff	pad@fp,fputc@fp
  1549   001672  C017  F009         	movff	pad@fp+1,fputc@fp+1
  1550   001676  EC77  F00A         	call	_fputc	;wreg free
  1551   00167A                     
  1552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1553   00167A  4A1D               	infsnz	pad@i^0,f,c
  1554   00167C  2A1E               	incf	(pad@i+1)^0,f,c
  1555   00167E                     l2317:
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1558   00167E  501F               	movf	pad@w^0,w,c
  1559   001680  5C1D               	subwf	pad@i^0,w,c
  1560   001682  501E               	movf	(pad@i+1)^0,w,c
  1561   001684  0A80               	xorlw	128
  1562   001686  6E1C               	movwf	??_pad^0,c
  1563   001688  5020               	movf	(pad@w+1)^0,w,c
  1564   00168A  0A80               	xorlw	128
  1565   00168C  581C               	subwfb	??_pad^0,w,c
  1566   00168E  A0D8               	btfss	status,0,c
  1567   001690  EF4C  F00B         	goto	u1531
  1568   001694  EF4E  F00B         	goto	u1530
  1569   001698                     u1531:
  1570   001698  EF33  F00B         	goto	l2313
  1571   00169C                     u1530:
  1572   00169C                     
  1573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1574   00169C  C018  F00F         	movff	pad@buf,fputs@s
  1575   0016A0  C019  F010         	movff	pad@buf+1,fputs@s+1
  1576   0016A4  C016  F011         	movff	pad@fp,fputs@fp
  1577   0016A8  C017  F012         	movff	pad@fp+1,fputs@fp+1
  1578   0016AC  ECA2  F00C         	call	_fputs	;wreg free
  1579   0016B0  0012               	return		;funcret
  1580   0016B2                     __end_of_pad:
  1581                           	callstack 0
  1582                           
  1583 ;; *************** function _fputs *****************
  1584 ;; Defined at:
  1585 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  s               2   14[COMRAM] PTR const unsigned char 
  1588 ;;		 -> dbuf(32), 
  1589 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1590 ;;		 -> sprintf@f(11), 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  i               2   19[COMRAM] int 
  1593 ;;  c               1   18[COMRAM] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  2   14[COMRAM] int 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;Total ram usage:        7 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 4
  1610 ;; This function calls:
  1611 ;;		_fputc
  1612 ;; This function is called by:
  1613 ;;		_pad
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text6
  1618   001944                     __ptext6:
  1619                           	callstack 0
  1620   001944                     _fputs:
  1621                           	callstack 21
  1622   001944  0E00               	movlw	0
  1623   001946  6E15               	movwf	(fputs@i+1)^0,c
  1624   001948  0E00               	movlw	0
  1625   00194A  6E14               	movwf	fputs@i^0,c
  1626   00194C  EFB3  F00C         	goto	l2225
  1627   001950                     l2221:
  1628   001950  C013  F006         	movff	fputs@c,fputc@c
  1629   001954  6A07               	clrf	(fputc@c+1)^0,c
  1630   001956  C011  F008         	movff	fputs@fp,fputc@fp
  1631   00195A  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  1632   00195E  EC77  F00A         	call	_fputc	;wreg free
  1633   001962  4A14               	infsnz	fputs@i^0,f,c
  1634   001964  2A15               	incf	(fputs@i+1)^0,f,c
  1635   001966                     l2225:
  1636   001966  5014               	movf	fputs@i^0,w,c
  1637   001968  240F               	addwf	fputs@s^0,w,c
  1638   00196A  6ED9               	movwf	fsr2l,c
  1639   00196C  5015               	movf	(fputs@i+1)^0,w,c
  1640   00196E  2010               	addwfc	(fputs@s+1)^0,w,c
  1641   001970  6EDA               	movwf	fsr2h,c
  1642   001972  50DF               	movf	indf2,w,c
  1643   001974  6E13               	movwf	fputs@c^0,c
  1644   001976  5013               	movf	fputs@c^0,w,c
  1645   001978  A4D8               	btfss	status,2,c
  1646   00197A  EFC1  F00C         	goto	u1381
  1647   00197E  EFC3  F00C         	goto	u1380
  1648   001982                     u1381:
  1649   001982  EFA8  F00C         	goto	l2221
  1650   001986                     u1380:
  1651   001986  0012               	return		;funcret
  1652   001988                     __end_of_fputs:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function _fputc *****************
  1656 ;; Defined at:
  1657 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  c               2    5[COMRAM] int 
  1660 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  1661 ;;		 -> sprintf@f(11), 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  2    5[COMRAM] int 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1675 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1676 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;Total ram usage:        9 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; Hardware stack levels required when called: 3
  1680 ;; This function calls:
  1681 ;;		_putch
  1682 ;; This function is called by:
  1683 ;;		_pad
  1684 ;;		_vfpfcnvrt
  1685 ;;		_fputs
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text7
  1690   0014EE                     __ptext7:
  1691                           	callstack 0
  1692   0014EE                     _fputc:
  1693                           	callstack 24
  1694   0014EE  5008               	movf	fputc@fp^0,w,c
  1695   0014F0  1009               	iorwf	(fputc@fp+1)^0,w,c
  1696   0014F2  B4D8               	btfsc	status,2,c
  1697   0014F4  EF7E  F00A         	goto	u1341
  1698   0014F8  EF80  F00A         	goto	u1340
  1699   0014FC                     u1341:
  1700   0014FC  EF89  F00A         	goto	l2209
  1701   001500                     u1340:
  1702   001500  5008               	movf	fputc@fp^0,w,c
  1703   001502  1009               	iorwf	(fputc@fp+1)^0,w,c
  1704   001504  A4D8               	btfss	status,2,c
  1705   001506  EF87  F00A         	goto	u1351
  1706   00150A  EF89  F00A         	goto	u1350
  1707   00150E                     u1351:
  1708   00150E  EF8E  F00A         	goto	l2211
  1709   001512                     u1350:
  1710   001512                     l2209:
  1711   001512  5006               	movf	fputc@c^0,w,c
  1712   001514  EC0A  F00E         	call	_putch
  1713   001518  EFDB  F00A         	goto	l1124
  1714   00151C                     l2211:
  1715   00151C  EE20 F009          	lfsr	2,9
  1716   001520  5008               	movf	fputc@fp^0,w,c
  1717   001522  26D9               	addwf	fsr2l,f,c
  1718   001524  5009               	movf	(fputc@fp+1)^0,w,c
  1719   001526  22DA               	addwfc	fsr2h,f,c
  1720   001528  50DE               	movf	postinc2,w,c
  1721   00152A  10DE               	iorwf	postinc2,w,c
  1722   00152C  B4D8               	btfsc	status,2,c
  1723   00152E  EF9B  F00A         	goto	u1361
  1724   001532  EF9D  F00A         	goto	u1360
  1725   001536                     u1361:
  1726   001536  EFB8  F00A         	goto	l2215
  1727   00153A                     u1360:
  1728   00153A  EE20 F009          	lfsr	2,9
  1729   00153E  5008               	movf	fputc@fp^0,w,c
  1730   001540  26D9               	addwf	fsr2l,f,c
  1731   001542  5009               	movf	(fputc@fp+1)^0,w,c
  1732   001544  22DA               	addwfc	fsr2h,f,c
  1733   001546  EE10 F003          	lfsr	1,3
  1734   00154A  5008               	movf	fputc@fp^0,w,c
  1735   00154C  26E1               	addwf	fsr1l,f,c
  1736   00154E  5009               	movf	(fputc@fp+1)^0,w,c
  1737   001550  22E2               	addwfc	fsr1h,f,c
  1738   001552  50DE               	movf	postinc2,w,c
  1739   001554  5CE6               	subwf	postinc1,w,c
  1740   001556  50E6               	movf	postinc1,w,c
  1741   001558  0A80               	xorlw	128
  1742   00155A  6E0E               	movwf	(??_fputc+4)^0,c
  1743   00155C  50DE               	movf	postinc2,w,c
  1744   00155E  0A80               	xorlw	128
  1745   001560  580E               	subwfb	(??_fputc+4)^0,w,c
  1746   001562  B0D8               	btfsc	status,0,c
  1747   001564  EFB6  F00A         	goto	u1371
  1748   001568  EFB8  F00A         	goto	u1370
  1749   00156C                     u1371:
  1750   00156C  EFDB  F00A         	goto	l1124
  1751   001570                     u1370:
  1752   001570                     l2215:
  1753   001570  EE20 F003          	lfsr	2,3
  1754   001574  5008               	movf	fputc@fp^0,w,c
  1755   001576  26D9               	addwf	fsr2l,f,c
  1756   001578  5009               	movf	(fputc@fp+1)^0,w,c
  1757   00157A  22DA               	addwfc	fsr2h,f,c
  1758   00157C  CFDE F00A          	movff	postinc2,??_fputc
  1759   001580  CFDD F00B          	movff	postdec2,??_fputc+1
  1760   001584  C008  FFD9         	movff	fputc@fp,fsr2l
  1761   001588  C009  FFDA         	movff	fputc@fp+1,fsr2h
  1762   00158C  CFDE F00C          	movff	postinc2,??_fputc+2
  1763   001590  CFDD F00D          	movff	postdec2,??_fputc+3
  1764   001594  500A               	movf	??_fputc^0,w,c
  1765   001596  240C               	addwf	(??_fputc+2)^0,w,c
  1766   001598  6ED9               	movwf	fsr2l,c
  1767   00159A  500B               	movf	(??_fputc+1)^0,w,c
  1768   00159C  200D               	addwfc	(??_fputc+3)^0,w,c
  1769   00159E  6EDA               	movwf	fsr2h,c
  1770   0015A0  C006  FFDF         	movff	fputc@c,indf2
  1771   0015A4  EE20 F003          	lfsr	2,3
  1772   0015A8  5008               	movf	fputc@fp^0,w,c
  1773   0015AA  26D9               	addwf	fsr2l,f,c
  1774   0015AC  5009               	movf	(fputc@fp+1)^0,w,c
  1775   0015AE  22DA               	addwfc	fsr2h,f,c
  1776   0015B0  2ADE               	incf	postinc2,f,c
  1777   0015B2  0E00               	movlw	0
  1778   0015B4  22DD               	addwfc	postdec2,f,c
  1779   0015B6                     l1124:
  1780   0015B6  0012               	return		;funcret
  1781   0015B8                     __end_of_fputc:
  1782                           	callstack 0
  1783                           
  1784 ;; *************** function _putch *****************
  1785 ;; Defined at:
  1786 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  c               1    wreg     unsigned char 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  c               1    0[COMRAM] unsigned char 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; Hardware stack levels required when called: 2
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_fputc
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text8
  1815   001C14                     __ptext8:
  1816                           	callstack 0
  1817   001C14                     _putch:
  1818                           	callstack 24
  1819   001C14  0012               	return		;funcret
  1820   001C16                     __end_of_putch:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _abs *****************
  1824 ;; Defined at:
  1825 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  a               2   23[COMRAM] int 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  2   23[COMRAM] int 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1843 ;;Total ram usage:        4 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 2
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_dtoa
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text9
  1854   0019CA                     __ptext9:
  1855                           	callstack 0
  1856   0019CA                     _abs:
  1857                           	callstack 24
  1858   0019CA  BE19               	btfsc	(abs@a+1)^0,7,c
  1859   0019CC  EFF2  F00C         	goto	u1540
  1860   0019D0  5019               	movf	(abs@a+1)^0,w,c
  1861   0019D2  E106               	bnz	u1541
  1862   0019D4  0418               	decf	abs@a^0,w,c
  1863   0019D6  B0D8               	btfsc	status,0,c
  1864   0019D8  EFF0  F00C         	goto	u1541
  1865   0019DC  EFF2  F00C         	goto	u1540
  1866   0019E0                     u1541:
  1867   0019E0  EF00  F00D         	goto	l1109
  1868   0019E4                     u1540:
  1869   0019E4  C018  F01A         	movff	abs@a,??_abs
  1870   0019E8  C019  F01B         	movff	abs@a+1,??_abs+1
  1871   0019EC  1E1A               	comf	??_abs^0,f,c
  1872   0019EE  1E1B               	comf	(??_abs+1)^0,f,c
  1873   0019F0  4A1A               	infsnz	??_abs^0,f,c
  1874   0019F2  2A1B               	incf	(??_abs+1)^0,f,c
  1875   0019F4  C01A  F018         	movff	??_abs,?_abs
  1876   0019F8  C01B  F019         	movff	??_abs+1,?_abs+1
  1877   0019FC  EF04  F00D         	goto	l1112
  1878   001A00                     l1109:
  1879   001A00  C018  F018         	movff	abs@a,?_abs
  1880   001A04  C019  F019         	movff	abs@a+1,?_abs+1
  1881   001A08                     l1112:
  1882   001A08  0012               	return		;funcret
  1883   001A0A                     __end_of_abs:
  1884                           	callstack 0
  1885                           
  1886 ;; *************** function ___aomod *****************
  1887 ;; Defined at:
  1888 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  dividend        8    5[COMRAM] long long 
  1891 ;;  divisor         8   13[COMRAM] long long 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  sign            1   22[COMRAM] unsigned char 
  1894 ;;  counter         1   21[COMRAM] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  8    5[COMRAM] long long 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1904 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1907 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1908 ;;Total ram usage:       18 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 2
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_dtoa
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text10
  1919   00123C                     __ptext10:
  1920                           	callstack 0
  1921   00123C                     ___aomod:
  1922                           	callstack 24
  1923   00123C  0E00               	movlw	0
  1924   00123E  6E17               	movwf	___aomod@sign^0,c
  1925   001240  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  1926   001242  EF27  F009         	goto	u1460
  1927   001246  EF25  F009         	goto	u1461
  1928   00124A                     u1461:
  1929   00124A  EF39  F009         	goto	l2279
  1930   00124E                     u1460:
  1931   00124E  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  1932   001250  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  1933   001252  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  1934   001254  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  1935   001256  1E09               	comf	(___aomod@dividend+3)^0,f,c
  1936   001258  1E08               	comf	(___aomod@dividend+2)^0,f,c
  1937   00125A  1E07               	comf	(___aomod@dividend+1)^0,f,c
  1938   00125C  6C06               	negf	___aomod@dividend^0,c
  1939   00125E  0E00               	movlw	0
  1940   001260  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  1941   001262  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  1942   001264  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  1943   001266  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  1944   001268  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  1945   00126A  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  1946   00126C  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  1947   00126E  0E01               	movlw	1
  1948   001270  6E17               	movwf	___aomod@sign^0,c
  1949   001272                     l2279:
  1950   001272  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  1951   001274  EF40  F009         	goto	u1470
  1952   001278  EF3E  F009         	goto	u1471
  1953   00127C                     u1471:
  1954   00127C  EF50  F009         	goto	l2283
  1955   001280                     u1470:
  1956   001280  1E15               	comf	(___aomod@divisor+7)^0,f,c
  1957   001282  1E14               	comf	(___aomod@divisor+6)^0,f,c
  1958   001284  1E13               	comf	(___aomod@divisor+5)^0,f,c
  1959   001286  1E12               	comf	(___aomod@divisor+4)^0,f,c
  1960   001288  1E11               	comf	(___aomod@divisor+3)^0,f,c
  1961   00128A  1E10               	comf	(___aomod@divisor+2)^0,f,c
  1962   00128C  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  1963   00128E  6C0E               	negf	___aomod@divisor^0,c
  1964   001290  0E00               	movlw	0
  1965   001292  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  1966   001294  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  1967   001296  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  1968   001298  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  1969   00129A  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  1970   00129C  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  1971   00129E  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  1972   0012A0                     l2283:
  1973   0012A0  500E               	movf	___aomod@divisor^0,w,c
  1974   0012A2  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  1975   0012A4  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  1976   0012A6  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  1977   0012A8  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  1978   0012AA  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  1979   0012AC  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  1980   0012AE  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  1981   0012B0  B4D8               	btfsc	status,2,c
  1982   0012B2  EF5D  F009         	goto	u1481
  1983   0012B6  EF5F  F009         	goto	u1480
  1984   0012BA                     u1481:
  1985   0012BA  EFA7  F009         	goto	l2299
  1986   0012BE                     u1480:
  1987   0012BE  0E01               	movlw	1
  1988   0012C0  6E16               	movwf	___aomod@counter^0,c
  1989   0012C2  EF6D  F009         	goto	l2289
  1990   0012C6                     l2287:
  1991   0012C6  90D8               	bcf	status,0,c
  1992   0012C8  360E               	rlcf	___aomod@divisor^0,f,c
  1993   0012CA  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  1994   0012CC  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  1995   0012CE  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  1996   0012D0  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  1997   0012D2  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  1998   0012D4  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  1999   0012D6  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  2000   0012D8  2A16               	incf	___aomod@counter^0,f,c
  2001   0012DA                     l2289:
  2002   0012DA  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  2003   0012DC  EF72  F009         	goto	u1491
  2004   0012E0  EF74  F009         	goto	u1490
  2005   0012E4                     u1491:
  2006   0012E4  EF63  F009         	goto	l2287
  2007   0012E8                     u1490:
  2008   0012E8                     l2291:
  2009   0012E8  500E               	movf	___aomod@divisor^0,w,c
  2010   0012EA  5C06               	subwf	___aomod@dividend^0,w,c
  2011   0012EC  500F               	movf	(___aomod@divisor+1)^0,w,c
  2012   0012EE  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  2013   0012F0  5010               	movf	(___aomod@divisor+2)^0,w,c
  2014   0012F2  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  2015   0012F4  5011               	movf	(___aomod@divisor+3)^0,w,c
  2016   0012F6  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  2017   0012F8  5012               	movf	(___aomod@divisor+4)^0,w,c
  2018   0012FA  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  2019   0012FC  5013               	movf	(___aomod@divisor+5)^0,w,c
  2020   0012FE  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  2021   001300  5014               	movf	(___aomod@divisor+6)^0,w,c
  2022   001302  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  2023   001304  5015               	movf	(___aomod@divisor+7)^0,w,c
  2024   001306  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  2025   001308  A0D8               	btfss	status,0,c
  2026   00130A  EF89  F009         	goto	u1501
  2027   00130E  EF8B  F009         	goto	u1500
  2028   001312                     u1501:
  2029   001312  EF9B  F009         	goto	l2295
  2030   001316                     u1500:
  2031   001316  500E               	movf	___aomod@divisor^0,w,c
  2032   001318  5E06               	subwf	___aomod@dividend^0,f,c
  2033   00131A  500F               	movf	(___aomod@divisor+1)^0,w,c
  2034   00131C  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  2035   00131E  5010               	movf	(___aomod@divisor+2)^0,w,c
  2036   001320  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  2037   001322  5011               	movf	(___aomod@divisor+3)^0,w,c
  2038   001324  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  2039   001326  5012               	movf	(___aomod@divisor+4)^0,w,c
  2040   001328  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  2041   00132A  5013               	movf	(___aomod@divisor+5)^0,w,c
  2042   00132C  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  2043   00132E  5014               	movf	(___aomod@divisor+6)^0,w,c
  2044   001330  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  2045   001332  5015               	movf	(___aomod@divisor+7)^0,w,c
  2046   001334  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  2047   001336                     l2295:
  2048   001336  90D8               	bcf	status,0,c
  2049   001338  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  2050   00133A  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  2051   00133C  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  2052   00133E  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  2053   001340  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  2054   001342  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  2055   001344  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  2056   001346  320E               	rrcf	___aomod@divisor^0,f,c
  2057   001348  2E16               	decfsz	___aomod@counter^0,f,c
  2058   00134A  EF74  F009         	goto	l2291
  2059   00134E                     l2299:
  2060   00134E  5017               	movf	___aomod@sign^0,w,c
  2061   001350  B4D8               	btfsc	status,2,c
  2062   001352  EFAD  F009         	goto	u1511
  2063   001356  EFAF  F009         	goto	u1510
  2064   00135A                     u1511:
  2065   00135A  EFBF  F009         	goto	l2303
  2066   00135E                     u1510:
  2067   00135E  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  2068   001360  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  2069   001362  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  2070   001364  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  2071   001366  1E09               	comf	(___aomod@dividend+3)^0,f,c
  2072   001368  1E08               	comf	(___aomod@dividend+2)^0,f,c
  2073   00136A  1E07               	comf	(___aomod@dividend+1)^0,f,c
  2074   00136C  6C06               	negf	___aomod@dividend^0,c
  2075   00136E  0E00               	movlw	0
  2076   001370  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  2077   001372  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  2078   001374  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  2079   001376  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  2080   001378  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  2081   00137A  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  2082   00137C  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  2083   00137E                     l2303:
  2084   00137E  C006  F006         	movff	___aomod@dividend,?___aomod
  2085   001382  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  2086   001386  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  2087   00138A  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  2088   00138E  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  2089   001392  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  2090   001396  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  2091   00139A  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  2092   00139E  0012               	return		;funcret
  2093   0013A0                     __end_of___aomod:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function ___aodiv *****************
  2097 ;; Defined at:
  2098 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  dividend        8    5[COMRAM] long long 
  2101 ;;  divisor         8   13[COMRAM] long long 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  quotient        8   23[COMRAM] long long 
  2104 ;;  sign            1   22[COMRAM] unsigned char 
  2105 ;;  counter         1   21[COMRAM] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  8    5[COMRAM] long long 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2115 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2119 ;;Total ram usage:       26 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 2
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_dtoa
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text11
  2130   0010B4                     __ptext11:
  2131                           	callstack 0
  2132   0010B4                     ___aodiv:
  2133                           	callstack 24
  2134   0010B4  0E00               	movlw	0
  2135   0010B6  6E17               	movwf	___aodiv@sign^0,c
  2136   0010B8  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  2137   0010BA  EF63  F008         	goto	u1390
  2138   0010BE  EF61  F008         	goto	u1391
  2139   0010C2                     u1391:
  2140   0010C2  EF75  F008         	goto	l2235
  2141   0010C6                     u1390:
  2142   0010C6  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  2143   0010C8  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  2144   0010CA  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  2145   0010CC  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  2146   0010CE  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  2147   0010D0  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  2148   0010D2  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  2149   0010D4  6C0E               	negf	___aodiv@divisor^0,c
  2150   0010D6  0E00               	movlw	0
  2151   0010D8  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  2152   0010DA  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  2153   0010DC  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  2154   0010DE  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  2155   0010E0  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  2156   0010E2  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  2157   0010E4  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  2158   0010E6  0E01               	movlw	1
  2159   0010E8  6E17               	movwf	___aodiv@sign^0,c
  2160   0010EA                     l2235:
  2161   0010EA  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  2162   0010EC  EF7C  F008         	goto	u1400
  2163   0010F0  EF7A  F008         	goto	u1401
  2164   0010F4                     u1401:
  2165   0010F4  EF8E  F008         	goto	l2241
  2166   0010F8                     u1400:
  2167   0010F8  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  2168   0010FA  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  2169   0010FC  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  2170   0010FE  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  2171   001100  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  2172   001102  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  2173   001104  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  2174   001106  6C06               	negf	___aodiv@dividend^0,c
  2175   001108  0E00               	movlw	0
  2176   00110A  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  2177   00110C  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  2178   00110E  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  2179   001110  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  2180   001112  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  2181   001114  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  2182   001116  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  2183   001118  0E01               	movlw	1
  2184   00111A  1A17               	xorwf	___aodiv@sign^0,f,c
  2185   00111C                     l2241:
  2186   00111C  EE20  F018         	lfsr	2,___aodiv@quotient
  2187   001120  0E07               	movlw	7
  2188   001122                     u1411:
  2189   001122  6ADE               	clrf	postinc2,c
  2190   001124  06E8               	decf	wreg,f,c
  2191   001126  E2FD               	bc	u1411
  2192   001128  500E               	movf	___aodiv@divisor^0,w,c
  2193   00112A  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  2194   00112C  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  2195   00112E  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  2196   001130  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  2197   001132  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  2198   001134  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  2199   001136  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  2200   001138  B4D8               	btfsc	status,2,c
  2201   00113A  EFA1  F008         	goto	u1421
  2202   00113E  EFA3  F008         	goto	u1420
  2203   001142                     u1421:
  2204   001142  EFF5  F008         	goto	l2263
  2205   001146                     u1420:
  2206   001146  0E01               	movlw	1
  2207   001148  6E16               	movwf	___aodiv@counter^0,c
  2208   00114A  EFB1  F008         	goto	l2249
  2209   00114E                     l2247:
  2210   00114E  90D8               	bcf	status,0,c
  2211   001150  360E               	rlcf	___aodiv@divisor^0,f,c
  2212   001152  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  2213   001154  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  2214   001156  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  2215   001158  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  2216   00115A  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  2217   00115C  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  2218   00115E  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  2219   001160  2A16               	incf	___aodiv@counter^0,f,c
  2220   001162                     l2249:
  2221   001162  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  2222   001164  EFB6  F008         	goto	u1431
  2223   001168  EFB8  F008         	goto	u1430
  2224   00116C                     u1431:
  2225   00116C  EFA7  F008         	goto	l2247
  2226   001170                     u1430:
  2227   001170                     l2251:
  2228   001170  90D8               	bcf	status,0,c
  2229   001172  3618               	rlcf	___aodiv@quotient^0,f,c
  2230   001174  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  2231   001176  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  2232   001178  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  2233   00117A  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  2234   00117C  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  2235   00117E  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  2236   001180  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  2237   001182  500E               	movf	___aodiv@divisor^0,w,c
  2238   001184  5C06               	subwf	___aodiv@dividend^0,w,c
  2239   001186  500F               	movf	(___aodiv@divisor+1)^0,w,c
  2240   001188  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  2241   00118A  5010               	movf	(___aodiv@divisor+2)^0,w,c
  2242   00118C  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  2243   00118E  5011               	movf	(___aodiv@divisor+3)^0,w,c
  2244   001190  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  2245   001192  5012               	movf	(___aodiv@divisor+4)^0,w,c
  2246   001194  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  2247   001196  5013               	movf	(___aodiv@divisor+5)^0,w,c
  2248   001198  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  2249   00119A  5014               	movf	(___aodiv@divisor+6)^0,w,c
  2250   00119C  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  2251   00119E  5015               	movf	(___aodiv@divisor+7)^0,w,c
  2252   0011A0  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  2253   0011A2  A0D8               	btfss	status,0,c
  2254   0011A4  EFD6  F008         	goto	u1441
  2255   0011A8  EFD8  F008         	goto	u1440
  2256   0011AC                     u1441:
  2257   0011AC  EFE9  F008         	goto	l2259
  2258   0011B0                     u1440:
  2259   0011B0  500E               	movf	___aodiv@divisor^0,w,c
  2260   0011B2  5E06               	subwf	___aodiv@dividend^0,f,c
  2261   0011B4  500F               	movf	(___aodiv@divisor+1)^0,w,c
  2262   0011B6  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  2263   0011B8  5010               	movf	(___aodiv@divisor+2)^0,w,c
  2264   0011BA  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  2265   0011BC  5011               	movf	(___aodiv@divisor+3)^0,w,c
  2266   0011BE  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  2267   0011C0  5012               	movf	(___aodiv@divisor+4)^0,w,c
  2268   0011C2  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  2269   0011C4  5013               	movf	(___aodiv@divisor+5)^0,w,c
  2270   0011C6  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  2271   0011C8  5014               	movf	(___aodiv@divisor+6)^0,w,c
  2272   0011CA  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  2273   0011CC  5015               	movf	(___aodiv@divisor+7)^0,w,c
  2274   0011CE  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  2275   0011D0  8018               	bsf	___aodiv@quotient^0,0,c
  2276   0011D2                     l2259:
  2277   0011D2  90D8               	bcf	status,0,c
  2278   0011D4  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  2279   0011D6  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  2280   0011D8  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  2281   0011DA  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  2282   0011DC  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  2283   0011DE  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  2284   0011E0  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  2285   0011E2  320E               	rrcf	___aodiv@divisor^0,f,c
  2286   0011E4  2E16               	decfsz	___aodiv@counter^0,f,c
  2287   0011E6  EFB8  F008         	goto	l2251
  2288   0011EA                     l2263:
  2289   0011EA  5017               	movf	___aodiv@sign^0,w,c
  2290   0011EC  B4D8               	btfsc	status,2,c
  2291   0011EE  EFFB  F008         	goto	u1451
  2292   0011F2  EFFD  F008         	goto	u1450
  2293   0011F6                     u1451:
  2294   0011F6  EF0D  F009         	goto	l2267
  2295   0011FA                     u1450:
  2296   0011FA  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  2297   0011FC  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  2298   0011FE  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  2299   001200  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  2300   001202  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  2301   001204  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  2302   001206  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  2303   001208  6C18               	negf	___aodiv@quotient^0,c
  2304   00120A  0E00               	movlw	0
  2305   00120C  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  2306   00120E  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  2307   001210  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  2308   001212  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  2309   001214  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  2310   001216  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  2311   001218  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  2312   00121A                     l2267:
  2313   00121A  C018  F006         	movff	___aodiv@quotient,?___aodiv
  2314   00121E  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  2315   001222  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  2316   001226  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  2317   00122A  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  2318   00122E  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  2319   001232  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  2320   001236  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  2321   00123A  0012               	return		;funcret
  2322   00123C                     __end_of___aodiv:
  2323                           	callstack 0
  2324                           
  2325 ;; *************** function _levels *****************
  2326 ;; Defined at:
  2327 ;;		line 61 in file "card.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  i               2   16[COMRAM] int 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;Total ram usage:        4 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 5
  2348 ;; This function calls:
  2349 ;;		_Light
  2350 ;;		_color_read_Blue
  2351 ;;		_color_read_Clear
  2352 ;;		_color_read_Green
  2353 ;;		_color_read_Red
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;;		_readcard
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text12
  2361   0017B4                     __ptext12:
  2362                           	callstack 0
  2363   0017B4                     _levels:
  2364                           	callstack 25
  2365   0017B4                     
  2366                           ;card.c: 62:         Light(i);
  2367   0017B4  5011               	movf	levels@i^0,w,c
  2368   0017B6  EC59  F00B         	call	_Light
  2369   0017BA                     
  2370                           ;card.c: 63:         _delay((unsigned long)((900)*(64000000/4000.0)));
  2371   0017BA  0E4A               	movlw	74
  2372   0017BC  6E14               	movwf	(??_levels+1)^0,c
  2373   0017BE  0E0E               	movlw	14
  2374   0017C0  6E13               	movwf	??_levels^0,c
  2375   0017C2  0E19               	movlw	25
  2376   0017C4                     u1697:
  2377   0017C4  2EE8               	decfsz	wreg,f,c
  2378   0017C6  D7FE               	bra	u1697
  2379   0017C8  2E13               	decfsz	??_levels^0,f,c
  2380   0017CA  D7FC               	bra	u1697
  2381   0017CC  2E14               	decfsz	(??_levels+1)^0,f,c
  2382   0017CE  D7FA               	bra	u1697
  2383   0017D0  F000               	nop	
  2384   0017D2                     
  2385                           ;card.c: 64:         red = color_read_Red();
  2386   0017D2  EC02  F00C         	call	_color_read_Red	;wreg free
  2387   0017D6  C00A  F0FA         	movff	?_color_read_Red,_red
  2388   0017DA  C00B  F0FB         	movff	?_color_read_Red+1,_red+1
  2389   0017DE                     
  2390                           ;card.c: 65:         blue = color_read_Blue();
  2391   0017DE  EC7A  F00C         	call	_color_read_Blue	;wreg free
  2392   0017E2  C00A  F0F8         	movff	?_color_read_Blue,_blue
  2393   0017E6  C00B  F0F9         	movff	?_color_read_Blue+1,_blue+1
  2394   0017EA                     
  2395                           ;card.c: 66:         green = color_read_Green();
  2396   0017EA  EC2A  F00C         	call	_color_read_Green	;wreg free
  2397   0017EE  C00A  F0F6         	movff	?_color_read_Green,_green
  2398   0017F2  C00B  F0F7         	movff	?_color_read_Green+1,_green+1
  2399   0017F6                     
  2400                           ;card.c: 67:         clear = color_read_Clear();
  2401   0017F6  EC52  F00C         	call	_color_read_Clear	;wreg free
  2402   0017FA  C00A  F0F4         	movff	?_color_read_Clear,_clear
  2403   0017FE  C00B  F0F5         	movff	?_color_read_Clear+1,_clear+1
  2404   001802  0012               	return		;funcret
  2405   001804                     __end_of_levels:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _color_read_Red *****************
  2409 ;; Defined at:
  2410 ;;		line 29 in file "color.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  tmp             2   14[COMRAM] unsigned int 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  2    9[COMRAM] unsigned int 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2428 ;;Total ram usage:        7 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 4
  2431 ;; This function calls:
  2432 ;;		_I2C_2_Master_Read
  2433 ;;		_I2C_2_Master_RepStart
  2434 ;;		_I2C_2_Master_Start
  2435 ;;		_I2C_2_Master_Stop
  2436 ;;		_I2C_2_Master_Write
  2437 ;; This function is called by:
  2438 ;;		_levels
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text13
  2443   001804                     __ptext13:
  2444                           	callstack 0
  2445   001804                     _color_read_Red:
  2446                           	callstack 25
  2447   001804                     
  2448                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  2449   001804  EC05  F00E         	call	_I2C_2_Master_Start	;wreg free
  2450                           
  2451                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  2452   001808  0E52               	movlw	82
  2453   00180A  ECF5  F00D         	call	_I2C_2_Master_Write
  2454                           
  2455                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  2456   00180E  0EB6               	movlw	182
  2457   001810  ECF5  F00D         	call	_I2C_2_Master_Write
  2458                           
  2459                           ;color.c: 35:  I2C_2_Master_RepStart();
  2460   001814  ECFB  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2461                           
  2462                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  2463   001818  0E53               	movlw	83
  2464   00181A  ECF5  F00D         	call	_I2C_2_Master_Write
  2465                           
  2466                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  2467   00181E  0E01               	movlw	1
  2468   001820  ECC4  F00C         	call	_I2C_2_Master_Read
  2469   001824  6E0C               	movwf	??_color_read_Red^0,c
  2470   001826  500C               	movf	??_color_read_Red^0,w,c
  2471   001828  6E0F               	movwf	color_read_Red@tmp^0,c
  2472   00182A  6A10               	clrf	(color_read_Red@tmp+1)^0,c
  2473                           
  2474                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2475   00182C  0E00               	movlw	0
  2476   00182E  ECC4  F00C         	call	_I2C_2_Master_Read
  2477   001832  6E0C               	movwf	??_color_read_Red^0,c
  2478   001834  500C               	movf	??_color_read_Red^0,w,c
  2479   001836  6E0E               	movwf	(??_color_read_Red+2)^0,c
  2480   001838  6A0D               	clrf	(??_color_read_Red+1)^0,c
  2481   00183A  500F               	movf	color_read_Red@tmp^0,w,c
  2482   00183C  100D               	iorwf	(??_color_read_Red+1)^0,w,c
  2483   00183E  6E0F               	movwf	color_read_Red@tmp^0,c
  2484   001840  5010               	movf	(color_read_Red@tmp+1)^0,w,c
  2485   001842  100E               	iorwf	(??_color_read_Red+2)^0,w,c
  2486   001844  6E10               	movwf	(color_read_Red@tmp+1)^0,c
  2487                           
  2488                           ;color.c: 39:  I2C_2_Master_Stop();
  2489   001846  EC00  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2490   00184A                     
  2491                           ;color.c: 40:  return tmp;
  2492   00184A  C00F  F00A         	movff	color_read_Red@tmp,?_color_read_Red
  2493   00184E  C010  F00B         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2494   001852  0012               	return		;funcret
  2495   001854                     __end_of_color_read_Red:
  2496                           	callstack 0
  2497                           
  2498 ;; *************** function _color_read_Green *****************
  2499 ;; Defined at:
  2500 ;;		line 59 in file "color.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  tmp             2   14[COMRAM] unsigned int 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  2    9[COMRAM] unsigned int 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2515 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;Total ram usage:        7 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; Hardware stack levels required when called: 4
  2521 ;; This function calls:
  2522 ;;		_I2C_2_Master_Read
  2523 ;;		_I2C_2_Master_RepStart
  2524 ;;		_I2C_2_Master_Start
  2525 ;;		_I2C_2_Master_Stop
  2526 ;;		_I2C_2_Master_Write
  2527 ;; This function is called by:
  2528 ;;		_levels
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text14
  2533   001854                     __ptext14:
  2534                           	callstack 0
  2535   001854                     _color_read_Green:
  2536                           	callstack 25
  2537   001854                     
  2538                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  2539   001854  EC05  F00E         	call	_I2C_2_Master_Start	;wreg free
  2540                           
  2541                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  2542   001858  0E52               	movlw	82
  2543   00185A  ECF5  F00D         	call	_I2C_2_Master_Write
  2544                           
  2545                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x18);
  2546   00185E  0EB8               	movlw	184
  2547   001860  ECF5  F00D         	call	_I2C_2_Master_Write
  2548                           
  2549                           ;color.c: 65:  I2C_2_Master_RepStart();
  2550   001864  ECFB  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2551                           
  2552                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  2553   001868  0E53               	movlw	83
  2554   00186A  ECF5  F00D         	call	_I2C_2_Master_Write
  2555                           
  2556                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  2557   00186E  0E01               	movlw	1
  2558   001870  ECC4  F00C         	call	_I2C_2_Master_Read
  2559   001874  6E0C               	movwf	??_color_read_Green^0,c
  2560   001876  500C               	movf	??_color_read_Green^0,w,c
  2561   001878  6E0F               	movwf	color_read_Green@tmp^0,c
  2562   00187A  6A10               	clrf	(color_read_Green@tmp+1)^0,c
  2563                           
  2564                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2565   00187C  0E00               	movlw	0
  2566   00187E  ECC4  F00C         	call	_I2C_2_Master_Read
  2567   001882  6E0C               	movwf	??_color_read_Green^0,c
  2568   001884  500C               	movf	??_color_read_Green^0,w,c
  2569   001886  6E0E               	movwf	(??_color_read_Green+2)^0,c
  2570   001888  6A0D               	clrf	(??_color_read_Green+1)^0,c
  2571   00188A  500F               	movf	color_read_Green@tmp^0,w,c
  2572   00188C  100D               	iorwf	(??_color_read_Green+1)^0,w,c
  2573   00188E  6E0F               	movwf	color_read_Green@tmp^0,c
  2574   001890  5010               	movf	(color_read_Green@tmp+1)^0,w,c
  2575   001892  100E               	iorwf	(??_color_read_Green+2)^0,w,c
  2576   001894  6E10               	movwf	(color_read_Green@tmp+1)^0,c
  2577                           
  2578                           ;color.c: 69:  I2C_2_Master_Stop();
  2579   001896  EC00  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2580   00189A                     
  2581                           ;color.c: 70:  return tmp;
  2582   00189A  C00F  F00A         	movff	color_read_Green@tmp,?_color_read_Green
  2583   00189E  C010  F00B         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2584   0018A2  0012               	return		;funcret
  2585   0018A4                     __end_of_color_read_Green:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _color_read_Clear *****************
  2589 ;; Defined at:
  2590 ;;		line 73 in file "color.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  tmp             2   14[COMRAM] unsigned int 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2    9[COMRAM] unsigned int 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;Total ram usage:        7 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 4
  2611 ;; This function calls:
  2612 ;;		_I2C_2_Master_Read
  2613 ;;		_I2C_2_Master_RepStart
  2614 ;;		_I2C_2_Master_Start
  2615 ;;		_I2C_2_Master_Stop
  2616 ;;		_I2C_2_Master_Write
  2617 ;; This function is called by:
  2618 ;;		_levels
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text15
  2623   0018A4                     __ptext15:
  2624                           	callstack 0
  2625   0018A4                     _color_read_Clear:
  2626                           	callstack 25
  2627   0018A4                     
  2628                           ;color.c: 75:  unsigned int tmp;;color.c: 76:  I2C_2_Master_Start();
  2629   0018A4  EC05  F00E         	call	_I2C_2_Master_Start	;wreg free
  2630                           
  2631                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  2632   0018A8  0E52               	movlw	82
  2633   0018AA  ECF5  F00D         	call	_I2C_2_Master_Write
  2634                           
  2635                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x14);
  2636   0018AE  0EB4               	movlw	180
  2637   0018B0  ECF5  F00D         	call	_I2C_2_Master_Write
  2638                           
  2639                           ;color.c: 79:  I2C_2_Master_RepStart();
  2640   0018B4  ECFB  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2641                           
  2642                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  2643   0018B8  0E53               	movlw	83
  2644   0018BA  ECF5  F00D         	call	_I2C_2_Master_Write
  2645                           
  2646                           ;color.c: 81:  tmp=I2C_2_Master_Read(1);
  2647   0018BE  0E01               	movlw	1
  2648   0018C0  ECC4  F00C         	call	_I2C_2_Master_Read
  2649   0018C4  6E0C               	movwf	??_color_read_Clear^0,c
  2650   0018C6  500C               	movf	??_color_read_Clear^0,w,c
  2651   0018C8  6E0F               	movwf	color_read_Clear@tmp^0,c
  2652   0018CA  6A10               	clrf	(color_read_Clear@tmp+1)^0,c
  2653                           
  2654                           ;color.c: 82:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2655   0018CC  0E00               	movlw	0
  2656   0018CE  ECC4  F00C         	call	_I2C_2_Master_Read
  2657   0018D2  6E0C               	movwf	??_color_read_Clear^0,c
  2658   0018D4  500C               	movf	??_color_read_Clear^0,w,c
  2659   0018D6  6E0E               	movwf	(??_color_read_Clear+2)^0,c
  2660   0018D8  6A0D               	clrf	(??_color_read_Clear+1)^0,c
  2661   0018DA  500F               	movf	color_read_Clear@tmp^0,w,c
  2662   0018DC  100D               	iorwf	(??_color_read_Clear+1)^0,w,c
  2663   0018DE  6E0F               	movwf	color_read_Clear@tmp^0,c
  2664   0018E0  5010               	movf	(color_read_Clear@tmp+1)^0,w,c
  2665   0018E2  100E               	iorwf	(??_color_read_Clear+2)^0,w,c
  2666   0018E4  6E10               	movwf	(color_read_Clear@tmp+1)^0,c
  2667                           
  2668                           ;color.c: 83:  I2C_2_Master_Stop();
  2669   0018E6  EC00  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2670   0018EA                     
  2671                           ;color.c: 84:  return tmp;
  2672   0018EA  C00F  F00A         	movff	color_read_Clear@tmp,?_color_read_Clear
  2673   0018EE  C010  F00B         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2674   0018F2  0012               	return		;funcret
  2675   0018F4                     __end_of_color_read_Clear:
  2676                           	callstack 0
  2677                           
  2678 ;; *************** function _color_read_Blue *****************
  2679 ;; Defined at:
  2680 ;;		line 45 in file "color.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  tmp             2   14[COMRAM] unsigned int 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  2    9[COMRAM] unsigned int 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2698 ;;Total ram usage:        7 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 4
  2701 ;; This function calls:
  2702 ;;		_I2C_2_Master_Read
  2703 ;;		_I2C_2_Master_RepStart
  2704 ;;		_I2C_2_Master_Start
  2705 ;;		_I2C_2_Master_Stop
  2706 ;;		_I2C_2_Master_Write
  2707 ;; This function is called by:
  2708 ;;		_levels
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text16
  2713   0018F4                     __ptext16:
  2714                           	callstack 0
  2715   0018F4                     _color_read_Blue:
  2716                           	callstack 25
  2717   0018F4                     
  2718                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  2719   0018F4  EC05  F00E         	call	_I2C_2_Master_Start	;wreg free
  2720                           
  2721                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  2722   0018F8  0E52               	movlw	82
  2723   0018FA  ECF5  F00D         	call	_I2C_2_Master_Write
  2724                           
  2725                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x1A);
  2726   0018FE  0EBA               	movlw	186
  2727   001900  ECF5  F00D         	call	_I2C_2_Master_Write
  2728                           
  2729                           ;color.c: 51:  I2C_2_Master_RepStart();
  2730   001904  ECFB  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2731                           
  2732                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  2733   001908  0E53               	movlw	83
  2734   00190A  ECF5  F00D         	call	_I2C_2_Master_Write
  2735                           
  2736                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  2737   00190E  0E01               	movlw	1
  2738   001910  ECC4  F00C         	call	_I2C_2_Master_Read
  2739   001914  6E0C               	movwf	??_color_read_Blue^0,c
  2740   001916  500C               	movf	??_color_read_Blue^0,w,c
  2741   001918  6E0F               	movwf	color_read_Blue@tmp^0,c
  2742   00191A  6A10               	clrf	(color_read_Blue@tmp+1)^0,c
  2743                           
  2744                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2745   00191C  0E00               	movlw	0
  2746   00191E  ECC4  F00C         	call	_I2C_2_Master_Read
  2747   001922  6E0C               	movwf	??_color_read_Blue^0,c
  2748   001924  500C               	movf	??_color_read_Blue^0,w,c
  2749   001926  6E0E               	movwf	(??_color_read_Blue+2)^0,c
  2750   001928  6A0D               	clrf	(??_color_read_Blue+1)^0,c
  2751   00192A  500F               	movf	color_read_Blue@tmp^0,w,c
  2752   00192C  100D               	iorwf	(??_color_read_Blue+1)^0,w,c
  2753   00192E  6E0F               	movwf	color_read_Blue@tmp^0,c
  2754   001930  5010               	movf	(color_read_Blue@tmp+1)^0,w,c
  2755   001932  100E               	iorwf	(??_color_read_Blue+2)^0,w,c
  2756   001934  6E10               	movwf	(color_read_Blue@tmp+1)^0,c
  2757                           
  2758                           ;color.c: 55:  I2C_2_Master_Stop();
  2759   001936  EC00  F00E         	call	_I2C_2_Master_Stop	;wreg free
  2760   00193A                     
  2761                           ;color.c: 56:  return tmp;
  2762   00193A  C00F  F00A         	movff	color_read_Blue@tmp,?_color_read_Blue
  2763   00193E  C010  F00B         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2764   001942  0012               	return		;funcret
  2765   001944                     __end_of_color_read_Blue:
  2766                           	callstack 0
  2767                           
  2768 ;; *************** function _I2C_2_Master_RepStart *****************
  2769 ;; Defined at:
  2770 ;;		line 33 in file "i2c.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; Hardware stack levels required when called: 3
  2791 ;; This function calls:
  2792 ;;		_I2C_2_Master_Idle
  2793 ;; This function is called by:
  2794 ;;		_color_read_Red
  2795 ;;		_color_read_Blue
  2796 ;;		_color_read_Green
  2797 ;;		_color_read_Clear
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text17
  2802   001BF6                     __ptext17:
  2803                           	callstack 0
  2804   001BF6                     _I2C_2_Master_RepStart:
  2805                           	callstack 25
  2806   001BF6                     
  2807                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2808   001BF6  ECA7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2809   001BFA                     
  2810                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2811   001BFA  010E               	movlb	14	; () banked
  2812   001BFC  83DA               	bsf	218,1,b	;volatile
  2813   001BFE                     
  2814                           ; BSR set to: 14
  2815   001BFE  0012               	return		;funcret
  2816   001C00                     __end_of_I2C_2_Master_RepStart:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _I2C_2_Master_Read *****************
  2820 ;; Defined at:
  2821 ;;		line 51 in file "i2c.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  ack             1    wreg     unsigned char 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  ack             1    7[COMRAM] unsigned char 
  2826 ;;  tmp             1    8[COMRAM] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      unsigned char 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2840 ;;Total ram usage:        3 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 3
  2843 ;; This function calls:
  2844 ;;		_I2C_2_Master_Idle
  2845 ;; This function is called by:
  2846 ;;		_color_read_Red
  2847 ;;		_color_read_Blue
  2848 ;;		_color_read_Green
  2849 ;;		_color_read_Clear
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text18
  2854   001988                     __ptext18:
  2855                           	callstack 0
  2856   001988                     _I2C_2_Master_Read:
  2857                           	callstack 25
  2858                           
  2859                           ; BSR set to: 14
  2860                           ;incstack = 0
  2861                           ;I2C_2_Master_Read@ack stored from wreg
  2862   001988  6E08               	movwf	I2C_2_Master_Read@ack^0,c
  2863   00198A                     
  2864                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2865   00198A  ECA7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2866   00198E                     
  2867                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2868   00198E  010E               	movlb	14	; () banked
  2869   001990  87DA               	bsf	218,3,b	;volatile
  2870                           
  2871                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2872   001992  ECA7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2873   001996                     
  2874                           ;i2c.c: 57:   tmp = SSP2BUF;
  2875   001996  CED5 F009          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2876                           
  2877                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2878   00199A  ECA7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2879   00199E                     
  2880                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2881   00199E  5008               	movf	I2C_2_Master_Read@ack^0,w,c
  2882   0019A0  B4D8               	btfsc	status,2,c
  2883   0019A2  EFD5  F00C         	goto	u1021
  2884   0019A6  EFD9  F00C         	goto	u1020
  2885   0019AA                     u1021:
  2886   0019AA  6A07               	clrf	??_I2C_2_Master_Read^0,c
  2887   0019AC  2A07               	incf	??_I2C_2_Master_Read^0,f,c
  2888   0019AE  EFDA  F00C         	goto	u1038
  2889   0019B2                     u1020:
  2890   0019B2  6A07               	clrf	??_I2C_2_Master_Read^0,c
  2891   0019B4                     u1038:
  2892   0019B4  3A07               	swapf	??_I2C_2_Master_Read^0,f,c
  2893   0019B6  4607               	rlncf	??_I2C_2_Master_Read^0,f,c
  2894   0019B8  010E               	movlb	14	; () banked
  2895   0019BA  51DA               	movf	218,w,b	;volatile
  2896   0019BC  1807               	xorwf	??_I2C_2_Master_Read^0,w,c
  2897   0019BE  0BDF               	andlw	-33
  2898   0019C0  1807               	xorwf	??_I2C_2_Master_Read^0,w,c
  2899   0019C2  6FDA               	movwf	218,b	;volatile
  2900   0019C4                     
  2901                           ; BSR set to: 14
  2902                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2903   0019C4  89DA               	bsf	218,4,b	;volatile
  2904   0019C6                     
  2905                           ; BSR set to: 14
  2906                           ;i2c.c: 61:   return tmp;
  2907   0019C6  5009               	movf	I2C_2_Master_Read@tmp^0,w,c
  2908   0019C8                     
  2909                           ; BSR set to: 14
  2910   0019C8  0012               	return		;funcret
  2911   0019CA                     __end_of_I2C_2_Master_Read:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _Light *****************
  2915 ;; Defined at:
  2916 ;;		line 14 in file "lights.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  colorcode       1    wreg     unsigned char 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  colorcode       1    5[COMRAM] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2934 ;;Total ram usage:        1 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 2
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_levels
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text19
  2945   0016B2                     __ptext19:
  2946                           	callstack 0
  2947   0016B2                     _Light:
  2948                           	callstack 27
  2949                           
  2950                           ; BSR set to: 14
  2951                           ;incstack = 0
  2952                           ;Light@colorcode stored from wreg
  2953   0016B2  6E06               	movwf	Light@colorcode^0,c
  2954   0016B4                     
  2955                           ;lights.c: 15:     if (colorcode==0){
  2956   0016B4  5006               	movf	Light@colorcode^0,w,c
  2957   0016B6  A4D8               	btfss	status,2,c
  2958   0016B8  EF60  F00B         	goto	u1071
  2959   0016BC  EF62  F00B         	goto	u1070
  2960   0016C0                     u1071:
  2961   0016C0  EF65  F00B         	goto	l1965
  2962   0016C4                     u1070:
  2963   0016C4                     
  2964                           ;lights.c: 16:         LATGbits.LATG1=1;
  2965   0016C4  827F               	bsf	127,1,c	;volatile
  2966                           
  2967                           ;lights.c: 17:         LATFbits.LATF7=1;
  2968   0016C6  8E7E               	bsf	126,7,c	;volatile
  2969                           
  2970                           ;lights.c: 18:         LATAbits.LATA4=1;
  2971   0016C8  8879               	bsf	121,4,c	;volatile
  2972   0016CA                     l1965:
  2973                           
  2974                           ;lights.c: 20:     if (colorcode==1){
  2975   0016CA  0406               	decf	Light@colorcode^0,w,c
  2976   0016CC  A4D8               	btfss	status,2,c
  2977   0016CE  EF6B  F00B         	goto	u1081
  2978   0016D2  EF6D  F00B         	goto	u1080
  2979   0016D6                     u1081:
  2980   0016D6  EF70  F00B         	goto	l1969
  2981   0016DA                     u1080:
  2982   0016DA                     
  2983                           ;lights.c: 21:         LATGbits.LATG1=1;
  2984   0016DA  827F               	bsf	127,1,c	;volatile
  2985                           
  2986                           ;lights.c: 22:         LATFbits.LATF7=0;
  2987   0016DC  9E7E               	bcf	126,7,c	;volatile
  2988                           
  2989                           ;lights.c: 23:         LATAbits.LATA4=0;
  2990   0016DE  9879               	bcf	121,4,c	;volatile
  2991   0016E0                     l1969:
  2992                           
  2993                           ;lights.c: 25:     if (colorcode==2){
  2994   0016E0  0E02               	movlw	2
  2995   0016E2  1806               	xorwf	Light@colorcode^0,w,c
  2996   0016E4  A4D8               	btfss	status,2,c
  2997   0016E6  EF77  F00B         	goto	u1091
  2998   0016EA  EF79  F00B         	goto	u1090
  2999   0016EE                     u1091:
  3000   0016EE  EF7C  F00B         	goto	l1973
  3001   0016F2                     u1090:
  3002   0016F2                     
  3003                           ;lights.c: 26:         LATGbits.LATG1=0;
  3004   0016F2  927F               	bcf	127,1,c	;volatile
  3005                           
  3006                           ;lights.c: 27:         LATFbits.LATF7=1;
  3007   0016F4  8E7E               	bsf	126,7,c	;volatile
  3008                           
  3009                           ;lights.c: 28:         LATAbits.LATA4=0;
  3010   0016F6  9879               	bcf	121,4,c	;volatile
  3011   0016F8                     l1973:
  3012                           
  3013                           ;lights.c: 30:     if (colorcode==3){
  3014   0016F8  0E03               	movlw	3
  3015   0016FA  1806               	xorwf	Light@colorcode^0,w,c
  3016   0016FC  A4D8               	btfss	status,2,c
  3017   0016FE  EF83  F00B         	goto	u1101
  3018   001702  EF85  F00B         	goto	u1100
  3019   001706                     u1101:
  3020   001706  EF88  F00B         	goto	l200
  3021   00170A                     u1100:
  3022   00170A                     
  3023                           ;lights.c: 31:         LATGbits.LATG1=0;
  3024   00170A  927F               	bcf	127,1,c	;volatile
  3025                           
  3026                           ;lights.c: 32:         LATFbits.LATF7=0;
  3027   00170C  9E7E               	bcf	126,7,c	;volatile
  3028                           
  3029                           ;lights.c: 33:         LATAbits.LATA4=1;
  3030   00170E  8879               	bsf	121,4,c	;volatile
  3031   001710                     l200:
  3032   001710  0012               	return		;funcret
  3033   001712                     __end_of_Light:
  3034                           	callstack 0
  3035                           
  3036 ;; *************** function _initUSART4 *****************
  3037 ;; Defined at:
  3038 ;;		line 4 in file "serial.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3056 ;;Total ram usage:        0 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 2
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_main
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text20
  3067   001B96                     __ptext20:
  3068                           	callstack 0
  3069   001B96                     _initUSART4:
  3070                           	callstack 28
  3071   001B96                     
  3072                           ;serial.c: 5:     RC0PPS = 0x12;
  3073   001B96  0E12               	movlw	18
  3074   001B98  010E               	movlb	14	; () banked
  3075   001B9A  6F62               	movwf	98,b	;volatile
  3076                           
  3077                           ;serial.c: 6:     RX4PPS = 0x11;
  3078   001B9C  0E11               	movlw	17
  3079   001B9E  6F15               	movwf	21,b	;volatile
  3080   001BA0                     
  3081                           ; BSR set to: 14
  3082                           ;serial.c: 8:     BAUD4CONbits.BRG16 = 0;
  3083   001BA0  97E9               	bcf	233,3,b	;volatile
  3084   001BA2                     
  3085                           ; BSR set to: 14
  3086                           ;serial.c: 9:     TX4STAbits.BRGH = 0;
  3087   001BA2  95E8               	bcf	232,2,b	;volatile
  3088                           
  3089                           ;serial.c: 10:     SP4BRGL = 51;
  3090   001BA4  0E33               	movlw	51
  3091   001BA6  6FE5               	movwf	229,b	;volatile
  3092                           
  3093                           ;serial.c: 11:     SP4BRGH = 0;
  3094   001BA8  0E00               	movlw	0
  3095   001BAA  6FE6               	movwf	230,b	;volatile
  3096   001BAC                     
  3097                           ; BSR set to: 14
  3098                           ;serial.c: 13:     RC4STAbits.CREN = 1;
  3099   001BAC  89E7               	bsf	231,4,b	;volatile
  3100   001BAE                     
  3101                           ; BSR set to: 14
  3102                           ;serial.c: 14:     TX4STAbits.TXEN = 1;
  3103   001BAE  8BE8               	bsf	232,5,b	;volatile
  3104   001BB0                     
  3105                           ; BSR set to: 14
  3106                           ;serial.c: 15:     RC4STAbits.SPEN = 1;
  3107   001BB0  8FE7               	bsf	231,7,b	;volatile
  3108   001BB2                     
  3109                           ; BSR set to: 14
  3110   001BB2  0012               	return		;funcret
  3111   001BB4                     __end_of_initUSART4:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function _color_click_init *****************
  3115 ;; Defined at:
  3116 ;;		line 5 in file "color.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3134 ;;Total ram usage:        1 bytes
  3135 ;; Hardware stack levels used: 1
  3136 ;; Hardware stack levels required when called: 5
  3137 ;; This function calls:
  3138 ;;		_I2C_2_Master_Init
  3139 ;;		_color_writetoaddr
  3140 ;; This function is called by:
  3141 ;;		_main
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text21
  3146   001A40                     __ptext21:
  3147                           	callstack 0
  3148   001A40                     _color_click_init:
  3149                           	callstack 25
  3150   001A40                     
  3151                           ;color.c: 8:     I2C_2_Master_Init();
  3152   001A40  EC68  F00D         	call	_I2C_2_Master_Init	;wreg free
  3153   001A44                     
  3154                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3155   001A44  0E01               	movlw	1
  3156   001A46  6E08               	movwf	color_writetoaddr@value^0,c
  3157   001A48  0E00               	movlw	0
  3158   001A4A  ECBB  F00D         	call	_color_writetoaddr
  3159   001A4E                     
  3160                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3161   001A4E  0E3F               	movlw	63
  3162   001A50  6E0A               	movwf	??_color_click_init^0,c
  3163   001A52  0E55               	movlw	85
  3164   001A54                     u1707:
  3165   001A54  2EE8               	decfsz	wreg,f,c
  3166   001A56  D7FE               	bra	u1707
  3167   001A58  2E0A               	decfsz	??_color_click_init^0,f,c
  3168   001A5A  D7FC               	bra	u1707
  3169   001A5C  F000               	nop	
  3170   001A5E                     
  3171                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3172   001A5E  0E03               	movlw	3
  3173   001A60  6E08               	movwf	color_writetoaddr@value^0,c
  3174   001A62  0E00               	movlw	0
  3175   001A64  ECBB  F00D         	call	_color_writetoaddr
  3176   001A68                     
  3177                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3178   001A68  0ED5               	movlw	213
  3179   001A6A  6E08               	movwf	color_writetoaddr@value^0,c
  3180   001A6C  0E01               	movlw	1
  3181   001A6E  ECBB  F00D         	call	_color_writetoaddr
  3182   001A72  0012               	return		;funcret
  3183   001A74                     __end_of_color_click_init:
  3184                           	callstack 0
  3185                           
  3186 ;; *************** function _color_writetoaddr *****************
  3187 ;; Defined at:
  3188 ;;		line 21 in file "color.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  address         1    wreg     unsigned char 
  3191 ;;  value           1    7[COMRAM] unsigned char 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  address         1    8[COMRAM] unsigned char 
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3203 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;Total ram usage:        2 bytes
  3208 ;; Hardware stack levels used: 1
  3209 ;; Hardware stack levels required when called: 4
  3210 ;; This function calls:
  3211 ;;		_I2C_2_Master_Start
  3212 ;;		_I2C_2_Master_Stop
  3213 ;;		_I2C_2_Master_Write
  3214 ;; This function is called by:
  3215 ;;		_color_click_init
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text22
  3220   001B76                     __ptext22:
  3221                           	callstack 0
  3222   001B76                     _color_writetoaddr:
  3223                           	callstack 25
  3224                           
  3225                           ;incstack = 0
  3226                           ;color_writetoaddr@address stored from wreg
  3227   001B76  6E09               	movwf	color_writetoaddr@address^0,c
  3228   001B78                     
  3229                           ;color.c: 22:     I2C_2_Master_Start();
  3230   001B78  EC05  F00E         	call	_I2C_2_Master_Start	;wreg free
  3231                           
  3232                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3233   001B7C  0E52               	movlw	82
  3234   001B7E  ECF5  F00D         	call	_I2C_2_Master_Write
  3235                           
  3236                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3237   001B82  5009               	movf	color_writetoaddr@address^0,w,c
  3238   001B84  0980               	iorlw	128
  3239   001B86  ECF5  F00D         	call	_I2C_2_Master_Write
  3240                           
  3241                           ;color.c: 25:     I2C_2_Master_Write(value);
  3242   001B8A  5008               	movf	color_writetoaddr@value^0,w,c
  3243   001B8C  ECF5  F00D         	call	_I2C_2_Master_Write
  3244                           
  3245                           ;color.c: 26:     I2C_2_Master_Stop();
  3246   001B90  EC00  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3247   001B94  0012               	return		;funcret
  3248   001B96                     __end_of_color_writetoaddr:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _I2C_2_Master_Write *****************
  3252 ;; Defined at:
  3253 ;;		line 45 in file "i2c.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  data_byte       1    wreg     unsigned char 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  data_byte       1    6[COMRAM] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;Total ram usage:        1 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 3
  3274 ;; This function calls:
  3275 ;;		_I2C_2_Master_Idle
  3276 ;; This function is called by:
  3277 ;;		_color_writetoaddr
  3278 ;;		_color_read_Red
  3279 ;;		_color_read_Blue
  3280 ;;		_color_read_Green
  3281 ;;		_color_read_Clear
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text23
  3286   001BEA                     __ptext23:
  3287                           	callstack 0
  3288   001BEA                     _I2C_2_Master_Write:
  3289                           	callstack 25
  3290                           
  3291                           ;incstack = 0
  3292                           ;I2C_2_Master_Write@data_byte stored from wreg
  3293   001BEA  6E07               	movwf	I2C_2_Master_Write@data_byte^0,c
  3294   001BEC                     
  3295                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3296   001BEC  ECA7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3297   001BF0                     
  3298                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3299   001BF0  C007  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3300   001BF4  0012               	return		;funcret
  3301   001BF6                     __end_of_I2C_2_Master_Write:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _I2C_2_Master_Stop *****************
  3305 ;; Defined at:
  3306 ;;		line 39 in file "i2c.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 3
  3327 ;; This function calls:
  3328 ;;		_I2C_2_Master_Idle
  3329 ;; This function is called by:
  3330 ;;		_color_writetoaddr
  3331 ;;		_color_read_Red
  3332 ;;		_color_read_Blue
  3333 ;;		_color_read_Green
  3334 ;;		_color_read_Clear
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text24
  3339   001C00                     __ptext24:
  3340                           	callstack 0
  3341   001C00                     _I2C_2_Master_Stop:
  3342                           	callstack 25
  3343   001C00                     
  3344                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3345   001C00  ECA7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3346   001C04                     
  3347                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3348   001C04  010E               	movlb	14	; () banked
  3349   001C06  85DA               	bsf	218,2,b	;volatile
  3350   001C08                     
  3351                           ; BSR set to: 14
  3352   001C08  0012               	return		;funcret
  3353   001C0A                     __end_of_I2C_2_Master_Stop:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _I2C_2_Master_Start *****************
  3357 ;; Defined at:
  3358 ;;		line 27 in file "i2c.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;Total ram usage:        0 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 3
  3379 ;; This function calls:
  3380 ;;		_I2C_2_Master_Idle
  3381 ;; This function is called by:
  3382 ;;		_color_writetoaddr
  3383 ;;		_color_read_Red
  3384 ;;		_color_read_Blue
  3385 ;;		_color_read_Green
  3386 ;;		_color_read_Clear
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text25
  3391   001C0A                     __ptext25:
  3392                           	callstack 0
  3393   001C0A                     _I2C_2_Master_Start:
  3394                           	callstack 25
  3395   001C0A                     
  3396                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3397   001C0A  ECA7  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3398   001C0E                     
  3399                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3400   001C0E  010E               	movlb	14	; () banked
  3401   001C10  81DA               	bsf	218,0,b	;volatile
  3402   001C12                     
  3403                           ; BSR set to: 14
  3404   001C12  0012               	return		;funcret
  3405   001C14                     __end_of_I2C_2_Master_Start:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function _I2C_2_Master_Idle *****************
  3409 ;; Defined at:
  3410 ;;		line 22 in file "i2c.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3428 ;;Total ram usage:        1 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 2
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_I2C_2_Master_Start
  3435 ;;		_I2C_2_Master_RepStart
  3436 ;;		_I2C_2_Master_Stop
  3437 ;;		_I2C_2_Master_Write
  3438 ;;		_I2C_2_Master_Read
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text26
  3443   001B4E                     __ptext26:
  3444                           	callstack 0
  3445   001B4E                     _I2C_2_Master_Idle:
  3446                           	callstack 25
  3447   001B4E                     l348:
  3448   001B4E  010E               	movlb	14	; () banked
  3449   001B50  B5D8               	btfsc	216,2,b	;volatile
  3450   001B52  EFAD  F00D         	goto	u901
  3451   001B56  EFAF  F00D         	goto	u900
  3452   001B5A                     u901:
  3453   001B5A  EFA7  F00D         	goto	l348
  3454   001B5E                     u900:
  3455   001B5E                     
  3456                           ; BSR set to: 14
  3457   001B5E  CEDA F006          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3458   001B62  0E1F               	movlw	31
  3459   001B64  1606               	andwf	??_I2C_2_Master_Idle^0,f,c
  3460   001B66  A4D8               	btfss	status,2,c
  3461   001B68  EFB8  F00D         	goto	u911
  3462   001B6C  EFBA  F00D         	goto	u910
  3463   001B70                     u911:
  3464   001B70  EFA7  F00D         	goto	l348
  3465   001B74                     u910:
  3466   001B74                     
  3467                           ; BSR set to: 14
  3468   001B74  0012               	return		;funcret
  3469   001B76                     __end_of_I2C_2_Master_Idle:
  3470                           	callstack 0
  3471                           
  3472 ;; *************** function _I2C_2_Master_Init *****************
  3473 ;; Defined at:
  3474 ;;		line 4 in file "i2c.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 2
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_color_click_init
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text27
  3503   001AD0                     __ptext27:
  3504                           	callstack 0
  3505   001AD0                     _I2C_2_Master_Init:
  3506                           	callstack 27
  3507   001AD0                     
  3508                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3509   001AD0  010E               	movlb	14	; () banked
  3510   001AD2  51D9               	movf	217,w,b	;volatile
  3511   001AD4  0BF0               	andlw	-16
  3512   001AD6  0908               	iorlw	8
  3513   001AD8  6FD9               	movwf	217,b	;volatile
  3514   001ADA                     
  3515                           ; BSR set to: 14
  3516                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3517   001ADA  8BD9               	bsf	217,5,b	;volatile
  3518                           
  3519                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3520   001ADC  0E9F               	movlw	159
  3521   001ADE  6FD6               	movwf	214,b	;volatile
  3522   001AE0                     
  3523                           ; BSR set to: 14
  3524                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3525   001AE0  8A84               	bsf	132,5,c	;volatile
  3526   001AE2                     
  3527                           ; BSR set to: 14
  3528                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3529   001AE2  8C84               	bsf	132,6,c	;volatile
  3530   001AE4                     
  3531                           ; BSR set to: 14
  3532                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3533   001AE4  9BA7               	bcf	167,5,b	;volatile
  3534   001AE6                     
  3535                           ; BSR set to: 14
  3536                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3537   001AE6  9DA7               	bcf	167,6,b	;volatile
  3538                           
  3539                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3540   001AE8  0E1D               	movlw	29
  3541   001AEA  6F1D               	movwf	29,b	;volatile
  3542                           
  3543                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3544   001AEC  0E1E               	movlw	30
  3545   001AEE  6F1C               	movwf	28,b	;volatile
  3546                           
  3547                           ;i2c.c: 18:   RD5PPS=0x1C;
  3548   001AF0  0E1C               	movlw	28
  3549   001AF2  6F6F               	movwf	111,b	;volatile
  3550                           
  3551                           ;i2c.c: 19:   RD6PPS=0x1B;
  3552   001AF4  0E1B               	movlw	27
  3553   001AF6  6F70               	movwf	112,b	;volatile
  3554   001AF8                     
  3555                           ; BSR set to: 14
  3556   001AF8  0012               	return		;funcret
  3557   001AFA                     __end_of_I2C_2_Master_Init:
  3558                           	callstack 0
  3559                           
  3560 ;; *************** function _TxBufferedString *****************
  3561 ;; Defined at:
  3562 ;;		line 83 in file "serial.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  string          2    6[COMRAM] PTR unsigned char 
  3565 ;;		 -> main@buf(100), 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;Total ram usage:        2 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 3
  3584 ;; This function calls:
  3585 ;;		_putCharToTxBuf
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text28
  3592   001A74                     __ptext28:
  3593                           	callstack 0
  3594   001A74                     _TxBufferedString:
  3595                           	callstack 27
  3596   001A74                     
  3597                           ;serial.c: 85:     while(*string != 0){
  3598   001A74  EF45  F00D         	goto	l2051
  3599   001A78                     l2047:
  3600                           
  3601                           ;serial.c: 86:   putCharToTxBuf(*string++);
  3602   001A78  C007  FFD9         	movff	TxBufferedString@string,fsr2l
  3603   001A7C  C008  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3604   001A80  50DF               	movf	indf2,w,c
  3605   001A82  EC7D  F00D         	call	_putCharToTxBuf
  3606   001A86  4A07               	infsnz	TxBufferedString@string^0,f,c
  3607   001A88  2A08               	incf	(TxBufferedString@string+1)^0,f,c
  3608   001A8A                     l2051:
  3609                           
  3610                           ;serial.c: 85:     while(*string != 0){
  3611   001A8A  C007  FFD9         	movff	TxBufferedString@string,fsr2l
  3612   001A8E  C008  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3613   001A92  50DF               	movf	indf2,w,c
  3614   001A94  A4D8               	btfss	status,2,c
  3615   001A96  EF4F  F00D         	goto	u1131
  3616   001A9A  EF51  F00D         	goto	u1130
  3617   001A9E                     u1131:
  3618   001A9E  EF3C  F00D         	goto	l2047
  3619   001AA2                     u1130:
  3620   001AA2  0012               	return		;funcret
  3621   001AA4                     __end_of_TxBufferedString:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _putCharToTxBuf *****************
  3625 ;; Defined at:
  3626 ;;		line 70 in file "serial.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  byte            1    wreg     unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  byte            1    5[COMRAM] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;Total ram usage:        1 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 2
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_TxBufferedString
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text29
  3655   001AFA                     __ptext29:
  3656                           	callstack 0
  3657   001AFA                     _putCharToTxBuf:
  3658                           	callstack 27
  3659                           
  3660                           ;incstack = 0
  3661                           ;putCharToTxBuf@byte stored from wreg
  3662   001AFA  6E06               	movwf	putCharToTxBuf@byte^0,c
  3663   001AFC                     
  3664                           ;serial.c: 71:     if (TxBufWriteCnt>=100) {TxBufWriteCnt=0;}
  3665   001AFC  0E63               	movlw	99
  3666   001AFE  6452               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3667   001B00  EF84  F00D         	goto	u1111
  3668   001B04  EF86  F00D         	goto	u1110
  3669   001B08                     u1111:
  3670   001B08  EF88  F00D         	goto	l1981
  3671   001B0C                     u1110:
  3672   001B0C  0E00               	movlw	0
  3673   001B0E  6E52               	movwf	_TxBufWriteCnt^0,c	;volatile
  3674   001B10                     l1981:
  3675                           
  3676                           ;serial.c: 72:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3677   001B10  0E00               	movlw	low _EUSART4TXbuf
  3678   001B12  2452               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  3679   001B14  6ED9               	movwf	fsr2l,c
  3680   001B16  6ADA               	clrf	fsr2h,c
  3681   001B18  0E01               	movlw	high _EUSART4TXbuf
  3682   001B1A  22DA               	addwfc	fsr2h,f,c
  3683   001B1C  C006  FFDF         	movff	putCharToTxBuf@byte,indf2
  3684   001B20  2A52               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3685   001B22  0012               	return		;funcret
  3686   001B24                     __end_of_putCharToTxBuf:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function _LightInit *****************
  3690 ;; Defined at:
  3691 ;;		line 4 in file "lights.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		None
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;Total ram usage:        0 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 2
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_main
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text30
  3720   001BDC                     __ptext30:
  3721                           	callstack 0
  3722   001BDC                     _LightInit:
  3723                           	callstack 28
  3724   001BDC                     
  3725                           ;lights.c: 5:     TRISGbits.TRISG1=0;
  3726   001BDC  9287               	bcf	135,1,c	;volatile
  3727                           
  3728                           ;lights.c: 6:     TRISFbits.TRISF7=0;
  3729   001BDE  9E86               	bcf	134,7,c	;volatile
  3730                           
  3731                           ;lights.c: 7:     TRISAbits.TRISA4=0;
  3732   001BE0  9881               	bcf	129,4,c	;volatile
  3733                           
  3734                           ;lights.c: 8:     LATGbits.LATG1=0;
  3735   001BE2  927F               	bcf	127,1,c	;volatile
  3736                           
  3737                           ;lights.c: 9:     LATFbits.LATF7=0;
  3738   001BE4  9E7E               	bcf	126,7,c	;volatile
  3739                           
  3740                           ;lights.c: 10:     LATAbits.LATA4=0;
  3741   001BE6  9879               	bcf	121,4,c	;volatile
  3742   001BE8  0012               	return		;funcret
  3743   001BEA                     __end_of_LightInit:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _Interrupts_init *****************
  3747 ;; Defined at:
  3748 ;;		line 10 in file "interrupts.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		None
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels used: 1
  3768 ;; Hardware stack levels required when called: 2
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text31
  3777   001BCC                     __ptext31:
  3778                           	callstack 0
  3779   001BCC                     _Interrupts_init:
  3780                           	callstack 28
  3781   001BCC                     
  3782                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
  3783   001BCC  8CF2               	bsf	242,6,c	;volatile
  3784                           
  3785                           ;interrupts.c: 13:     INTCONbits.IPEN=1;
  3786   001BCE  8AF2               	bsf	242,5,c	;volatile
  3787                           
  3788                           ;interrupts.c: 14:     PIE4bits.RC4IE=1;
  3789   001BD0  010E               	movlb	14	; () banked
  3790   001BD2  872D               	bsf	45,3,b	;volatile
  3791                           
  3792                           ;interrupts.c: 15:     PIE4bits.TX4IE=0;
  3793   001BD4  952D               	bcf	45,2,b	;volatile
  3794                           
  3795                           ;interrupts.c: 16:     PIE0bits.TMR0IE=1;
  3796   001BD6  8B29               	bsf	41,5,b	;volatile
  3797                           
  3798                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  3799   001BD8  8EF2               	bsf	242,7,c	;volatile
  3800   001BDA                     
  3801                           ; BSR set to: 14
  3802   001BDA  0012               	return		;funcret
  3803   001BDC                     __end_of_Interrupts_init:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _HighISR *****************
  3807 ;; Defined at:
  3808 ;;		line 26 in file "interrupts.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  reg             1    4[COMRAM] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;Total ram usage:        3 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 1
  3829 ;; This function calls:
  3830 ;;		_getCharFromTxBuf
  3831 ;;		_isDataInTxBuf
  3832 ;;		_putCharToRxBuf
  3833 ;; This function is called by:
  3834 ;;		Interrupt level 2
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	intcode
  3839   000008                     __pintcode:
  3840                           	callstack 0
  3841   000008                     _HighISR:
  3842                           	callstack 21
  3843                           
  3844                           ; BSR set to: 14
  3845                           ;incstack = 0
  3846   000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3847   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3848   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3849   000012                     
  3850                           ;interrupts.c: 29:  if(PIR4bits.TX4IF & sendFLAG){
  3851   000012  010E               	movlb	14	; () banked
  3852   000014  B537               	btfsc	55,2,b	;volatile
  3853   000016  EF0F  F000         	goto	i2u126_41
  3854   00001A  EF12  F000         	goto	i2u126_40
  3855   00001E                     i2u126_41:
  3856   00001E  0E01               	movlw	1
  3857   000020  EF13  F000         	goto	i2u126_46
  3858   000024                     i2u126_40:
  3859   000024  0E00               	movlw	0
  3860   000026                     i2u126_46:
  3861   000026  144E               	andwf	_sendFLAG^0,w,c
  3862   000028  0900               	iorlw	0
  3863   00002A  B4D8               	btfsc	status,2,c
  3864   00002C  EF1A  F000         	goto	i2u127_41
  3865   000030  EF1C  F000         	goto	i2u127_40
  3866   000034                     i2u127_41:
  3867   000034  EF2E  F000         	goto	i2l2165
  3868   000038                     i2u127_40:
  3869   000038                     
  3870                           ; BSR set to: 14
  3871                           ;interrupts.c: 30:         TX4REG = getCharFromTxBuf();
  3872   000038  EC52  F00D         	call	_getCharFromTxBuf	;wreg free
  3873   00003C  010E               	movlb	14	; () banked
  3874   00003E  6FE4               	movwf	228,b	;volatile
  3875   000040                     
  3876                           ; BSR set to: 14
  3877                           ;interrupts.c: 31:         if (!isDataInTxBuf()){
  3878   000040  ECDA  F00D         	call	_isDataInTxBuf	;wreg free
  3879   000044  0900               	iorlw	0
  3880   000046  A4D8               	btfss	status,2,c
  3881   000048  EF28  F000         	goto	i2u128_41
  3882   00004C  EF2A  F000         	goto	i2u128_40
  3883   000050                     i2u128_41:
  3884   000050  EF2E  F000         	goto	i2l2165
  3885   000054                     i2u128_40:
  3886   000054                     
  3887                           ;interrupts.c: 32:             PIE4bits.TX4IE=0;
  3888   000054  010E               	movlb	14	; () banked
  3889   000056  952D               	bcf	45,2,b	;volatile
  3890   000058                     
  3891                           ; BSR set to: 14
  3892                           ;interrupts.c: 33:             sendFLAG=0;
  3893   000058  0E00               	movlw	0
  3894   00005A  6E4E               	movwf	_sendFLAG^0,c
  3895   00005C                     i2l2165:
  3896                           
  3897                           ;interrupts.c: 37:     if(PIR4bits.RC4IF){
  3898   00005C  010E               	movlb	14	; () banked
  3899   00005E  A737               	btfss	55,3,b	;volatile
  3900   000060  EF34  F000         	goto	i2u129_41
  3901   000064  EF36  F000         	goto	i2u129_40
  3902   000068                     i2u129_41:
  3903   000068  EF3E  F000         	goto	i2l178
  3904   00006C                     i2u129_40:
  3905   00006C                     
  3906                           ; BSR set to: 14
  3907                           ;interrupts.c: 38:         char reg = RC4REG;
  3908   00006C  CEE3 F005          	movff	3811,HighISR@reg	;volatile
  3909   000070                     
  3910                           ; BSR set to: 14
  3911                           ;interrupts.c: 39:         putCharToRxBuf(reg);
  3912   000070  5005               	movf	HighISR@reg^0,w,c
  3913   000072  EC92  F00D         	call	_putCharToRxBuf
  3914   000076                     
  3915                           ;interrupts.c: 40:         charFLAG=1;
  3916   000076  0E01               	movlw	1
  3917   000078  0100               	movlb	0	; () banked
  3918   00007A  6FFD               	movwf	_charFLAG& (0+255),b
  3919   00007C                     i2l178:
  3920   00007C  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3921   000080  C003  FFD9         	movff	??_HighISR,fsr2l
  3922   000084  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3923   000086  0011               	retfie		f
  3924   000088                     __end_of_HighISR:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _putCharToRxBuf *****************
  3928 ;; Defined at:
  3929 ;;		line 50 in file "serial.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  byte            1    wreg     unsigned char 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  byte            1    0[COMRAM] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;Total ram usage:        1 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_HighISR
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text33
  3957   001B24                     __ptext33:
  3958                           	callstack 0
  3959   001B24                     _putCharToRxBuf:
  3960                           	callstack 21
  3961                           
  3962                           ;incstack = 0
  3963                           ;putCharToRxBuf@byte stored from wreg
  3964   001B24  6E01               	movwf	putCharToRxBuf@byte^0,c
  3965   001B26                     
  3966                           ;serial.c: 51:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3967   001B26  0E13               	movlw	19
  3968   001B28  6454               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3969   001B2A  EF99  F00D         	goto	i2u117_41
  3970   001B2E  EF9B  F00D         	goto	i2u117_40
  3971   001B32                     i2u117_41:
  3972   001B32  EF9D  F00D         	goto	i2l2069
  3973   001B36                     i2u117_40:
  3974   001B36  0E00               	movlw	0
  3975   001B38  6E54               	movwf	_RxBufWriteCnt^0,c	;volatile
  3976   001B3A                     i2l2069:
  3977                           
  3978                           ;serial.c: 52:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3979   001B3A  0EA0               	movlw	low _EUSART4RXbuf
  3980   001B3C  2454               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3981   001B3E  6ED9               	movwf	fsr2l,c
  3982   001B40  6ADA               	clrf	fsr2h,c
  3983   001B42  0E01               	movlw	high _EUSART4RXbuf
  3984   001B44  22DA               	addwfc	fsr2h,f,c
  3985   001B46  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3986   001B4A  2A54               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3987   001B4C  0012               	return		;funcret
  3988   001B4E                     __end_of_putCharToRxBuf:
  3989                           	callstack 0
  3990                           
  3991 ;; *************** function _isDataInTxBuf *****************
  3992 ;; Defined at:
  3993 ;;		line 78 in file "serial.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      unsigned char 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_HighISR
  4017 ;;		_sendTxBuf
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text34
  4022   001BB4                     __ptext34:
  4023                           	callstack 0
  4024   001BB4                     _isDataInTxBuf:
  4025                           	callstack 21
  4026   001BB4                     
  4027                           ;serial.c: 79:     return (TxBufWriteCnt!=TxBufReadCnt);
  4028   001BB4  5051               	movf	_TxBufReadCnt^0,w,c	;volatile
  4029   001BB6  1852               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4030   001BB8  A4D8               	btfss	status,2,c
  4031   001BBA  EFE1  F00D         	goto	i2u115_41
  4032   001BBE  EFE4  F00D         	goto	i2u115_40
  4033   001BC2                     i2u115_41:
  4034   001BC2  0E01               	movlw	1
  4035   001BC4  EFE5  F00D         	goto	i2u116_40
  4036   001BC8                     i2u115_40:
  4037   001BC8  0E00               	movlw	0
  4038   001BCA                     i2u116_40:
  4039   001BCA  0012               	return		;funcret
  4040   001BCC                     __end_of_isDataInTxBuf:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _getCharFromTxBuf *****************
  4044 ;; Defined at:
  4045 ;;		line 64 in file "serial.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      unsigned char 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;Total ram usage:        2 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_HighISR
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text35
  4073   001AA4                     __ptext35:
  4074                           	callstack 0
  4075   001AA4                     _getCharFromTxBuf:
  4076                           	callstack 21
  4077   001AA4                     
  4078                           ;serial.c: 65:     if (TxBufReadCnt>=100) {TxBufReadCnt=0;}
  4079   001AA4  0E63               	movlw	99
  4080   001AA6  6451               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4081   001AA8  EF58  F00D         	goto	i2u114_41
  4082   001AAC  EF5A  F00D         	goto	i2u114_40
  4083   001AB0                     i2u114_41:
  4084   001AB0  EF5C  F00D         	goto	i2l2057
  4085   001AB4                     i2u114_40:
  4086   001AB4  0E00               	movlw	0
  4087   001AB6  6E51               	movwf	_TxBufReadCnt^0,c	;volatile
  4088   001AB8                     i2l2057:
  4089                           
  4090                           ;serial.c: 66:     return EUSART4TXbuf[TxBufReadCnt++];
  4091   001AB8  2A51               	incf	_TxBufReadCnt^0,f,c	;volatile
  4092   001ABA  0451               	decf	_TxBufReadCnt^0,w,c	;volatile
  4093   001ABC  6E01               	movwf	??_getCharFromTxBuf^0,c
  4094   001ABE  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  4095   001AC0  0E00               	movlw	low _EUSART4TXbuf
  4096   001AC2  2401               	addwf	??_getCharFromTxBuf^0,w,c
  4097   001AC4  6ED9               	movwf	fsr2l,c
  4098   001AC6  0E01               	movlw	high _EUSART4TXbuf
  4099   001AC8  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  4100   001ACA  6EDA               	movwf	fsr2h,c
  4101   001ACC  50DF               	movf	indf2,w,c
  4102   001ACE  0012               	return		;funcret
  4103   001AD0                     __end_of_getCharFromTxBuf:
  4104                           	callstack 0
  4105                           
  4106                           	psect	rparam
  4107   000000                     
  4108                           	psect	temp
  4109   000055                     btemp:
  4110                           	callstack 0
  4111   000055                     	ds	1
  4112   000000                     int$flags	set	btemp
  4113   000000                     wtemp8	set	btemp+1
  4114   000000                     ttemp5	set	btemp+1
  4115   000000                     ttemp6	set	btemp+4
  4116   000000                     ttemp7	set	btemp+8
  4117                           
  4118                           	psect	idloc
  4119                           
  4120                           ;Config register IDLOC0 @ 0x200000
  4121                           ;	unspecified, using default values
  4122   200000                     	org	2097152
  4123   200000  0FFF               	dw	4095
  4124                           
  4125                           ;Config register IDLOC1 @ 0x200002
  4126                           ;	unspecified, using default values
  4127   200002                     	org	2097154
  4128   200002  0FFF               	dw	4095
  4129                           
  4130                           ;Config register IDLOC2 @ 0x200004
  4131                           ;	unspecified, using default values
  4132   200004                     	org	2097156
  4133   200004  0FFF               	dw	4095
  4134                           
  4135                           ;Config register IDLOC3 @ 0x200006
  4136                           ;	unspecified, using default values
  4137   200006                     	org	2097158
  4138   200006  0FFF               	dw	4095
  4139                           
  4140                           ;Config register IDLOC4 @ 0x200008
  4141                           ;	unspecified, using default values
  4142   200008                     	org	2097160
  4143   200008  0FFF               	dw	4095
  4144                           
  4145                           ;Config register IDLOC5 @ 0x20000A
  4146                           ;	unspecified, using default values
  4147   20000A                     	org	2097162
  4148   20000A  0FFF               	dw	4095
  4149                           
  4150                           ;Config register IDLOC6 @ 0x20000C
  4151                           ;	unspecified, using default values
  4152   20000C                     	org	2097164
  4153   20000C  0FFF               	dw	4095
  4154                           
  4155                           ;Config register IDLOC7 @ 0x20000E
  4156                           ;	unspecified, using default values
  4157   20000E                     	org	2097166
  4158   20000E  0FFF               	dw	4095
  4159                           
  4160                           	psect	config
  4161                           
  4162                           ;Config register CONFIG1L @ 0x300000
  4163                           ;	External Oscillator mode Selection bits
  4164                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4165                           ;	Power-up default value for COSC bits
  4166                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4167   300000                     	org	3145728
  4168   300000  AA                 	db	170
  4169                           
  4170                           ;Config register CONFIG1H @ 0x300001
  4171                           ;	unspecified, using default values
  4172                           ;	Clock Out Enable bit
  4173                           ;	CLKOUTEN = 0x1, unprogrammed default
  4174                           ;	Clock Switch Enable bit
  4175                           ;	CSWEN = 0x1, unprogrammed default
  4176                           ;	Fail-Safe Clock Monitor Enable bit
  4177                           ;	FCMEN = 0x1, unprogrammed default
  4178   300001                     	org	3145729
  4179   300001  FF                 	db	255
  4180                           
  4181                           ;Config register CONFIG2L @ 0x300002
  4182                           ;	unspecified, using default values
  4183                           ;	Master Clear Enable bit
  4184                           ;	MCLRE = 0x1, unprogrammed default
  4185                           ;	Power-up Timer Enable bit
  4186                           ;	PWRTE = 0x1, unprogrammed default
  4187                           ;	Low-power BOR enable bit
  4188                           ;	LPBOREN = 0x1, unprogrammed default
  4189                           ;	Brown-out Reset Enable bits
  4190                           ;	BOREN = 0x3, unprogrammed default
  4191   300002                     	org	3145730
  4192   300002  FF                 	db	255
  4193                           
  4194                           ;Config register CONFIG2H @ 0x300003
  4195                           ;	unspecified, using default values
  4196                           ;	Brown Out Reset Voltage selection bits
  4197                           ;	BORV = 0x3, unprogrammed default
  4198                           ;	ZCD Disable bit
  4199                           ;	ZCD = 0x1, unprogrammed default
  4200                           ;	PPSLOCK bit One-Way Set Enable bit
  4201                           ;	PPS1WAY = 0x1, unprogrammed default
  4202                           ;	Stack Full/Underflow Reset Enable bit
  4203                           ;	STVREN = 0x1, unprogrammed default
  4204                           ;	Debugger Enable bit
  4205                           ;	DEBUG = 0x1, unprogrammed default
  4206                           ;	Extended Instruction Set Enable bit
  4207                           ;	XINST = 0x1, unprogrammed default
  4208   300003                     	org	3145731
  4209   300003  FF                 	db	255
  4210                           
  4211                           ;Config register CONFIG3L @ 0x300004
  4212                           ;	WDT Period Select bits
  4213                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4214                           ;	WDT operating mode
  4215                           ;	WDTE = OFF, WDT Disabled
  4216   300004                     	org	3145732
  4217   300004  9F                 	db	159
  4218                           
  4219                           ;Config register CONFIG3H @ 0x300005
  4220                           ;	unspecified, using default values
  4221                           ;	WDT Window Select bits
  4222                           ;	WDTCWS = 0x7, unprogrammed default
  4223                           ;	WDT input clock selector
  4224                           ;	WDTCCS = 0x7, unprogrammed default
  4225   300005                     	org	3145733
  4226   300005  FF                 	db	255
  4227                           
  4228                           ;Config register CONFIG4L @ 0x300006
  4229                           ;	unspecified, using default values
  4230                           ;	Write Protection Block 0
  4231                           ;	WRT0 = 0x1, unprogrammed default
  4232                           ;	Write Protection Block 1
  4233                           ;	WRT1 = 0x1, unprogrammed default
  4234                           ;	Write Protection Block 2
  4235                           ;	WRT2 = 0x1, unprogrammed default
  4236                           ;	Write Protection Block 3
  4237                           ;	WRT3 = 0x1, unprogrammed default
  4238                           ;	Write Protection Block 3
  4239                           ;	WRT4 = 0x1, unprogrammed default
  4240                           ;	Write Protection Block 3
  4241                           ;	WRT5 = 0x1, unprogrammed default
  4242                           ;	Write Protection Block 3
  4243                           ;	WRT6 = 0x1, unprogrammed default
  4244                           ;	Write Protection Block 3
  4245                           ;	WRT7 = 0x1, unprogrammed default
  4246   300006                     	org	3145734
  4247   300006  FF                 	db	255
  4248                           
  4249                           ;Config register CONFIG4H @ 0x300007
  4250                           ;	unspecified, using default values
  4251                           ;	Configuration Register Write Protection bit
  4252                           ;	WRTC = 0x1, unprogrammed default
  4253                           ;	Boot Block Write Protection bit
  4254                           ;	WRTB = 0x1, unprogrammed default
  4255                           ;	Data EEPROM Write Protection bit
  4256                           ;	WRTD = 0x1, unprogrammed default
  4257                           ;	Scanner Enable bit
  4258                           ;	SCANE = 0x1, unprogrammed default
  4259                           ;	Low Voltage Programming Enable bit
  4260                           ;	LVP = 0x1, unprogrammed default
  4261   300007                     	org	3145735
  4262   300007  FF                 	db	255
  4263                           
  4264                           ;Config register CONFIG5L @ 0x300008
  4265                           ;	unspecified, using default values
  4266                           ;	UserNVM Program Memory Code Protection bit
  4267                           ;	CP = 0x1, unprogrammed default
  4268                           ;	DataNVM Memory Code Protection bit
  4269                           ;	CPD = 0x1, unprogrammed default
  4270   300008                     	org	3145736
  4271   300008  FF                 	db	255
  4272                           
  4273                           ;Config register CONFIG5H @ 0x300009
  4274                           ;	unspecified, using default values
  4275   300009                     	org	3145737
  4276   300009  FF                 	db	255
  4277                           
  4278                           ;Config register CONFIG6L @ 0x30000A
  4279                           ;	unspecified, using default values
  4280                           ;	Table Read Protection Block 0
  4281                           ;	EBTR0 = 0x1, unprogrammed default
  4282                           ;	Table Read Protection Block 1
  4283                           ;	EBTR1 = 0x1, unprogrammed default
  4284                           ;	Table Read Protection Block 2
  4285                           ;	EBTR2 = 0x1, unprogrammed default
  4286                           ;	Table Read Protection Block 3
  4287                           ;	EBTR3 = 0x1, unprogrammed default
  4288                           ;	Table Read Protection Block 4
  4289                           ;	EBTR4 = 0x1, unprogrammed default
  4290                           ;	Table Read Protection Block 5
  4291                           ;	EBTR5 = 0x1, unprogrammed default
  4292                           ;	Table Read Protection Block 6
  4293                           ;	EBTR6 = 0x1, unprogrammed default
  4294                           ;	Table Read Protection Block 7
  4295                           ;	EBTR7 = 0x1, unprogrammed default
  4296   30000A                     	org	3145738
  4297   30000A  FF                 	db	255
  4298                           
  4299                           ;Config register CONFIG6H @ 0x30000B
  4300                           ;	unspecified, using default values
  4301                           ;	Boot Block Table Read Protection bit
  4302                           ;	EBTRB = 0x1, unprogrammed default
  4303   30000B                     	org	3145739
  4304   30000B  FF                 	db	255
  4305                           tosu	equ	0xFFF
  4306                           tosh	equ	0xFFE
  4307                           tosl	equ	0xFFD
  4308                           stkptr	equ	0xFFC
  4309                           pclatu	equ	0xFFB
  4310                           pclath	equ	0xFFA
  4311                           pcl	equ	0xFF9
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           indf0	equ	0xFEF
  4319                           postinc0	equ	0xFEE
  4320                           postdec0	equ	0xFED
  4321                           preinc0	equ	0xFEC
  4322                           plusw0	equ	0xFEB
  4323                           fsr0h	equ	0xFEA
  4324                           fsr0l	equ	0xFE9
  4325                           wreg	equ	0xFE8
  4326                           indf1	equ	0xFE7
  4327                           postinc1	equ	0xFE6
  4328                           postdec1	equ	0xFE5
  4329                           preinc1	equ	0xFE4
  4330                           plusw1	equ	0xFE3
  4331                           fsr1h	equ	0xFE2
  4332                           fsr1l	equ	0xFE1
  4333                           bsr	equ	0xFE0
  4334                           indf2	equ	0xFDF
  4335                           postinc2	equ	0xFDE
  4336                           postdec2	equ	0xFDD
  4337                           preinc2	equ	0xFDC
  4338                           plusw2	equ	0xFDB
  4339                           fsr2h	equ	0xFDA
  4340                           fsr2l	equ	0xFD9
  4341                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    0
    Data        0
    BSS         234
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      84
    BANK0           160    144     159
    BANK1           256      0     212
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_1(CODE[52]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_1(CODE[52]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 52
		 -> STR_1(CODE[52]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1488$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_1(CODE[52]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1435$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1435$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _levels->_color_read_Blue
    _levels->_color_read_Clear
    _levels->_color_read_Green
    _levels->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               101   101      0    8950
                                             43 BANK0    101   101      0
                    _Interrupts_init
                          _LightInit
                   _TxBufferedString
                   _color_click_init
                         _initUSART4
                             _levels
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    7316
                                             16 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             75 COMRAM     2     2      0
                                             10 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             67 COMRAM     8     2      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             32 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _levels                                               4     2      2    1018
                                             16 COMRAM     4     2      2
                              _Light
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              6 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _Light                                                1     1      0      88
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              7 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              6 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LightInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              3     3      0      45
                                              2 COMRAM     3     3      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _isDataInTxBuf                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _LightInit
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _levels
     _Light
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D4       7       82.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITBIGSFRhlhhll     8F      0       0      39        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      54       1       89.4%
BITBIGSFRhlhhhl     4B      0       0      34        0.0%
BITBIGSFRhlhlhl     36      0       0      43        0.0%
BITBIGSFRhlhlhl     2D      0       0      42        0.0%
BITBIGSFRhlhll      2A      0       0      45        0.0%
BITBIGSFRlll        26      0       0      50        0.0%
BITBIGSFRhlhhhh     1B      0       0      33        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRhlhlhl      C      0       0      44        0.0%
BITBIGSFRllhh        B      0       0      48        0.0%
BITBIGSFRhll         9      0       0      46        0.0%
BITBIGSFRhlhlhh      8      0       0      40        0.0%
BITBIGSFRllhl        6      0       0      49        0.0%
BITBIGSFRhlhhll      4      0       0      38        0.0%
BITBIGSFRlh          3      0       0      47        0.0%
BITBIGSFRhlhhlh      2      0       0      36        0.0%
BITBIGSFRhlhhlh      1      0       0      35        0.0%
BITBIGSFRhlhlhl      1      0       0      41        0.0%
BITBIGSFRhlhhll      1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C7      51        0.0%
DATA                 0      0     1C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 04 15:13:07 2022

               _color_read_Red 1804                _color_read_Blue 18F4                             l81 1852  
                           l90 18F2                             l75 1A72                             l84 1942  
                           l78 1B94                             l87 18A2               _color_read_Clear 18A4  
             _color_read_Green 1854              ??_Interrupts_init 0006                            l200 1710  
                          l127 1802                            l170 1BDA                            l243 1BB2  
                          l351 1B74                            l280 1B22                            l360 1C08  
                          l193 1BE8                            l345 1AF8                            l354 1C12  
                          l363 1BF4                            l348 1B4E                            l357 1BFE  
                          l366 19C8                            l289 1AA2                            l483 123A  
                          l496 139E                            u900 1B5E                            u901 1B5A  
                          u910 1B74                            u911 1B70                            _abs 19CA  
                          _pad 1638                            _red 00FA                            wreg 000FE8  
                         l1112 1A08                           l2001 1BAC                           l1105 17B2  
                         l2011 1A44                           l2003 1BAE                           ?_abs 0018  
                         l1124 15B6                           l1132 1986                           l2013 1A4E  
                         l2005 1BB0                           l2021 17B4                           l1109 1A00  
                         l2007 1BCC                           l2015 1A5E                           l2031 17F6  
                         l2023 17BA                           l1135 1C14                           l1047 1762  
                         l1080 0ECA                           l2017 1A68                           l2009 1A40  
                         l2025 17D2                           l1073 16B0                           l1081 0F10  
                         l2019 1BDC                           l2051 1A8A                           l2027 17DE  
                         l2211 151C                           l1092 10B2                           l2045 1A74  
                         l2029 17EA                           l2301 135E                           l2213 153A  
                         l2205 14EE                           l2221 1950                           l1069 165A  
                         l1078 0EC2                           l2047 1A78                           l2231 10C6  
                         l2303 137E                           l2215 1570                           l2207 1500  
                         l2223 1962                           l2311 1652                           l2049 1A86  
                         l2241 111C                           l2233 10E6                           l2321 19CA  
                         l2209 1512                           l2225 1966                           l2313 1666  
                         l2401 14C4                           l2251 1170                           l2243 1128  
                         l2235 10EA                           l2227 10B4                           l2323 19E4  
                         l2219 1944                           l2315 167A                           l2307 1638  
                         l2331 0E7A                           l1099 14EC                           l2411 178C  
                         l2261 11E4                           l2253 1182                           l2245 1146  
                         l2237 10F8                           l2229 10B8                           l2317 167E  
                         l2309 1646                           l2341 0EE8                           l2333 0E9A  
                         l2325 0E36                           l2413 17A8                           l2421 172C  
                         l2255 11B0                           l2247 114E                           l2263 11EA  
                         l2239 1118                           l2271 123C                           l2319 169C  
                         l2351 0F22                           l2343 0EF8                           l2335 0EB6  
                         l2327 0E56                           l2407 1764                           l2423 1734  
                         l2431 15BC                           l2265 11FA                           l2257 11D0  
                         l2249 1162                           l2281 1280                           l2273 1240  
                         l2353 0F28                           l2361 101A                           l2345 0F04  
                         l2337 0ED2                           l2329 0E6A                           l2409 1770  
                         l2425 1750                           l2417 1712                           l2441 15D8  
                         l2433 15C0                           l2267 121A                           l2259 11D2  
                         l2291 12E8                           l2283 12A0                           l2275 124E  
                         l2371 1082                           l2363 1034                           l2355 0FAA  
                         l2347 0F0C                           l2339 0EE2                           l2419 1724  
                         l2443 1614                           l2435 15C4                           l2293 1316  
                         l2285 12BE                           l2277 126E                           l2373 1092  
                         l2365 1052                           l2357 0FB0                           l2349 0F18  
                         l2381 13D2                           l2445 1620                           l2437 15C8  
                         l2429 15B8                           l1807 1B4E                           l2295 1336  
                         l2287 12C6                           l2279 1272                           l2367 106C  
                         l2359 0FB6                           l2391 142C                           l2383 13E0  
                         l2447 1624                           l2439 15CE                           l1809 1B5E  
                         l2297 1348                           l2289 12DA                           l2369 107C  
                         l2393 1482                           l2385 13E4                           l2377 13A0  
                         l2449 1628                           l1931 1AE4                           l1923 1AD0  
                         l2299 134E                           l2387 13F4                           l2379 13C4  
                         l1933 1AE6                           l1925 1ADA                           l2397 14B2  
                         l2389 1410                           l1927 1AE0                           l1863 1C0A  
                         l1871 1C00                           l1935 1B78                           l1943 18F4  
                         l1951 189A                           l1929 1AE2                           l1865 1C0E  
                         l1873 1C04                           l1961 16B4                           l1881 198E  
                         l1945 193A                           l1937 1804                           l1867 1BEC  
                         l1971 16F2                           l1963 16C4                           l1883 1996  
                         l1875 1BF6                           l1955 18A4                           l1939 184A  
                         l1981 1B10                           l1869 1BF0                           l1973 16F8  
                         l1965 16CA                           l1885 199E                           l1877 1BFA  
                         l1957 18EA                           l1949 1854                           ?_pad 0016  
                         l1983 1B20                           l1975 170A                           l1967 16DA  
                         l1887 19C4                           l1879 198A                           l1977 1AFC  
                         l1969 16E0                           l1889 19C6                           l1979 1B0C  
                         l1995 1B96                           l1997 1BA0                           l1999 1BA2  
                         STR_1 0E01                           u1100 170A                           u1020 19B2  
                         u1101 1706                           u1021 19AA                           u1110 1B0C  
                         u1111 1B08                           u1130 1AA2                           u1131 1A9E  
                         u1070 16C4                           u1038 19B4                           u1071 16C0  
                         u1080 16DA                           u1400 10F8                           u1081 16D6  
                         u1401 10F4                           u1090 16F2                           u1091 16EE  
                         u1411 1122                           u1420 1146                           u1500 1316  
                         u1340 1500                           u1421 1142                           u1501 1312  
                         u1341 14FC                           u1430 1170                           u1510 135E  
                         u1350 1512                           u1431 116C                           u1511 135A  
                         u1351 150E                           u1440 11B0                           u1360 153A  
                         u1520 1646                           u1600 0EF8                   _BAUD4CONbits 000EE9  
                         u1441 11AC                           u1361 1536                           u1521 1642  
                         u1601 0EF4                           u1450 11FA                           u1370 1570  
                         u1530 169C                           u1610 1034                           u1451 11F6  
                         u1371 156C                           u1531 1698                           u1611 1030  
                         u1460 124E                           u1540 19E4                           u1380 1986  
                         u1620 1052                           u1461 124A                           u1541 19E0  
                         u1381 1982                           u1621 104E                           u1390 10C6  
                         u1470 1280                           u1630 106C                           u1550 0E66  
                         u1391 10C2                           u1471 127C                           u1631 1068  
                         u1551 0E60                           u1480 12BE                           u1640 107C  
                         u1560 0E68                           u1481 12BA                           u1641 1078  
                         u1490 12E8                           u1570 0E7A                           u1650 13C4  
                         u1707 1A54                           u1491 12E4                           u1571 0E76  
                         u1651 13C0                           u1580 0EB6                           u1660 1410  
                         u1581 0EB2                           u1661 140C                           u1590 0EE2  
                         u1670 142C                           u1591 0EDE                           u1671 1428  
                         u1680 17A8                           u1681 17A4                           u1697 17C4  
                         abs@a 0018                           _dbuf 01B4                           _blue 00F8  
                         _main 15B8                           _dtoa 0E36                           _prec 00F2  
                         pad@i 001D                           pad@p 001A                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001F                           fsr2l 000FD9                           btemp 0055  
                         start 0088         __end_of_color_read_Red 1854                __end_of_HighISR 0088  
                 ___param_bank 000000                          ??_abs 001A                          ??_pad 001C  
              __end_of___aodiv 123C                          ?_main 0001                          ?_dtoa 0021  
              __end_of___aomod 13A0                          i2l178 007C                          i2l283 1BCA  
                        i2l276 1ACE                          i2l269 1B4C                   vfpfcnvrt@fmt 0046  
                        _TMR0H 000FD4                          _TMR0L 000FD3                          _Light 16B2  
   __end_of_I2C_2_Master_Start 1C14     __end_of_I2C_2_Master_Write 1BF6                          _clear 00F4  
                        _flags 00FC                          _green 00F6                          _fputc 14EE  
                        _fputs 1944                          pad@fp 0016                          _width 00F0  
                        _putch 1C14                          main@i 00EF                          dtoa@d 0023  
                        dtoa@i 0042                          dtoa@n 0039                          dtoa@p 0035  
                        dtoa@s 0041                          dtoa@w 0037                          tablat 000FF5  
                        ttemp5 0056                          ttemp6 0059                          ttemp7 005D  
                        status 000FD8                          wtemp8 0056                __end_of_sprintf 1764  
      __end_of_color_read_Blue 1944          _I2C_2_Master_RepStart 1BF6             putCharToRxBuf@byte 0001  
              ?_color_read_Red 000A                __initialization 1A0A                   __end_of_main 1638  
                 __end_of_dtoa 10B4             putCharToTxBuf@byte 0006                         ??_main 004E  
                       ??_dtoa 002B                  __activetblptr 000001                         ?_Light 0001  
                       ?_fputc 0006                         ?_fputs 000F                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RD5PPS 000E6F  
                       _RD6PPS 000E70                         i2l2053 1AA4                         i2l2061 1BB4  
                       i2l2055 1AB4                         i2l2071 1B4A                         i2l2057 1AB8  
                       i2l2065 1B26                         i2l2161 0054                         i2l2067 1B36  
                       i2l2171 0076                         i2l2163 0058                         i2l2155 0012  
                       i2l2069 1B3A                         i2l2157 0038                         i2l2165 005C  
                       i2l2167 006C                         i2l2159 0040                         i2l2169 0070  
                    ??_HighISR 0003       __end_of_color_click_init 1A74                         _RX4PPS 000E15  
                       _TX4REG 000EE4                   vfprintf@cfmt 004C               _getCharFromTxBuf 1AA4  
                    ??___aodiv 0016                      ??___aomod 0016                     _ReturnFLAG 00FE  
                       _levels 17B4                         clear_0 1A10                         clear_1 1A1C  
                       clear_2 1A28                         isa$std 000001                         pad@buf 0018  
                       dtoa@fp 0021                         fputc@c 0006              ?_TxBufferedString 0007  
                       fputs@c 0013                         fputs@i 0014                         fputs@s 000F  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 0009                         putch@c 0001  
             __end_of_vfprintf 17B4                      ??_sprintf 004E          __end_of_isDataInTxBuf 1BCC  
                   __accesstop 0060        __end_of__initialization 1A2E       __end_of_color_read_Clear 18F4  
     __end_of_color_read_Green 18A4         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 000A                _Interrupts_init 1BCC                  __end_of_Light 1712  
               __pcstackCOMRAM 0001                  __end_of_fputc 15B8                  __end_of_fputs 1988  
                __end_of_putch 1C16              __end_of_LightInit 1BEA                        ??_Light 0006  
                      ??_fputc 000A                        ??_fputs 0013                        ??_putch 0006  
                   __pbssBANK0 00F0                     __pbssBANK1 0100              _color_writetoaddr 1B76  
           ?_color_writetoaddr 0008                        ?_levels 0011            ??_color_writetoaddr 0009  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 1BDC         color_writetoaddr@value 0008  
             ??_color_read_Red 000C                        _HighISR 0008      __end_of_color_writetoaddr 1B96  
           _I2C_2_Master_Start 1C0A                     _initUSART4 1B96             _I2C_2_Master_Write 1BEA  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000F  
                      ___aodiv 10B4                        ___aomod 123C            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 006A                   __psmallconst 0E00  
                      __pcinit 1A0A                        __ramtop 0E00                        __ptext0 15B8  
                      __ptext1 1712                        __ptext2 1764                        __ptext3 13A0  
                      __ptext4 0E36                        __ptext5 1638                        __ptext6 1944  
                      __ptext7 14EE                        __ptext8 1C14                        __ptext9 19CA  
                _RxBufWriteCnt 0054       __end_of_getCharFromTxBuf 1AD0                        main@buf 008B  
                      _sprintf 1712           ??_I2C_2_Master_Start 0007           ??_I2C_2_Master_Write 0007  
         end_of_initialization 1A2E                        fputc@fp 0008                        levels@i 0011  
                      fputs@fp 0011              ?_color_click_init 0001             ??_color_click_init 000A  
            __end_of_vfpfcnvrt 14EE                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0060  
                   ??_vfprintf 004C                      _TRISAbits 000F81                      _TRISDbits 000F84  
                    _TRISFbits 000F86                      _TRISGbits 000F87       color_writetoaddr@address 0009  
      ??_I2C_2_Master_RepStart 0007               ?_Interrupts_init 0001              ?_color_read_Clear 000A  
                 _EUSART4RXbuf 01A0                   _EUSART4TXbuf 0100                   _EUSART4VXbuf 0164  
            ?_color_read_Green 000A                    ?_initUSART4 0001             ??_color_read_Clear 000C  
           ??_color_read_Green 000C                    vfpfcnvrt@ap 0048                    vfpfcnvrt@cp 0068  
                  vfpfcnvrt@fp 0044                 __end_of_levels 1804            color_read_Clear@tmp 000F  
          start_initialization 1A0A                      _LightInit 1BDC                    __end_of_abs 1A0A  
                  __end_of_pad 16B2                  _TxBufWriteCnt 0052            color_read_Green@tmp 000F  
                  vfprintf@fmt 006C                 _putCharToRxBuf 1B24                 _putCharToTxBuf 1AFA  
                     ??_levels 0013                    __pbssCOMRAM 004E                  __pcstackBANK0 0060  
                   ?_LightInit 0001               ___aodiv@dividend 0006                       ?_HighISR 0001  
                    _dtoa$1516 0033         __end_of_putCharToRxBuf 1B4E         __end_of_putCharToTxBuf 1B24  
                    __pintcode 0008                       ?___aodiv 0006                       ?___aomod 0006  
             ___aodiv@quotient 0018         TxBufferedString@string 0007           I2C_2_Master_Read@ack 0008  
               Light@colorcode 0006           I2C_2_Master_Read@tmp 0009                    __smallconst 0E00  
            _I2C_2_Master_Idle 1B4E              _I2C_2_Master_Init 1AD0              _I2C_2_Master_Read 1988  
            _I2C_2_Master_Stop 1C00                   _RxBufReadCnt 0053             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                _VxBufWriteCnt 0050                       ?_sprintf 0070              ?_getCharFromTxBuf 0001  
           ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 0006            ??_I2C_2_Master_Init 0006  
          ??_I2C_2_Master_Read 0007                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0007  
                _isDataInTxBuf 1BB4                       _LATFbits 000F7E               _TxBufferedString 1A74  
                     _LATGbits 000F7F                       _PIE0bits 000E29                       _PIE4bits 000E2D  
                     i2u114_40 1AB4                       i2u114_41 1AB0                       i2u115_40 1BC8  
                     i2u115_41 1BC2                       i2u116_40 1BCA                       i2u117_40 1B36  
                     i2u117_41 1B32                       i2u126_40 0024                       i2u126_41 001E  
                     i2u126_46 0026                       i2u127_40 0038                       i2u127_41 0034  
                     i2u128_40 0054                       i2u128_41 0050                       i2u129_40 006C  
                     i2u129_41 0068                       _PIR4bits 000E37                ?_putCharToRxBuf 0001  
              ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 13A0      __end_of_I2C_2_Master_Idle 1B76      __end_of_I2C_2_Master_Init 1AFA  
    __end_of_I2C_2_Master_Read 19CA      __end_of_I2C_2_Master_Stop 1C0A    I2C_2_Master_Write@data_byte 0007  
            ??_color_read_Blue 000C                    ??_LightInit 0006                   _TxBufReadCnt 0051  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1C00             color_read_Blue@tmp 000F  
                 ??_initUSART4 0006                       __Hrparam 0000                     vfprintf@ap 006E  
                     __Lrparam 0000                     vfprintf@fp 006A                   __Lsmallconst 0E00  
                   ?_vfpfcnvrt 0044                ___aodiv@divisor 000E                ___aodiv@counter 0016  
                     _charFLAG 00FD                     _ANSELDbits 000EA7                     sprintf@fmt 0072  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6             __end_of_initUSART4 1BB4  
                 _VxBufReadCnt 004F                       __ptext10 123C                       __ptext11 10B4  
                     __ptext20 1B96                       __ptext12 17B4                       __ptext21 1A40  
                     __ptext13 1804                       __ptext30 1BDC                       __ptext22 1B76  
                     __ptext14 1854                       __ptext31 1BCC                       __ptext23 1BEA  
                     __ptext15 18A4                       __ptext24 1C00                       __ptext16 18F4  
                     __ptext33 1B24                       __ptext25 1C0A                       __ptext17 1BF6  
                     __ptext34 1BB4                       __ptext26 1B4E                       __ptext18 1988  
                     __ptext35 1AA4                       __ptext27 1AD0                       __ptext19 16B2  
                     __ptext28 1A74                       __ptext29 1AFA                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       _sendFLAG 004E                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 0055                       _vfprintf 1764  
             ___aomod@dividend 0006                     _INTCONbits 000FF2                ??_isDataInTxBuf 0001  
                     intlevel2 0000                      sprintf@ap 007E                     HighISR@reg 0005  
              ___aomod@divisor 000E                    ??_vfpfcnvrt 004A                ___aomod@counter 0016  
             _color_click_init 1A40       __end_of_TxBufferedString 1AA4                       sprintf@f 0080  
                     sprintf@s 0070                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0017               ??_putCharToRxBuf 0001  
             ??_putCharToTxBuf 0006                   ___aomod@sign 0017  
