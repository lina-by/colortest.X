

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 04 13:32:54 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Version 2.35
    55                           ; Generated 05/05/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     _RC4STAbits	set	3815
    90   000000                     _SP4BRGH	set	3814
    91   000000                     _SP4BRGL	set	3813
    92   000000                     _TX4STAbits	set	3816
    93   000000                     _BAUD4CONbits	set	3817
    94   000000                     _LATAbits	set	3961
    95   000000                     _LATFbits	set	3966
    96   000000                     _LATGbits	set	3967
    97   000000                     _TRISAbits	set	3969
    98   000000                     _TRISFbits	set	3974
    99   000000                     _TRISGbits	set	3975
   100   000000                     _SSP2CON2bits	set	3802
   101   000000                     _RX4PPS	set	3605
   102   000000                     _PIE0bits	set	3625
   103   000000                     _PIE4bits	set	3629
   104   000000                     _PIR4bits	set	3639
   105   000000                     _INTCONbits	set	4082
   106   000000                     _RC0PPS	set	3682
   107   000000                     _RC4REG	set	3811
   108   000000                     _TX4REG	set	3812
   109   000000                     _TMR0L	set	4051
   110   000000                     _TMR0H	set	4052
   111   000000                     _T0CON0bits	set	4053
   112   000000                     _T0CON1bits	set	4054
   113   000000                     _TRISDbits	set	3972
   114   000000                     _RD5PPS	set	3695
   115   000000                     _ANSELDbits	set	3751
   116   000000                     _SSP2ADD	set	3798
   117   000000                     _SSP2CON1bits	set	3801
   118   000000                     _SSP2CLKPPS	set	3612
   119   000000                     _SSP2DATPPS	set	3613
   120   000000                     _SSP2CON2	set	3802
   121   000000                     _SSP2STAT	set	3800
   122   000000                     _SSP2BUF	set	3797
   123   000000                     _RD6PPS	set	3696
   124                           
   125                           	psect	smallconst
   126   000E00                     __psmallconst:
   127                           	callstack 0
   128   000E00  00                 	db	0
   129   000E01                     STR_1:
   130   000E01  6C                 	db	108	;'l'
   131   000E02  65                 	db	101	;'e'
   132   000E03  76                 	db	118	;'v'
   133   000E04  65                 	db	101	;'e'
   134   000E05  6C                 	db	108	;'l'
   135   000E06  73                 	db	115	;'s'
   136   000E07  3D                 	db	61	;'='
   137   000E08  25                 	db	37
   138   000E09  64                 	db	100	;'d'
   139   000E0A  20                 	db	32
   140   000E0B  3B                 	db	59	;';'
   141   000E0C  20                 	db	32
   142   000E0D  72                 	db	114	;'r'
   143   000E0E  65                 	db	101	;'e'
   144   000E0F  64                 	db	100	;'d'
   145   000E10  3D                 	db	61	;'='
   146   000E11  25                 	db	37
   147   000E12  64                 	db	100	;'d'
   148   000E13  20                 	db	32
   149   000E14  3B                 	db	59	;';'
   150   000E15  20                 	db	32
   151   000E16  62                 	db	98	;'b'
   152   000E17  6C                 	db	108	;'l'
   153   000E18  75                 	db	117	;'u'
   154   000E19  65                 	db	101	;'e'
   155   000E1A  3D                 	db	61	;'='
   156   000E1B  25                 	db	37
   157   000E1C  64                 	db	100	;'d'
   158   000E1D  20                 	db	32
   159   000E1E  3B                 	db	59	;';'
   160   000E1F  20                 	db	32
   161   000E20  67                 	db	103	;'g'
   162   000E21  72                 	db	114	;'r'
   163   000E22  65                 	db	101	;'e'
   164   000E23  65                 	db	101	;'e'
   165   000E24  6E                 	db	110	;'n'
   166   000E25  3D                 	db	61	;'='
   167   000E26  25                 	db	37
   168   000E27  64                 	db	100	;'d'
   169   000E28  20                 	db	32
   170   000E29  3B                 	db	59	;';'
   171   000E2A  20                 	db	32
   172   000E2B  63                 	db	99	;'c'
   173   000E2C  6C                 	db	108	;'l'
   174   000E2D  65                 	db	101	;'e'
   175   000E2E  61                 	db	97	;'a'
   176   000E2F  72                 	db	114	;'r'
   177   000E30  3D                 	db	61	;'='
   178   000E31  25                 	db	37
   179   000E32  64                 	db	100	;'d'
   180   000E33  0A                 	db	10
   181   000E34  00                 	db	0
   182   000E35  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   001A02                     __pcinit:
   188                           	callstack 0
   189   001A02                     start_initialization:
   190                           	callstack 0
   191   001A02                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Clear objects allocated to BANK1 (212 bytes)
   195   001A02  EE01  F000         	lfsr	0,__pbssBANK1
   196   001A06  0ED4               	movlw	212
   197   001A08                     clear_0:
   198   001A08  6AEE               	clrf	postinc0,c
   199   001A0A  06E8               	decf	wreg,f,c
   200   001A0C  E1FD               	bnz	clear_0
   201                           
   202                           ; Clear objects allocated to BANK0 (15 bytes)
   203   001A0E  EE00  F0F0         	lfsr	0,__pbssBANK0
   204   001A12  0E0F               	movlw	15
   205   001A14                     clear_1:
   206   001A14  6AEE               	clrf	postinc0,c
   207   001A16  06E8               	decf	wreg,f,c
   208   001A18  E1FD               	bnz	clear_1
   209                           
   210                           ; Clear objects allocated to COMRAM (7 bytes)
   211   001A1A  EE00  F04E         	lfsr	0,__pbssCOMRAM
   212   001A1E  0E07               	movlw	7
   213   001A20                     clear_2:
   214   001A20  6AEE               	clrf	postinc0,c
   215   001A22  06E8               	decf	wreg,f,c
   216   001A24  E1FD               	bnz	clear_2
   217   001A26                     end_of_initialization:
   218                           	callstack 0
   219   001A26                     __end_of__initialization:
   220                           	callstack 0
   221   001A26  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   222   001A28  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   223   001A2A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   224   001A2C  6EF8               	movwf	tblptru,c
   225   001A2E  0E0E               	movlw	high __Lsmallconst
   226   001A30  6EF7               	movwf	tblptrh,c
   227   001A32  0100               	movlb	0
   228   001A34  EF19  F00B         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231   00004E                     __pbssCOMRAM:
   232                           	callstack 0
   233   00004E                     _sendFLAG:
   234                           	callstack 0
   235   00004E                     	ds	1
   236   00004F                     _VxBufReadCnt:
   237                           	callstack 0
   238   00004F                     	ds	1
   239   000050                     _VxBufWriteCnt:
   240                           	callstack 0
   241   000050                     	ds	1
   242   000051                     _TxBufReadCnt:
   243                           	callstack 0
   244   000051                     	ds	1
   245   000052                     _TxBufWriteCnt:
   246                           	callstack 0
   247   000052                     	ds	1
   248   000053                     _RxBufReadCnt:
   249                           	callstack 0
   250   000053                     	ds	1
   251   000054                     _RxBufWriteCnt:
   252                           	callstack 0
   253   000054                     	ds	1
   254                           
   255                           	psect	bssBANK0
   256   0000F0                     __pbssBANK0:
   257                           	callstack 0
   258   0000F0                     _width:
   259                           	callstack 0
   260   0000F0                     	ds	2
   261   0000F2                     _prec:
   262                           	callstack 0
   263   0000F2                     	ds	2
   264   0000F4                     _clear:
   265                           	callstack 0
   266   0000F4                     	ds	2
   267   0000F6                     _green:
   268                           	callstack 0
   269   0000F6                     	ds	2
   270   0000F8                     _blue:
   271                           	callstack 0
   272   0000F8                     	ds	2
   273   0000FA                     _red:
   274                           	callstack 0
   275   0000FA                     	ds	2
   276   0000FC                     _flags:
   277                           	callstack 0
   278   0000FC                     	ds	1
   279   0000FD                     _charFLAG:
   280                           	callstack 0
   281   0000FD                     	ds	1
   282   0000FE                     _ReturnFLAG:
   283                           	callstack 0
   284   0000FE                     	ds	1
   285                           
   286                           	psect	bssBANK1
   287   000100                     __pbssBANK1:
   288                           	callstack 0
   289   000100                     _EUSART4TXbuf:
   290                           	callstack 0
   291   000100                     	ds	100
   292   000164                     _EUSART4VXbuf:
   293                           	callstack 0
   294   000164                     	ds	60
   295   0001A0                     _EUSART4RXbuf:
   296                           	callstack 0
   297   0001A0                     	ds	20
   298   0001B4                     _dbuf:
   299                           	callstack 0
   300   0001B4                     	ds	32
   301                           
   302                           	psect	cstackBANK0
   303   000060                     __pcstackBANK0:
   304                           	callstack 0
   305   000060                     vfpfcnvrt@convarg:
   306                           	callstack 0
   307                           
   308                           ; 8 bytes @ 0x0
   309   000060                     	ds	8
   310   000068                     vfpfcnvrt@cp:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x8
   314   000068                     	ds	2
   315   00006A                     ?_vfprintf:
   316                           	callstack 0
   317   00006A                     vfprintf@fp:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0xA
   321   00006A                     	ds	2
   322   00006C                     vfprintf@fmt:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0xC
   326   00006C                     	ds	2
   327   00006E                     vfprintf@ap:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0xE
   331   00006E                     	ds	2
   332   000070                     ?_sprintf:
   333                           	callstack 0
   334   000070                     sprintf@s:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x10
   338   000070                     	ds	2
   339   000072                     sprintf@fmt:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x12
   343   000072                     	ds	12
   344   00007E                     sprintf@ap:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x1E
   348   00007E                     	ds	2
   349   000080                     sprintf@f:
   350                           	callstack 0
   351                           
   352                           ; 11 bytes @ 0x20
   353   000080                     	ds	11
   354   00008B                     main@buf:
   355                           	callstack 0
   356                           
   357                           ; 100 bytes @ 0x2B
   358   00008B                     	ds	100
   359   0000EF                     main@i:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x8F
   363   0000EF                     	ds	1
   364                           
   365                           	psect	cstackCOMRAM
   366   000001                     __pcstackCOMRAM:
   367                           	callstack 0
   368   000001                     ??_getCharFromTxBuf:
   369   000001                     putCharToRxBuf@byte:
   370                           	callstack 0
   371   000001                     
   372                           ; 1 bytes @ 0x0
   373   000001                     	ds	2
   374   000003                     ??_HighISR:
   375                           
   376                           ; 1 bytes @ 0x2
   377   000003                     	ds	2
   378   000005                     HighISR@reg:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x4
   382   000005                     	ds	1
   383   000006                     ??_I2C_2_Master_Idle:
   384   000006                     ?___aodiv:
   385                           	callstack 0
   386   000006                     ?___aomod:
   387                           	callstack 0
   388   000006                     Light@colorcode:
   389                           	callstack 0
   390   000006                     putCharToTxBuf@byte:
   391                           	callstack 0
   392   000006                     fputc@c:
   393                           	callstack 0
   394   000006                     ___aodiv@dividend:
   395                           	callstack 0
   396   000006                     ___aomod@dividend:
   397                           	callstack 0
   398                           
   399                           ; 8 bytes @ 0x5
   400   000006                     	ds	1
   401   000007                     ??_I2C_2_Master_Read:
   402   000007                     I2C_2_Master_Write@data_byte:
   403                           	callstack 0
   404   000007                     TxBufferedString@string:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x6
   408   000007                     	ds	1
   409   000008                     color_writetoaddr@value:
   410                           	callstack 0
   411   000008                     I2C_2_Master_Read@ack:
   412                           	callstack 0
   413   000008                     fputc@fp:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x7
   417   000008                     	ds	1
   418   000009                     color_writetoaddr@address:
   419                           	callstack 0
   420   000009                     I2C_2_Master_Read@tmp:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x8
   424   000009                     	ds	1
   425   00000A                     ??_color_click_init:
   426   00000A                     ??_fputc:
   427   00000A                     ?_color_read_Red:
   428                           	callstack 0
   429   00000A                     ?_color_read_Blue:
   430                           	callstack 0
   431   00000A                     ?_color_read_Green:
   432                           	callstack 0
   433   00000A                     ?_color_read_Clear:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x9
   437   00000A                     	ds	2
   438   00000C                     ??_color_read_Red:
   439   00000C                     ??_color_read_Blue:
   440   00000C                     ??_color_read_Green:
   441   00000C                     ??_color_read_Clear:
   442                           
   443                           ; 1 bytes @ 0xB
   444   00000C                     	ds	2
   445   00000E                     ___aodiv@divisor:
   446                           	callstack 0
   447   00000E                     ___aomod@divisor:
   448                           	callstack 0
   449                           
   450                           ; 8 bytes @ 0xD
   451   00000E                     	ds	1
   452   00000F                     color_read_Red@tmp:
   453                           	callstack 0
   454   00000F                     color_read_Blue@tmp:
   455                           	callstack 0
   456   00000F                     color_read_Green@tmp:
   457                           	callstack 0
   458   00000F                     color_read_Clear@tmp:
   459                           	callstack 0
   460   00000F                     fputs@s:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xE
   464   00000F                     	ds	2
   465   000011                     levels@i:
   466                           	callstack 0
   467   000011                     fputs@fp:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x10
   471   000011                     	ds	2
   472   000013                     ??_levels:
   473   000013                     fputs@c:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x12
   477   000013                     	ds	1
   478   000014                     fputs@i:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x13
   482   000014                     	ds	2
   483   000016                     ___aodiv@counter:
   484                           	callstack 0
   485   000016                     ___aomod@counter:
   486                           	callstack 0
   487   000016                     pad@fp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x15
   491   000016                     	ds	1
   492   000017                     ___aodiv@sign:
   493                           	callstack 0
   494   000017                     ___aomod@sign:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x16
   498   000017                     	ds	1
   499   000018                     ?_abs:
   500                           	callstack 0
   501   000018                     pad@buf:
   502                           	callstack 0
   503   000018                     abs@a:
   504                           	callstack 0
   505   000018                     ___aodiv@quotient:
   506                           	callstack 0
   507                           
   508                           ; 8 bytes @ 0x17
   509   000018                     	ds	2
   510   00001A                     ??_abs:
   511   00001A                     pad@p:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x19
   515   00001A                     	ds	2
   516   00001C                     ??_pad:
   517                           
   518                           ; 1 bytes @ 0x1B
   519   00001C                     	ds	1
   520   00001D                     pad@i:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x1C
   524   00001D                     	ds	2
   525   00001F                     pad@w:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x1E
   529   00001F                     	ds	2
   530   000021                     dtoa@fp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x20
   534   000021                     	ds	2
   535   000023                     dtoa@d:
   536                           	callstack 0
   537                           
   538                           ; 8 bytes @ 0x22
   539   000023                     	ds	8
   540   00002B                     ??_dtoa:
   541                           
   542                           ; 1 bytes @ 0x2A
   543   00002B                     	ds	8
   544   000033                     _dtoa$1516:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x32
   548   000033                     	ds	2
   549   000035                     dtoa@p:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x34
   553   000035                     	ds	2
   554   000037                     dtoa@w:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x36
   558   000037                     	ds	2
   559   000039                     dtoa@n:
   560                           	callstack 0
   561                           
   562                           ; 8 bytes @ 0x38
   563   000039                     	ds	8
   564   000041                     dtoa@s:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x40
   568   000041                     	ds	1
   569   000042                     dtoa@i:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x41
   573   000042                     	ds	2
   574   000044                     vfpfcnvrt@fp:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x43
   578   000044                     	ds	2
   579   000046                     vfpfcnvrt@fmt:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x45
   583   000046                     	ds	2
   584   000048                     vfpfcnvrt@ap:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x47
   588   000048                     	ds	2
   589   00004A                     ??_vfpfcnvrt:
   590                           
   591                           ; 1 bytes @ 0x49
   592   00004A                     	ds	2
   593   00004C                     vfprintf@cfmt:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x4B
   597   00004C                     	ds	2
   598   00004E                     
   599                           ; 1 bytes @ 0x4D
   600 ;;
   601 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   602 ;;
   603 ;; *************** function _main *****************
   604 ;; Defined at:
   605 ;;		line 44 in file "main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  buf           100   43[BANK0 ] unsigned char [100]
   610 ;;  i               1  143[BANK0 ] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   621 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   623 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   624 ;;Total ram usage:      101 bytes
   625 ;; Hardware stack levels required when called: 10
   626 ;; This function calls:
   627 ;;		_Interrupts_init
   628 ;;		_LightInit
   629 ;;		_TxBufferedString
   630 ;;		_color_click_init
   631 ;;		_initUSART4
   632 ;;		_levels
   633 ;;		_sprintf
   634 ;; This function is called by:
   635 ;;		Startup code after reset
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text0
   640   001632                     __ptext0:
   641                           	callstack 0
   642   001632                     _main:
   643                           	callstack 21
   644   001632                     
   645                           ;main.c: 45:     initUSART4();
   646   001632  ECC7  F00D         	call	_initUSART4	;wreg free
   647   001636                     
   648                           ;main.c: 46:     Interrupts_init();
   649   001636  ECE2  F00D         	call	_Interrupts_init	;wreg free
   650   00163A                     
   651                           ;main.c: 48:     color_click_init();
   652   00163A  EC1C  F00D         	call	_color_click_init	;wreg free
   653   00163E                     
   654                           ;main.c: 49:     LightInit();
   655   00163E  ECEA  F00D         	call	_LightInit	;wreg free
   656   001642                     
   657                           ;main.c: 50:     char i=0;
   658   001642  0E00               	movlw	0
   659   001644  0100               	movlb	0	; () banked
   660   001646  6FEF               	movwf	main@i& (0+255),b
   661   001648                     l2435:
   662                           
   663                           ;main.c: 53:         levels(i);
   664   001648  C0EF  F011         	movff	main@i,levels@i
   665   00164C  6A12               	clrf	(levels@i+1)^0,c
   666   00164E  ECD6  F00B         	call	_levels	;wreg free
   667   001652                     
   668                           ;main.c: 54:         sprintf(&buf,"levels=%d ; red=%d ; blue=%d ; green=%d ; clear=%d\n"
      +                          , i,red,blue,green,clear);
   669   001652  0E8B               	movlw	low main@buf
   670   001654  0100               	movlb	0	; () banked
   671   001656  6F70               	movwf	sprintf@s& (0+255),b
   672   001658  0E00               	movlw	high main@buf
   673   00165A  6F71               	movwf	(sprintf@s+1)& (0+255),b
   674   00165C  0E01               	movlw	low STR_1
   675   00165E  6F72               	movwf	sprintf@fmt& (0+255),b
   676   001660  0E0E               	movlw	high STR_1
   677   001662  6F73               	movwf	(sprintf@fmt+1)& (0+255),b
   678   001664  C0EF  F074         	movff	main@i,?_sprintf+4
   679   001668  6B75               	clrf	(?_sprintf+5)& (0+255),b
   680   00166A  C0FA  F076         	movff	_red,?_sprintf+6
   681   00166E  C0FB  F077         	movff	_red+1,?_sprintf+7
   682   001672  C0F8  F078         	movff	_blue,?_sprintf+8
   683   001676  C0F9  F079         	movff	_blue+1,?_sprintf+9
   684   00167A  C0F6  F07A         	movff	_green,?_sprintf+10
   685   00167E  C0F7  F07B         	movff	_green+1,?_sprintf+11
   686   001682  C0F4  F07C         	movff	_clear,?_sprintf+12
   687   001686  C0F5  F07D         	movff	_clear+1,?_sprintf+13
   688   00168A  EC85  F00B         	call	_sprintf	;wreg free
   689   00168E                     
   690                           ;main.c: 55:         TxBufferedString(&buf);
   691   00168E  0E8B               	movlw	low main@buf
   692   001690  6E07               	movwf	TxBufferedString@string^0,c
   693   001692  0E00               	movlw	high main@buf
   694   001694  6E08               	movwf	(TxBufferedString@string+1)^0,c
   695   001696  EC36  F00D         	call	_TxBufferedString	;wreg free
   696   00169A                     
   697                           ;main.c: 56:         sendFLAG=1;
   698   00169A  0E01               	movlw	1
   699   00169C  6E4E               	movwf	_sendFLAG^0,c
   700   00169E                     
   701                           ;main.c: 57:         PIE4bits.TX4IE=1;
   702   00169E  010E               	movlb	14	; () banked
   703   0016A0  852D               	bsf	45,2,b	;volatile
   704   0016A2  EF24  F00B         	goto	l2435
   705   0016A6  EF44  F000         	goto	start
   706   0016AA                     __end_of_main:
   707                           	callstack 0
   708                           
   709 ;; *************** function _sprintf *****************
   710 ;; Defined at:
   711 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  s               2   16[BANK0 ] PTR unsigned char 
   714 ;;		 -> main@buf(100), 
   715 ;;  fmt             2   18[BANK0 ] PTR const unsigned char 
   716 ;;		 -> STR_1(52), 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  f              11   32[BANK0 ] struct _IO_FILE
   719 ;;  ap              2   30[BANK0 ] PTR void [1]
   720 ;;		 -> ?_sprintf(2), 
   721 ;;  ret             2    0        int 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  2   16[BANK0 ] int 
   724 ;; Registers used:
   725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   731 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   732 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   734 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   735 ;;Total ram usage:       27 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 9
   738 ;; This function calls:
   739 ;;		_vfprintf
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text1
   746   00170A                     __ptext1:
   747                           	callstack 0
   748   00170A                     _sprintf:
   749                           	callstack 21
   750   00170A  0E74               	movlw	low (?_sprintf+4)
   751   00170C  0100               	movlb	0	; () banked
   752   00170E  6F7E               	movwf	sprintf@ap& (0+255),b
   753   001710  0E00               	movlw	high (?_sprintf+4)
   754   001712  6F7F               	movwf	(sprintf@ap+1)& (0+255),b
   755   001714  C070  F080         	movff	sprintf@s,sprintf@f
   756   001718  C071  F081         	movff	sprintf@s+1,sprintf@f+1
   757   00171C                     
   758                           ; BSR set to: 0
   759   00171C  0E00               	movlw	0
   760   00171E  6F84               	movwf	(sprintf@f+4)& (0+255),b
   761   001720  0E00               	movlw	0
   762   001722  6F83               	movwf	(sprintf@f+3)& (0+255),b
   763   001724                     
   764                           ; BSR set to: 0
   765   001724  0E00               	movlw	0
   766   001726  6F8A               	movwf	(sprintf@f+10)& (0+255),b
   767   001728  0E00               	movlw	0
   768   00172A  6F89               	movwf	(sprintf@f+9)& (0+255),b
   769   00172C                     
   770                           ; BSR set to: 0
   771   00172C  0E80               	movlw	low sprintf@f
   772   00172E  6F6A               	movwf	vfprintf@fp& (0+255),b
   773   001730  0E00               	movlw	high sprintf@f
   774   001732  6F6B               	movwf	(vfprintf@fp+1)& (0+255),b
   775   001734  C072  F06C         	movff	sprintf@fmt,vfprintf@fmt
   776   001738  C073  F06D         	movff	sprintf@fmt+1,vfprintf@fmt+1
   777   00173C  0E7E               	movlw	low sprintf@ap
   778   00173E  6F6E               	movwf	vfprintf@ap& (0+255),b
   779   001740  0E00               	movlw	high sprintf@ap
   780   001742  6F6F               	movwf	(vfprintf@ap+1)& (0+255),b
   781   001744  ECAE  F00B         	call	_vfprintf	;wreg free
   782   001748  0100               	movlb	0	; () banked
   783   00174A  5183               	movf	(sprintf@f+3)& (0+255),w,b
   784   00174C  2570               	addwf	sprintf@s& (0+255),w,b
   785   00174E  6ED9               	movwf	fsr2l,c
   786   001750  5184               	movf	(sprintf@f+4)& (0+255),w,b
   787   001752  2171               	addwfc	(sprintf@s+1)& (0+255),w,b
   788   001754  6EDA               	movwf	fsr2h,c
   789   001756  0E00               	movlw	0
   790   001758  6EDF               	movwf	indf2,c
   791   00175A                     
   792                           ; BSR set to: 0
   793   00175A  0012               	return		;funcret
   794   00175C                     __end_of_sprintf:
   795                           	callstack 0
   796                           
   797 ;; *************** function _vfprintf *****************
   798 ;; Defined at:
   799 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
   802 ;;		 -> sprintf@f(11), 
   803 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
   804 ;;		 -> STR_1(52), 
   805 ;;  ap              2   14[BANK0 ] PTR PTR void 
   806 ;;		 -> sprintf@ap(2), 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  cfmt            2   75[COMRAM] PTR unsigned char 
   809 ;;		 -> STR_1(52), 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  2   10[BANK0 ] int 
   812 ;; Registers used:
   813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   819 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   822 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   823 ;;Total ram usage:        8 bytes
   824 ;; Hardware stack levels used: 1
   825 ;; Hardware stack levels required when called: 8
   826 ;; This function calls:
   827 ;;		_vfpfcnvrt
   828 ;; This function is called by:
   829 ;;		_sprintf
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text2
   834   00175C                     __ptext2:
   835                           	callstack 0
   836   00175C                     _vfprintf:
   837                           	callstack 21
   838   00175C                     
   839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   840   00175C  C06C  F04C         	movff	vfprintf@fmt,vfprintf@cfmt
   841   001760  C06D  F04D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   842                           
   843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   844   001764  EFC2  F00B         	goto	l2407
   845   001768                     l2405:
   846                           
   847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   848   001768  C06A  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
   849   00176C  C06B  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   850   001770  0E4C               	movlw	low vfprintf@cfmt
   851   001772  6E46               	movwf	vfpfcnvrt@fmt^0,c
   852   001774  0E00               	movlw	high vfprintf@cfmt
   853   001776  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
   854   001778  C06E  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
   855   00177C  C06F  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   856   001780  ECD0  F009         	call	_vfpfcnvrt	;wreg free
   857   001784                     l2407:
   858                           
   859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   860   001784  C04C  FFF6         	movff	vfprintf@cfmt,tblptrl
   861   001788  C04D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   862   00178C                     	if	0	;tblptru may be non-zero
   863   00178C                     	endif
   864   00178C                     	if	0	;tblptru may be non-zero
   865   00178C                     	endif
   866   00178C  0008               	tblrd		*
   867   00178E  50F5               	movf	tablat,w,c
   868   001790  0900               	iorlw	0
   869   001792  A4D8               	btfss	status,2,c
   870   001794  EFCE  F00B         	goto	u1681
   871   001798  EFD0  F00B         	goto	u1680
   872   00179C                     u1681:
   873   00179C  EFB4  F00B         	goto	l2405
   874   0017A0                     u1680:
   875   0017A0                     
   876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   877   0017A0  0E00               	movlw	0
   878   0017A2  0100               	movlb	0	; () banked
   879   0017A4  6F6B               	movwf	(?_vfprintf+1)& (0+255),b
   880   0017A6  0E00               	movlw	0
   881   0017A8  6F6A               	movwf	?_vfprintf& (0+255),b
   882   0017AA                     
   883                           ; BSR set to: 0
   884   0017AA  0012               	return		;funcret
   885   0017AC                     __end_of_vfprintf:
   886                           	callstack 0
   887                           
   888 ;; *************** function _vfpfcnvrt *****************
   889 ;; Defined at:
   890 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
   893 ;;		 -> sprintf@f(11), 
   894 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
   895 ;;		 -> vfprintf@cfmt(2), 
   896 ;;  ap              2   71[COMRAM] PTR PTR void 
   897 ;;		 -> sprintf@ap(2), 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  convarg         8    0[BANK0 ] struct .
   900 ;;  cp              2    8[BANK0 ] PTR unsigned char 
   901 ;;		 -> STR_1(52), 
   902 ;;  i               2    0        int 
   903 ;;  done            2    0        int 
   904 ;;  c               1    0        unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   914 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   918 ;;Total ram usage:       18 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 7
   921 ;; This function calls:
   922 ;;		_dtoa
   923 ;;		_fputc
   924 ;; This function is called by:
   925 ;;		_vfprintf
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text3
   930   0013A0                     __ptext3:
   931                           	callstack 0
   932   0013A0                     _vfpfcnvrt:
   933                           	callstack 21
   934   0013A0                     
   935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
   936   0013A0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   937   0013A4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   938   0013A8  CFDE FFF6          	movff	postinc2,tblptrl
   939   0013AC  CFDD FFF7          	movff	postdec2,tblptrh
   940   0013B0                     	if	0	;tblptru may be non-zero
   941   0013B0                     	endif
   942   0013B0                     	if	0	;tblptru may be non-zero
   943   0013B0                     	endif
   944   0013B0  0008               	tblrd		*
   945   0013B2  50F5               	movf	tablat,w,c
   946   0013B4  0A25               	xorlw	37
   947   0013B6  A4D8               	btfss	status,2,c
   948   0013B8  EFE0  F009         	goto	u1651
   949   0013BC  EFE2  F009         	goto	u1650
   950   0013C0                     u1651:
   951   0013C0  EF62  F00A         	goto	l2397
   952   0013C4                     u1650:
   953   0013C4                     
   954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
   955   0013C4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   956   0013C8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   957   0013CC  2ADE               	incf	postinc2,f,c
   958   0013CE  0E00               	movlw	0
   959   0013D0  22DD               	addwfc	postdec2,f,c
   960   0013D2                     
   961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
   962   0013D2  0E00               	movlw	0
   963   0013D4  0100               	movlb	0	; () banked
   964   0013D6  6FF1               	movwf	(_width+1)& (0+255),b
   965   0013D8  0E00               	movlw	0
   966   0013DA  6FF0               	movwf	_width& (0+255),b
   967   0013DC  C0F0  F0FC         	movff	_width,_flags
   968   0013E0                     
   969                           ; BSR set to: 0
   970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
   971   0013E0  69F2               	setf	_prec& (0+255),b
   972   0013E2  69F3               	setf	(_prec+1)& (0+255),b
   973   0013E4                     
   974                           ; BSR set to: 0
   975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
   976   0013E4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   977   0013E8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   978   0013EC  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
   979   0013F0  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
   980   0013F4                     
   981                           ; BSR set to: 0
   982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   983   0013F4  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   984   0013F8  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   985   0013FC                     	if	0	;tblptru may be non-zero
   986   0013FC                     	endif
   987   0013FC                     	if	0	;tblptru may be non-zero
   988   0013FC                     	endif
   989   0013FC  0008               	tblrd		*
   990   0013FE  50F5               	movf	tablat,w,c
   991   001400  0A64               	xorlw	100
   992   001402  B4D8               	btfsc	status,2,c
   993   001404  EF06  F00A         	goto	u1661
   994   001408  EF08  F00A         	goto	u1660
   995   00140C                     u1661:
   996   00140C  EF16  F00A         	goto	l2387
   997   001410                     u1660:
   998   001410                     
   999                           ; BSR set to: 0
  1000   001410  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1001   001414  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1002   001418                     	if	0	;tblptru may be non-zero
  1003   001418                     	endif
  1004   001418                     	if	0	;tblptru may be non-zero
  1005   001418                     	endif
  1006   001418  0008               	tblrd		*
  1007   00141A  50F5               	movf	tablat,w,c
  1008   00141C  0A69               	xorlw	105
  1009   00141E  A4D8               	btfss	status,2,c
  1010   001420  EF14  F00A         	goto	u1671
  1011   001424  EF16  F00A         	goto	u1670
  1012   001428                     u1671:
  1013   001428  EF59  F00A         	goto	l2393
  1014   00142C                     u1670:
  1015   00142C                     l2387:
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1019   00142C  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1020   001430  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1021   001434  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1022   001438  0E02               	movlw	2
  1023   00143A  26DE               	addwf	postinc2,f,c
  1024   00143C  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1025   001440  0E00               	movlw	0
  1026   001442  22DD               	addwfc	postdec2,f,c
  1027   001444  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1028   001448  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1029   00144C  CFDE F060          	movff	postinc2,vfpfcnvrt@convarg
  1030   001450  CFDD F061          	movff	postdec2,vfpfcnvrt@convarg+1
  1031   001454  0E00               	movlw	0
  1032   001456  BF61               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1033   001458  0EFF               	movlw	-1
  1034   00145A  6F62               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1035   00145C  6F63               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1036   00145E  6F64               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1037   001460  6F65               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1038   001462  6F66               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1039   001464  6F67               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1040                           
  1041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1042   001466  0E01               	movlw	1
  1043   001468  2568               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1044   00146A  6E4A               	movwf	??_vfpfcnvrt^0,c
  1045   00146C  0E00               	movlw	0
  1046   00146E  2169               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1047   001470  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  1048   001472  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1049   001476  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1050   00147A  C04A  FFDE         	movff	??_vfpfcnvrt,postinc2
  1051   00147E  C04B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1052   001482                     
  1053                           ; BSR set to: 0
  1054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1055   001482  C044  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  1056   001486  C045  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1057   00148A  C060  F023         	movff	vfpfcnvrt@convarg,dtoa@d
  1058   00148E  C061  F024         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1059   001492  C062  F025         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1060   001496  C063  F026         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1061   00149A  C064  F027         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1062   00149E  C065  F028         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1063   0014A2  C066  F029         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1064   0014A6  C067  F02A         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1065   0014AA  EC1B  F007         	call	_dtoa	;wreg free
  1066   0014AE  EF76  F00A         	goto	l1099
  1067   0014B2                     l2393:
  1068                           
  1069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1070   0014B2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1071   0014B6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1072   0014BA  2ADE               	incf	postinc2,f,c
  1073   0014BC  0E00               	movlw	0
  1074   0014BE  22DD               	addwfc	postdec2,f,c
  1075   0014C0  EF76  F00A         	goto	l1099
  1076   0014C4                     l2397:
  1077                           
  1078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1079   0014C4  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1080   0014C8  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1081   0014CC  CFDE FFF6          	movff	postinc2,tblptrl
  1082   0014D0  CFDD FFF7          	movff	postdec2,tblptrh
  1083   0014D4                     	if	0	;tblptru may be non-zero
  1084   0014D4                     	endif
  1085   0014D4                     	if	0	;tblptru may be non-zero
  1086   0014D4                     	endif
  1087   0014D4  0008               	tblrd		*
  1088   0014D6  50F5               	movf	tablat,w,c
  1089   0014D8  6E06               	movwf	fputc@c^0,c
  1090   0014DA  6A07               	clrf	(fputc@c+1)^0,c
  1091   0014DC  C044  F008         	movff	vfpfcnvrt@fp,fputc@fp
  1092   0014E0  C045  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1093   0014E4  EC77  F00A         	call	_fputc	;wreg free
  1094   0014E8  EF59  F00A         	goto	l2393
  1095   0014EC                     l1099:
  1096   0014EC  0012               	return		;funcret
  1097   0014EE                     __end_of_vfpfcnvrt:
  1098                           	callstack 0
  1099                           
  1100 ;; *************** function _dtoa *****************
  1101 ;; Defined at:
  1102 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  1105 ;;		 -> sprintf@f(11), 
  1106 ;;  d               8   34[COMRAM] long long 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  n               8   56[COMRAM] long long 
  1109 ;;  i               2   65[COMRAM] int 
  1110 ;;  w               2   54[COMRAM] int 
  1111 ;;  p               2   52[COMRAM] int 
  1112 ;;  s               1   64[COMRAM] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1122 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;Total ram usage:       35 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 6
  1129 ;; This function calls:
  1130 ;;		___aodiv
  1131 ;;		___aomod
  1132 ;;		_abs
  1133 ;;		_pad
  1134 ;; This function is called by:
  1135 ;;		_vfpfcnvrt
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text4
  1140   000E36                     __ptext4:
  1141                           	callstack 0
  1142   000E36                     _dtoa:
  1143                           	callstack 21
  1144   000E36                     
  1145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1146   000E36  C023  F039         	movff	dtoa@d,dtoa@n
  1147   000E3A  C024  F03A         	movff	dtoa@d+1,dtoa@n+1
  1148   000E3E  C025  F03B         	movff	dtoa@d+2,dtoa@n+2
  1149   000E42  C026  F03C         	movff	dtoa@d+3,dtoa@n+3
  1150   000E46  C027  F03D         	movff	dtoa@d+4,dtoa@n+4
  1151   000E4A  C028  F03E         	movff	dtoa@d+5,dtoa@n+5
  1152   000E4E  C029  F03F         	movff	dtoa@d+6,dtoa@n+6
  1153   000E52  C02A  F040         	movff	dtoa@d+7,dtoa@n+7
  1154   000E56                     
  1155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1156   000E56  BE40               	btfsc	(dtoa@n+7)^0,7,c
  1157   000E58  EF30  F007         	goto	u1551
  1158   000E5C  EF33  F007         	goto	u1550
  1159   000E60                     u1551:
  1160   000E60  0E01               	movlw	1
  1161   000E62  EF34  F007         	goto	u1560
  1162   000E66                     u1550:
  1163   000E66  0E00               	movlw	0
  1164   000E68                     u1560:
  1165   000E68  6E41               	movwf	dtoa@s^0,c
  1166   000E6A                     
  1167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1168   000E6A  5041               	movf	dtoa@s^0,w,c
  1169   000E6C  B4D8               	btfsc	status,2,c
  1170   000E6E  EF3B  F007         	goto	u1571
  1171   000E72  EF3D  F007         	goto	u1570
  1172   000E76                     u1571:
  1173   000E76  EF4D  F007         	goto	l2329
  1174   000E7A                     u1570:
  1175   000E7A                     
  1176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1177   000E7A  1E40               	comf	(dtoa@n+7)^0,f,c
  1178   000E7C  1E3F               	comf	(dtoa@n+6)^0,f,c
  1179   000E7E  1E3E               	comf	(dtoa@n+5)^0,f,c
  1180   000E80  1E3D               	comf	(dtoa@n+4)^0,f,c
  1181   000E82  1E3C               	comf	(dtoa@n+3)^0,f,c
  1182   000E84  1E3B               	comf	(dtoa@n+2)^0,f,c
  1183   000E86  1E3A               	comf	(dtoa@n+1)^0,f,c
  1184   000E88  6C39               	negf	dtoa@n^0,c
  1185   000E8A  0E00               	movlw	0
  1186   000E8C  223A               	addwfc	(dtoa@n+1)^0,f,c
  1187   000E8E  223B               	addwfc	(dtoa@n+2)^0,f,c
  1188   000E90  223C               	addwfc	(dtoa@n+3)^0,f,c
  1189   000E92  223D               	addwfc	(dtoa@n+4)^0,f,c
  1190   000E94  223E               	addwfc	(dtoa@n+5)^0,f,c
  1191   000E96  223F               	addwfc	(dtoa@n+6)^0,f,c
  1192   000E98  2240               	addwfc	(dtoa@n+7)^0,f,c
  1193   000E9A                     l2329:
  1194                           
  1195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1196   000E9A  0100               	movlb	0	; () banked
  1197   000E9C  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  1198   000E9E  EF5B  F007         	goto	u1580
  1199   000EA2  51F3               	movf	(_prec+1)& (0+255),w,b
  1200   000EA4  E106               	bnz	u1581
  1201   000EA6  05F2               	decf	_prec& (0+255),w,b
  1202   000EA8  B0D8               	btfsc	status,0,c
  1203   000EAA  EF59  F007         	goto	u1581
  1204   000EAE  EF5B  F007         	goto	u1580
  1205   000EB2                     u1581:
  1206   000EB2  EF61  F007         	goto	l1078
  1207   000EB6                     u1580:
  1208   000EB6                     
  1209                           ; BSR set to: 0
  1210   000EB6  0E00               	movlw	0
  1211   000EB8  6E36               	movwf	(dtoa@p+1)^0,c
  1212   000EBA  0E01               	movlw	1
  1213   000EBC  6E35               	movwf	dtoa@p^0,c
  1214   000EBE  EF65  F007         	goto	l1080
  1215   000EC2                     l1078:
  1216                           
  1217                           ; BSR set to: 0
  1218   000EC2  C0F2  F035         	movff	_prec,dtoa@p
  1219   000EC6  C0F3  F036         	movff	_prec+1,dtoa@p+1
  1220   000ECA                     l1080:
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1224   000ECA  C0F0  F037         	movff	_width,dtoa@w
  1225   000ECE  C0F1  F038         	movff	_width+1,dtoa@w+1
  1226   000ED2                     
  1227                           ; BSR set to: 0
  1228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1229   000ED2  5041               	movf	dtoa@s^0,w,c
  1230   000ED4  B4D8               	btfsc	status,2,c
  1231   000ED6  EF6F  F007         	goto	u1591
  1232   000EDA  EF71  F007         	goto	u1590
  1233   000EDE                     u1591:
  1234   000EDE  EF88  F007         	goto	l1081
  1235   000EE2                     u1590:
  1236   000EE2                     
  1237                           ; BSR set to: 0
  1238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1239   000EE2  0637               	decf	dtoa@w^0,f,c
  1240   000EE4  A0D8               	btfss	status,0,c
  1241   000EE6  0638               	decf	(dtoa@w+1)^0,f,c
  1242   000EE8                     
  1243                           ; BSR set to: 0
  1244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1245   000EE8  5041               	movf	dtoa@s^0,w,c
  1246   000EEA  A4D8               	btfss	status,2,c
  1247   000EEC  EF7A  F007         	goto	u1601
  1248   000EF0  EF7C  F007         	goto	u1600
  1249   000EF4                     u1601:
  1250   000EF4  EF82  F007         	goto	l2341
  1251   000EF8                     u1600:
  1252   000EF8                     
  1253                           ; BSR set to: 0
  1254   000EF8  0E00               	movlw	0
  1255   000EFA  6E34               	movwf	(_dtoa$1516+1)^0,c
  1256   000EFC  0E2B               	movlw	43
  1257   000EFE  6E33               	movwf	_dtoa$1516^0,c
  1258   000F00  EF86  F007         	goto	l2343
  1259   000F04                     l2341:
  1260                           
  1261                           ; BSR set to: 0
  1262   000F04  0E00               	movlw	0
  1263   000F06  6E34               	movwf	(_dtoa$1516+1)^0,c
  1264   000F08  0E2D               	movlw	45
  1265   000F0A  6E33               	movwf	_dtoa$1516^0,c
  1266   000F0C                     l2343:
  1267                           
  1268                           ; BSR set to: 0
  1269   000F0C  C033  F041         	movff	_dtoa$1516,dtoa@s
  1270   000F10                     l1081:
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1274   000F10  0E00               	movlw	0
  1275   000F12  6E43               	movwf	(dtoa@i+1)^0,c
  1276   000F14  0E1F               	movlw	31
  1277   000F16  6E42               	movwf	dtoa@i^0,c
  1278   000F18                     
  1279                           ; BSR set to: 0
  1280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1281   000F18  0E00               	movlw	0
  1282   000F1A  0101               	movlb	1	; () banked
  1283   000F1C  6FD3               	movwf	(_dbuf+31)& (0+255),b
  1284                           
  1285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1286   000F1E  EF0D  F008         	goto	l2357
  1287   000F22                     l2347:
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1290   000F22  0642               	decf	dtoa@i^0,f,c
  1291   000F24  A0D8               	btfss	status,0,c
  1292   000F26  0643               	decf	(dtoa@i+1)^0,f,c
  1293   000F28                     
  1294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1295   000F28  0EB4               	movlw	low _dbuf
  1296   000F2A  2442               	addwf	dtoa@i^0,w,c
  1297   000F2C  6ED9               	movwf	fsr2l,c
  1298   000F2E  0E01               	movlw	high _dbuf
  1299   000F30  2043               	addwfc	(dtoa@i+1)^0,w,c
  1300   000F32  6EDA               	movwf	fsr2h,c
  1301   000F34  C039  F006         	movff	dtoa@n,___aomod@dividend
  1302   000F38  C03A  F007         	movff	dtoa@n+1,___aomod@dividend+1
  1303   000F3C  C03B  F008         	movff	dtoa@n+2,___aomod@dividend+2
  1304   000F40  C03C  F009         	movff	dtoa@n+3,___aomod@dividend+3
  1305   000F44  C03D  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  1306   000F48  C03E  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  1307   000F4C  C03F  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  1308   000F50  C040  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  1309   000F54  0E0A               	movlw	10
  1310   000F56  6E0E               	movwf	___aomod@divisor^0,c
  1311   000F58  0E00               	movlw	0
  1312   000F5A  6E0F               	movwf	(___aomod@divisor+1)^0,c
  1313   000F5C  0E00               	movlw	0
  1314   000F5E  6E10               	movwf	(___aomod@divisor+2)^0,c
  1315   000F60  0E00               	movlw	0
  1316   000F62  6E11               	movwf	(___aomod@divisor+3)^0,c
  1317   000F64  0E00               	movlw	0
  1318   000F66  6E12               	movwf	(___aomod@divisor+4)^0,c
  1319   000F68  0E00               	movlw	0
  1320   000F6A  6E13               	movwf	(___aomod@divisor+5)^0,c
  1321   000F6C  0E00               	movlw	0
  1322   000F6E  6E14               	movwf	(___aomod@divisor+6)^0,c
  1323   000F70  0E00               	movlw	0
  1324   000F72  6E15               	movwf	(___aomod@divisor+7)^0,c
  1325   000F74  EC1E  F009         	call	___aomod	;wreg free
  1326   000F78  C006  F02B         	movff	?___aomod,??_dtoa
  1327   000F7C  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  1328   000F80  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  1329   000F84  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  1330   000F88  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  1331   000F8C  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  1332   000F90  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  1333   000F94  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  1334   000F98  C02B  F018         	movff	??_dtoa,abs@a
  1335   000F9C  C02C  F019         	movff	??_dtoa+1,abs@a+1
  1336   000FA0  ECE1  F00C         	call	_abs	;wreg free
  1337   000FA4  5018               	movf	?_abs^0,w,c
  1338   000FA6  0F30               	addlw	48
  1339   000FA8  6EDF               	movwf	indf2,c
  1340   000FAA                     
  1341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1342   000FAA  0635               	decf	dtoa@p^0,f,c
  1343   000FAC  A0D8               	btfss	status,0,c
  1344   000FAE  0636               	decf	(dtoa@p+1)^0,f,c
  1345   000FB0                     
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1347   000FB0  0637               	decf	dtoa@w^0,f,c
  1348   000FB2  A0D8               	btfss	status,0,c
  1349   000FB4  0638               	decf	(dtoa@w+1)^0,f,c
  1350   000FB6                     
  1351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1352   000FB6  C039  F006         	movff	dtoa@n,___aodiv@dividend
  1353   000FBA  C03A  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  1354   000FBE  C03B  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  1355   000FC2  C03C  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  1356   000FC6  C03D  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  1357   000FCA  C03E  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  1358   000FCE  C03F  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  1359   000FD2  C040  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  1360   000FD6  0E0A               	movlw	10
  1361   000FD8  6E0E               	movwf	___aodiv@divisor^0,c
  1362   000FDA  0E00               	movlw	0
  1363   000FDC  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  1364   000FDE  0E00               	movlw	0
  1365   000FE0  6E10               	movwf	(___aodiv@divisor+2)^0,c
  1366   000FE2  0E00               	movlw	0
  1367   000FE4  6E11               	movwf	(___aodiv@divisor+3)^0,c
  1368   000FE6  0E00               	movlw	0
  1369   000FE8  6E12               	movwf	(___aodiv@divisor+4)^0,c
  1370   000FEA  0E00               	movlw	0
  1371   000FEC  6E13               	movwf	(___aodiv@divisor+5)^0,c
  1372   000FEE  0E00               	movlw	0
  1373   000FF0  6E14               	movwf	(___aodiv@divisor+6)^0,c
  1374   000FF2  0E00               	movlw	0
  1375   000FF4  6E15               	movwf	(___aodiv@divisor+7)^0,c
  1376   000FF6  EC5A  F008         	call	___aodiv	;wreg free
  1377   000FFA  C006  F039         	movff	?___aodiv,dtoa@n
  1378   000FFE  C007  F03A         	movff	?___aodiv+1,dtoa@n+1
  1379   001002  C008  F03B         	movff	?___aodiv+2,dtoa@n+2
  1380   001006  C009  F03C         	movff	?___aodiv+3,dtoa@n+3
  1381   00100A  C00A  F03D         	movff	?___aodiv+4,dtoa@n+4
  1382   00100E  C00B  F03E         	movff	?___aodiv+5,dtoa@n+5
  1383   001012  C00C  F03F         	movff	?___aodiv+6,dtoa@n+6
  1384   001016  C00D  F040         	movff	?___aodiv+7,dtoa@n+7
  1385   00101A                     l2357:
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1388   00101A  BE43               	btfsc	(dtoa@i+1)^0,7,c
  1389   00101C  EF18  F008         	goto	u1611
  1390   001020  5043               	movf	(dtoa@i+1)^0,w,c
  1391   001022  E108               	bnz	u1610
  1392   001024  0442               	decf	dtoa@i^0,w,c
  1393   001026  A0D8               	btfss	status,0,c
  1394   001028  EF18  F008         	goto	u1611
  1395   00102C  EF1A  F008         	goto	u1610
  1396   001030                     u1611:
  1397   001030  EF36  F008         	goto	l2363
  1398   001034                     u1610:
  1399   001034  5039               	movf	dtoa@n^0,w,c
  1400   001036  103A               	iorwf	(dtoa@n+1)^0,w,c
  1401   001038  103B               	iorwf	(dtoa@n+2)^0,w,c
  1402   00103A  103C               	iorwf	(dtoa@n+3)^0,w,c
  1403   00103C  103D               	iorwf	(dtoa@n+4)^0,w,c
  1404   00103E  103E               	iorwf	(dtoa@n+5)^0,w,c
  1405   001040  103F               	iorwf	(dtoa@n+6)^0,w,c
  1406   001042  1040               	iorwf	(dtoa@n+7)^0,w,c
  1407   001044  A4D8               	btfss	status,2,c
  1408   001046  EF27  F008         	goto	u1621
  1409   00104A  EF29  F008         	goto	u1620
  1410   00104E                     u1621:
  1411   00104E  EF91  F007         	goto	l2347
  1412   001052                     u1620:
  1413   001052  BE36               	btfsc	(dtoa@p+1)^0,7,c
  1414   001054  EF36  F008         	goto	u1630
  1415   001058  5036               	movf	(dtoa@p+1)^0,w,c
  1416   00105A  E106               	bnz	u1631
  1417   00105C  0435               	decf	dtoa@p^0,w,c
  1418   00105E  B0D8               	btfsc	status,0,c
  1419   001060  EF34  F008         	goto	u1631
  1420   001064  EF36  F008         	goto	u1630
  1421   001068                     u1631:
  1422   001068  EF91  F007         	goto	l2347
  1423   00106C                     u1630:
  1424   00106C                     l2363:
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1427   00106C  5041               	movf	dtoa@s^0,w,c
  1428   00106E  B4D8               	btfsc	status,2,c
  1429   001070  EF3C  F008         	goto	u1641
  1430   001074  EF3E  F008         	goto	u1640
  1431   001078                     u1641:
  1432   001078  EF49  F008         	goto	l2369
  1433   00107C                     u1640:
  1434   00107C                     
  1435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1436   00107C  0642               	decf	dtoa@i^0,f,c
  1437   00107E  A0D8               	btfss	status,0,c
  1438   001080  0643               	decf	(dtoa@i+1)^0,f,c
  1439   001082                     
  1440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1441   001082  0EB4               	movlw	low _dbuf
  1442   001084  2442               	addwf	dtoa@i^0,w,c
  1443   001086  6ED9               	movwf	fsr2l,c
  1444   001088  0E01               	movlw	high _dbuf
  1445   00108A  2043               	addwfc	(dtoa@i+1)^0,w,c
  1446   00108C  6EDA               	movwf	fsr2h,c
  1447   00108E  C041  FFDF         	movff	dtoa@s,indf2
  1448   001092                     l2369:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1451   001092  C021  F016         	movff	dtoa@fp,pad@fp
  1452   001096  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  1453   00109A  0EB4               	movlw	low _dbuf
  1454   00109C  2442               	addwf	dtoa@i^0,w,c
  1455   00109E  6E18               	movwf	pad@buf^0,c
  1456   0010A0  0E01               	movlw	high _dbuf
  1457   0010A2  2043               	addwfc	(dtoa@i+1)^0,w,c
  1458   0010A4  6E19               	movwf	(pad@buf+1)^0,c
  1459   0010A6  C037  F01A         	movff	dtoa@w,pad@p
  1460   0010AA  C038  F01B         	movff	dtoa@w+1,pad@p+1
  1461   0010AE  ECDC  F00A         	call	_pad	;wreg free
  1462   0010B2  0012               	return		;funcret
  1463   0010B4                     __end_of_dtoa:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _pad *****************
  1467 ;; Defined at:
  1468 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  1471 ;;		 -> sprintf@f(11), 
  1472 ;;  buf             2   23[COMRAM] PTR unsigned char 
  1473 ;;		 -> dbuf(32), 
  1474 ;;  p               2   25[COMRAM] int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  w               2   30[COMRAM] int 
  1477 ;;  i               2   28[COMRAM] int 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1487 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1489 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1490 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1491 ;;Total ram usage:       11 bytes
  1492 ;; Hardware stack levels used: 1
  1493 ;; Hardware stack levels required when called: 5
  1494 ;; This function calls:
  1495 ;;		_fputc
  1496 ;;		_fputs
  1497 ;; This function is called by:
  1498 ;;		_dtoa
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text5
  1503   0015B8                     __ptext5:
  1504                           	callstack 0
  1505   0015B8                     _pad:
  1506                           	callstack 21
  1507   0015B8                     
  1508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1509   0015B8  BE1B               	btfsc	(pad@p+1)^0,7,c
  1510   0015BA  EFE1  F00A         	goto	u1521
  1511   0015BE  EFE3  F00A         	goto	u1520
  1512   0015C2                     u1521:
  1513   0015C2  EFE9  F00A         	goto	l2307
  1514   0015C6                     u1520:
  1515   0015C6  C01A  F01F         	movff	pad@p,pad@w
  1516   0015CA  C01B  F020         	movff	pad@p+1,pad@w+1
  1517   0015CE  EFED  F00A         	goto	l1069
  1518   0015D2                     l2307:
  1519   0015D2  0E00               	movlw	0
  1520   0015D4  6E20               	movwf	(pad@w+1)^0,c
  1521   0015D6  0E00               	movlw	0
  1522   0015D8  6E1F               	movwf	pad@w^0,c
  1523   0015DA                     l1069:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1526   0015DA  0E00               	movlw	0
  1527   0015DC  6E1E               	movwf	(pad@i+1)^0,c
  1528   0015DE  0E00               	movlw	0
  1529   0015E0  6E1D               	movwf	pad@i^0,c
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1532   0015E2  EFFF  F00A         	goto	l2313
  1533   0015E6                     l2309:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1536   0015E6  0E00               	movlw	0
  1537   0015E8  6E07               	movwf	(fputc@c+1)^0,c
  1538   0015EA  0E20               	movlw	32
  1539   0015EC  6E06               	movwf	fputc@c^0,c
  1540   0015EE  C016  F008         	movff	pad@fp,fputc@fp
  1541   0015F2  C017  F009         	movff	pad@fp+1,fputc@fp+1
  1542   0015F6  EC77  F00A         	call	_fputc	;wreg free
  1543   0015FA                     
  1544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1545   0015FA  4A1D               	infsnz	pad@i^0,f,c
  1546   0015FC  2A1E               	incf	(pad@i+1)^0,f,c
  1547   0015FE                     l2313:
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1550   0015FE  501F               	movf	pad@w^0,w,c
  1551   001600  5C1D               	subwf	pad@i^0,w,c
  1552   001602  501E               	movf	(pad@i+1)^0,w,c
  1553   001604  0A80               	xorlw	128
  1554   001606  6E1C               	movwf	??_pad^0,c
  1555   001608  5020               	movf	(pad@w+1)^0,w,c
  1556   00160A  0A80               	xorlw	128
  1557   00160C  581C               	subwfb	??_pad^0,w,c
  1558   00160E  A0D8               	btfss	status,0,c
  1559   001610  EF0C  F00B         	goto	u1531
  1560   001614  EF0E  F00B         	goto	u1530
  1561   001618                     u1531:
  1562   001618  EFF3  F00A         	goto	l2309
  1563   00161C                     u1530:
  1564   00161C                     
  1565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1566   00161C  C018  F00F         	movff	pad@buf,fputs@s
  1567   001620  C019  F010         	movff	pad@buf+1,fputs@s+1
  1568   001624  C016  F011         	movff	pad@fp,fputs@fp
  1569   001628  C017  F012         	movff	pad@fp+1,fputs@fp+1
  1570   00162C  EC9E  F00C         	call	_fputs	;wreg free
  1571   001630  0012               	return		;funcret
  1572   001632                     __end_of_pad:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _fputs *****************
  1576 ;; Defined at:
  1577 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  s               2   14[COMRAM] PTR const unsigned char 
  1580 ;;		 -> dbuf(32), 
  1581 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1582 ;;		 -> sprintf@f(11), 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  i               2   19[COMRAM] int 
  1585 ;;  c               1   18[COMRAM] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  2   14[COMRAM] int 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1595 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;Total ram usage:        7 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 4
  1602 ;; This function calls:
  1603 ;;		_fputc
  1604 ;; This function is called by:
  1605 ;;		_pad
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text6
  1610   00193C                     __ptext6:
  1611                           	callstack 0
  1612   00193C                     _fputs:
  1613                           	callstack 21
  1614   00193C  0E00               	movlw	0
  1615   00193E  6E15               	movwf	(fputs@i+1)^0,c
  1616   001940  0E00               	movlw	0
  1617   001942  6E14               	movwf	fputs@i^0,c
  1618   001944  EFAF  F00C         	goto	l2221
  1619   001948                     l2217:
  1620   001948  C013  F006         	movff	fputs@c,fputc@c
  1621   00194C  6A07               	clrf	(fputc@c+1)^0,c
  1622   00194E  C011  F008         	movff	fputs@fp,fputc@fp
  1623   001952  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  1624   001956  EC77  F00A         	call	_fputc	;wreg free
  1625   00195A  4A14               	infsnz	fputs@i^0,f,c
  1626   00195C  2A15               	incf	(fputs@i+1)^0,f,c
  1627   00195E                     l2221:
  1628   00195E  5014               	movf	fputs@i^0,w,c
  1629   001960  240F               	addwf	fputs@s^0,w,c
  1630   001962  6ED9               	movwf	fsr2l,c
  1631   001964  5015               	movf	(fputs@i+1)^0,w,c
  1632   001966  2010               	addwfc	(fputs@s+1)^0,w,c
  1633   001968  6EDA               	movwf	fsr2h,c
  1634   00196A  50DF               	movf	indf2,w,c
  1635   00196C  6E13               	movwf	fputs@c^0,c
  1636   00196E  5013               	movf	fputs@c^0,w,c
  1637   001970  A4D8               	btfss	status,2,c
  1638   001972  EFBD  F00C         	goto	u1381
  1639   001976  EFBF  F00C         	goto	u1380
  1640   00197A                     u1381:
  1641   00197A  EFA4  F00C         	goto	l2217
  1642   00197E                     u1380:
  1643   00197E  0012               	return		;funcret
  1644   001980                     __end_of_fputs:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _fputc *****************
  1648 ;; Defined at:
  1649 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  c               2    5[COMRAM] int 
  1652 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  1653 ;;		 -> sprintf@f(11), 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  2    5[COMRAM] int 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1667 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1668 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1669 ;;Total ram usage:        9 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 3
  1672 ;; This function calls:
  1673 ;;		_putch
  1674 ;; This function is called by:
  1675 ;;		_pad
  1676 ;;		_vfpfcnvrt
  1677 ;;		_fputs
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text7
  1682   0014EE                     __ptext7:
  1683                           	callstack 0
  1684   0014EE                     _fputc:
  1685                           	callstack 24
  1686   0014EE  5008               	movf	fputc@fp^0,w,c
  1687   0014F0  1009               	iorwf	(fputc@fp+1)^0,w,c
  1688   0014F2  B4D8               	btfsc	status,2,c
  1689   0014F4  EF7E  F00A         	goto	u1341
  1690   0014F8  EF80  F00A         	goto	u1340
  1691   0014FC                     u1341:
  1692   0014FC  EF89  F00A         	goto	l2205
  1693   001500                     u1340:
  1694   001500  5008               	movf	fputc@fp^0,w,c
  1695   001502  1009               	iorwf	(fputc@fp+1)^0,w,c
  1696   001504  A4D8               	btfss	status,2,c
  1697   001506  EF87  F00A         	goto	u1351
  1698   00150A  EF89  F00A         	goto	u1350
  1699   00150E                     u1351:
  1700   00150E  EF8E  F00A         	goto	l2207
  1701   001512                     u1350:
  1702   001512                     l2205:
  1703   001512  5006               	movf	fputc@c^0,w,c
  1704   001514  EC06  F00E         	call	_putch
  1705   001518  EFDB  F00A         	goto	l1124
  1706   00151C                     l2207:
  1707   00151C  EE20 F009          	lfsr	2,9
  1708   001520  5008               	movf	fputc@fp^0,w,c
  1709   001522  26D9               	addwf	fsr2l,f,c
  1710   001524  5009               	movf	(fputc@fp+1)^0,w,c
  1711   001526  22DA               	addwfc	fsr2h,f,c
  1712   001528  50DE               	movf	postinc2,w,c
  1713   00152A  10DE               	iorwf	postinc2,w,c
  1714   00152C  B4D8               	btfsc	status,2,c
  1715   00152E  EF9B  F00A         	goto	u1361
  1716   001532  EF9D  F00A         	goto	u1360
  1717   001536                     u1361:
  1718   001536  EFB8  F00A         	goto	l2211
  1719   00153A                     u1360:
  1720   00153A  EE20 F009          	lfsr	2,9
  1721   00153E  5008               	movf	fputc@fp^0,w,c
  1722   001540  26D9               	addwf	fsr2l,f,c
  1723   001542  5009               	movf	(fputc@fp+1)^0,w,c
  1724   001544  22DA               	addwfc	fsr2h,f,c
  1725   001546  EE10 F003          	lfsr	1,3
  1726   00154A  5008               	movf	fputc@fp^0,w,c
  1727   00154C  26E1               	addwf	fsr1l,f,c
  1728   00154E  5009               	movf	(fputc@fp+1)^0,w,c
  1729   001550  22E2               	addwfc	fsr1h,f,c
  1730   001552  50DE               	movf	postinc2,w,c
  1731   001554  5CE6               	subwf	postinc1,w,c
  1732   001556  50E6               	movf	postinc1,w,c
  1733   001558  0A80               	xorlw	128
  1734   00155A  6E0E               	movwf	(??_fputc+4)^0,c
  1735   00155C  50DE               	movf	postinc2,w,c
  1736   00155E  0A80               	xorlw	128
  1737   001560  580E               	subwfb	(??_fputc+4)^0,w,c
  1738   001562  B0D8               	btfsc	status,0,c
  1739   001564  EFB6  F00A         	goto	u1371
  1740   001568  EFB8  F00A         	goto	u1370
  1741   00156C                     u1371:
  1742   00156C  EFDB  F00A         	goto	l1124
  1743   001570                     u1370:
  1744   001570                     l2211:
  1745   001570  EE20 F003          	lfsr	2,3
  1746   001574  5008               	movf	fputc@fp^0,w,c
  1747   001576  26D9               	addwf	fsr2l,f,c
  1748   001578  5009               	movf	(fputc@fp+1)^0,w,c
  1749   00157A  22DA               	addwfc	fsr2h,f,c
  1750   00157C  CFDE F00A          	movff	postinc2,??_fputc
  1751   001580  CFDD F00B          	movff	postdec2,??_fputc+1
  1752   001584  C008  FFD9         	movff	fputc@fp,fsr2l
  1753   001588  C009  FFDA         	movff	fputc@fp+1,fsr2h
  1754   00158C  CFDE F00C          	movff	postinc2,??_fputc+2
  1755   001590  CFDD F00D          	movff	postdec2,??_fputc+3
  1756   001594  500A               	movf	??_fputc^0,w,c
  1757   001596  240C               	addwf	(??_fputc+2)^0,w,c
  1758   001598  6ED9               	movwf	fsr2l,c
  1759   00159A  500B               	movf	(??_fputc+1)^0,w,c
  1760   00159C  200D               	addwfc	(??_fputc+3)^0,w,c
  1761   00159E  6EDA               	movwf	fsr2h,c
  1762   0015A0  C006  FFDF         	movff	fputc@c,indf2
  1763   0015A4  EE20 F003          	lfsr	2,3
  1764   0015A8  5008               	movf	fputc@fp^0,w,c
  1765   0015AA  26D9               	addwf	fsr2l,f,c
  1766   0015AC  5009               	movf	(fputc@fp+1)^0,w,c
  1767   0015AE  22DA               	addwfc	fsr2h,f,c
  1768   0015B0  2ADE               	incf	postinc2,f,c
  1769   0015B2  0E00               	movlw	0
  1770   0015B4  22DD               	addwfc	postdec2,f,c
  1771   0015B6                     l1124:
  1772   0015B6  0012               	return		;funcret
  1773   0015B8                     __end_of_fputc:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function _putch *****************
  1777 ;; Defined at:
  1778 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  c               1    wreg     unsigned char 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  c               1    0[COMRAM] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 2
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_fputc
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text8
  1807   001C0C                     __ptext8:
  1808                           	callstack 0
  1809   001C0C                     _putch:
  1810                           	callstack 24
  1811   001C0C  0012               	return		;funcret
  1812   001C0E                     __end_of_putch:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _abs *****************
  1816 ;; Defined at:
  1817 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  a               2   23[COMRAM] int 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  2   23[COMRAM] int 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;Total ram usage:        4 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 2
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_dtoa
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text9
  1846   0019C2                     __ptext9:
  1847                           	callstack 0
  1848   0019C2                     _abs:
  1849                           	callstack 24
  1850   0019C2  BE19               	btfsc	(abs@a+1)^0,7,c
  1851   0019C4  EFEE  F00C         	goto	u1540
  1852   0019C8  5019               	movf	(abs@a+1)^0,w,c
  1853   0019CA  E106               	bnz	u1541
  1854   0019CC  0418               	decf	abs@a^0,w,c
  1855   0019CE  B0D8               	btfsc	status,0,c
  1856   0019D0  EFEC  F00C         	goto	u1541
  1857   0019D4  EFEE  F00C         	goto	u1540
  1858   0019D8                     u1541:
  1859   0019D8  EFFC  F00C         	goto	l1109
  1860   0019DC                     u1540:
  1861   0019DC  C018  F01A         	movff	abs@a,??_abs
  1862   0019E0  C019  F01B         	movff	abs@a+1,??_abs+1
  1863   0019E4  1E1A               	comf	??_abs^0,f,c
  1864   0019E6  1E1B               	comf	(??_abs+1)^0,f,c
  1865   0019E8  4A1A               	infsnz	??_abs^0,f,c
  1866   0019EA  2A1B               	incf	(??_abs+1)^0,f,c
  1867   0019EC  C01A  F018         	movff	??_abs,?_abs
  1868   0019F0  C01B  F019         	movff	??_abs+1,?_abs+1
  1869   0019F4  EF00  F00D         	goto	l1112
  1870   0019F8                     l1109:
  1871   0019F8  C018  F018         	movff	abs@a,?_abs
  1872   0019FC  C019  F019         	movff	abs@a+1,?_abs+1
  1873   001A00                     l1112:
  1874   001A00  0012               	return		;funcret
  1875   001A02                     __end_of_abs:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function ___aomod *****************
  1879 ;; Defined at:
  1880 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  dividend        8    5[COMRAM] long long 
  1883 ;;  divisor         8   13[COMRAM] long long 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  sign            1   22[COMRAM] unsigned char 
  1886 ;;  counter         1   21[COMRAM] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  8    5[COMRAM] long long 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1896 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1897 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1899 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1900 ;;Total ram usage:       18 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 2
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_dtoa
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text10
  1911   00123C                     __ptext10:
  1912                           	callstack 0
  1913   00123C                     ___aomod:
  1914                           	callstack 24
  1915   00123C  0E00               	movlw	0
  1916   00123E  6E17               	movwf	___aomod@sign^0,c
  1917   001240  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  1918   001242  EF27  F009         	goto	u1460
  1919   001246  EF25  F009         	goto	u1461
  1920   00124A                     u1461:
  1921   00124A  EF39  F009         	goto	l2275
  1922   00124E                     u1460:
  1923   00124E  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  1924   001250  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  1925   001252  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  1926   001254  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  1927   001256  1E09               	comf	(___aomod@dividend+3)^0,f,c
  1928   001258  1E08               	comf	(___aomod@dividend+2)^0,f,c
  1929   00125A  1E07               	comf	(___aomod@dividend+1)^0,f,c
  1930   00125C  6C06               	negf	___aomod@dividend^0,c
  1931   00125E  0E00               	movlw	0
  1932   001260  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  1933   001262  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  1934   001264  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  1935   001266  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  1936   001268  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  1937   00126A  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  1938   00126C  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  1939   00126E  0E01               	movlw	1
  1940   001270  6E17               	movwf	___aomod@sign^0,c
  1941   001272                     l2275:
  1942   001272  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  1943   001274  EF40  F009         	goto	u1470
  1944   001278  EF3E  F009         	goto	u1471
  1945   00127C                     u1471:
  1946   00127C  EF50  F009         	goto	l2279
  1947   001280                     u1470:
  1948   001280  1E15               	comf	(___aomod@divisor+7)^0,f,c
  1949   001282  1E14               	comf	(___aomod@divisor+6)^0,f,c
  1950   001284  1E13               	comf	(___aomod@divisor+5)^0,f,c
  1951   001286  1E12               	comf	(___aomod@divisor+4)^0,f,c
  1952   001288  1E11               	comf	(___aomod@divisor+3)^0,f,c
  1953   00128A  1E10               	comf	(___aomod@divisor+2)^0,f,c
  1954   00128C  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  1955   00128E  6C0E               	negf	___aomod@divisor^0,c
  1956   001290  0E00               	movlw	0
  1957   001292  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  1958   001294  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  1959   001296  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  1960   001298  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  1961   00129A  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  1962   00129C  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  1963   00129E  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  1964   0012A0                     l2279:
  1965   0012A0  500E               	movf	___aomod@divisor^0,w,c
  1966   0012A2  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  1967   0012A4  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  1968   0012A6  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  1969   0012A8  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  1970   0012AA  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  1971   0012AC  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  1972   0012AE  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  1973   0012B0  B4D8               	btfsc	status,2,c
  1974   0012B2  EF5D  F009         	goto	u1481
  1975   0012B6  EF5F  F009         	goto	u1480
  1976   0012BA                     u1481:
  1977   0012BA  EFA7  F009         	goto	l2295
  1978   0012BE                     u1480:
  1979   0012BE  0E01               	movlw	1
  1980   0012C0  6E16               	movwf	___aomod@counter^0,c
  1981   0012C2  EF6D  F009         	goto	l2285
  1982   0012C6                     l2283:
  1983   0012C6  90D8               	bcf	status,0,c
  1984   0012C8  360E               	rlcf	___aomod@divisor^0,f,c
  1985   0012CA  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  1986   0012CC  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  1987   0012CE  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  1988   0012D0  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  1989   0012D2  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  1990   0012D4  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  1991   0012D6  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  1992   0012D8  2A16               	incf	___aomod@counter^0,f,c
  1993   0012DA                     l2285:
  1994   0012DA  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  1995   0012DC  EF72  F009         	goto	u1491
  1996   0012E0  EF74  F009         	goto	u1490
  1997   0012E4                     u1491:
  1998   0012E4  EF63  F009         	goto	l2283
  1999   0012E8                     u1490:
  2000   0012E8                     l2287:
  2001   0012E8  500E               	movf	___aomod@divisor^0,w,c
  2002   0012EA  5C06               	subwf	___aomod@dividend^0,w,c
  2003   0012EC  500F               	movf	(___aomod@divisor+1)^0,w,c
  2004   0012EE  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  2005   0012F0  5010               	movf	(___aomod@divisor+2)^0,w,c
  2006   0012F2  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  2007   0012F4  5011               	movf	(___aomod@divisor+3)^0,w,c
  2008   0012F6  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  2009   0012F8  5012               	movf	(___aomod@divisor+4)^0,w,c
  2010   0012FA  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  2011   0012FC  5013               	movf	(___aomod@divisor+5)^0,w,c
  2012   0012FE  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  2013   001300  5014               	movf	(___aomod@divisor+6)^0,w,c
  2014   001302  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  2015   001304  5015               	movf	(___aomod@divisor+7)^0,w,c
  2016   001306  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  2017   001308  A0D8               	btfss	status,0,c
  2018   00130A  EF89  F009         	goto	u1501
  2019   00130E  EF8B  F009         	goto	u1500
  2020   001312                     u1501:
  2021   001312  EF9B  F009         	goto	l2291
  2022   001316                     u1500:
  2023   001316  500E               	movf	___aomod@divisor^0,w,c
  2024   001318  5E06               	subwf	___aomod@dividend^0,f,c
  2025   00131A  500F               	movf	(___aomod@divisor+1)^0,w,c
  2026   00131C  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  2027   00131E  5010               	movf	(___aomod@divisor+2)^0,w,c
  2028   001320  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  2029   001322  5011               	movf	(___aomod@divisor+3)^0,w,c
  2030   001324  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  2031   001326  5012               	movf	(___aomod@divisor+4)^0,w,c
  2032   001328  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  2033   00132A  5013               	movf	(___aomod@divisor+5)^0,w,c
  2034   00132C  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  2035   00132E  5014               	movf	(___aomod@divisor+6)^0,w,c
  2036   001330  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  2037   001332  5015               	movf	(___aomod@divisor+7)^0,w,c
  2038   001334  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  2039   001336                     l2291:
  2040   001336  90D8               	bcf	status,0,c
  2041   001338  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  2042   00133A  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  2043   00133C  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  2044   00133E  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  2045   001340  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  2046   001342  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  2047   001344  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  2048   001346  320E               	rrcf	___aomod@divisor^0,f,c
  2049   001348  2E16               	decfsz	___aomod@counter^0,f,c
  2050   00134A  EF74  F009         	goto	l2287
  2051   00134E                     l2295:
  2052   00134E  5017               	movf	___aomod@sign^0,w,c
  2053   001350  B4D8               	btfsc	status,2,c
  2054   001352  EFAD  F009         	goto	u1511
  2055   001356  EFAF  F009         	goto	u1510
  2056   00135A                     u1511:
  2057   00135A  EFBF  F009         	goto	l2299
  2058   00135E                     u1510:
  2059   00135E  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  2060   001360  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  2061   001362  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  2062   001364  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  2063   001366  1E09               	comf	(___aomod@dividend+3)^0,f,c
  2064   001368  1E08               	comf	(___aomod@dividend+2)^0,f,c
  2065   00136A  1E07               	comf	(___aomod@dividend+1)^0,f,c
  2066   00136C  6C06               	negf	___aomod@dividend^0,c
  2067   00136E  0E00               	movlw	0
  2068   001370  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  2069   001372  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  2070   001374  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  2071   001376  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  2072   001378  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  2073   00137A  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  2074   00137C  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  2075   00137E                     l2299:
  2076   00137E  C006  F006         	movff	___aomod@dividend,?___aomod
  2077   001382  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  2078   001386  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  2079   00138A  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  2080   00138E  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  2081   001392  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  2082   001396  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  2083   00139A  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  2084   00139E  0012               	return		;funcret
  2085   0013A0                     __end_of___aomod:
  2086                           	callstack 0
  2087                           
  2088 ;; *************** function ___aodiv *****************
  2089 ;; Defined at:
  2090 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  dividend        8    5[COMRAM] long long 
  2093 ;;  divisor         8   13[COMRAM] long long 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  quotient        8   23[COMRAM] long long 
  2096 ;;  sign            1   22[COMRAM] unsigned char 
  2097 ;;  counter         1   21[COMRAM] unsigned char 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  8    5[COMRAM] long long 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2107 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2108 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2110 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2111 ;;Total ram usage:       26 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 2
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_dtoa
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text11
  2122   0010B4                     __ptext11:
  2123                           	callstack 0
  2124   0010B4                     ___aodiv:
  2125                           	callstack 24
  2126   0010B4  0E00               	movlw	0
  2127   0010B6  6E17               	movwf	___aodiv@sign^0,c
  2128   0010B8  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  2129   0010BA  EF63  F008         	goto	u1390
  2130   0010BE  EF61  F008         	goto	u1391
  2131   0010C2                     u1391:
  2132   0010C2  EF75  F008         	goto	l2231
  2133   0010C6                     u1390:
  2134   0010C6  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  2135   0010C8  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  2136   0010CA  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  2137   0010CC  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  2138   0010CE  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  2139   0010D0  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  2140   0010D2  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  2141   0010D4  6C0E               	negf	___aodiv@divisor^0,c
  2142   0010D6  0E00               	movlw	0
  2143   0010D8  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  2144   0010DA  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  2145   0010DC  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  2146   0010DE  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  2147   0010E0  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  2148   0010E2  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  2149   0010E4  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  2150   0010E6  0E01               	movlw	1
  2151   0010E8  6E17               	movwf	___aodiv@sign^0,c
  2152   0010EA                     l2231:
  2153   0010EA  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  2154   0010EC  EF7C  F008         	goto	u1400
  2155   0010F0  EF7A  F008         	goto	u1401
  2156   0010F4                     u1401:
  2157   0010F4  EF8E  F008         	goto	l2237
  2158   0010F8                     u1400:
  2159   0010F8  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  2160   0010FA  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  2161   0010FC  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  2162   0010FE  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  2163   001100  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  2164   001102  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  2165   001104  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  2166   001106  6C06               	negf	___aodiv@dividend^0,c
  2167   001108  0E00               	movlw	0
  2168   00110A  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  2169   00110C  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  2170   00110E  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  2171   001110  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  2172   001112  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  2173   001114  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  2174   001116  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  2175   001118  0E01               	movlw	1
  2176   00111A  1A17               	xorwf	___aodiv@sign^0,f,c
  2177   00111C                     l2237:
  2178   00111C  EE20  F018         	lfsr	2,___aodiv@quotient
  2179   001120  0E07               	movlw	7
  2180   001122                     u1411:
  2181   001122  6ADE               	clrf	postinc2,c
  2182   001124  06E8               	decf	wreg,f,c
  2183   001126  E2FD               	bc	u1411
  2184   001128  500E               	movf	___aodiv@divisor^0,w,c
  2185   00112A  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  2186   00112C  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  2187   00112E  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  2188   001130  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  2189   001132  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  2190   001134  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  2191   001136  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  2192   001138  B4D8               	btfsc	status,2,c
  2193   00113A  EFA1  F008         	goto	u1421
  2194   00113E  EFA3  F008         	goto	u1420
  2195   001142                     u1421:
  2196   001142  EFF5  F008         	goto	l2259
  2197   001146                     u1420:
  2198   001146  0E01               	movlw	1
  2199   001148  6E16               	movwf	___aodiv@counter^0,c
  2200   00114A  EFB1  F008         	goto	l2245
  2201   00114E                     l2243:
  2202   00114E  90D8               	bcf	status,0,c
  2203   001150  360E               	rlcf	___aodiv@divisor^0,f,c
  2204   001152  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  2205   001154  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  2206   001156  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  2207   001158  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  2208   00115A  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  2209   00115C  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  2210   00115E  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  2211   001160  2A16               	incf	___aodiv@counter^0,f,c
  2212   001162                     l2245:
  2213   001162  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  2214   001164  EFB6  F008         	goto	u1431
  2215   001168  EFB8  F008         	goto	u1430
  2216   00116C                     u1431:
  2217   00116C  EFA7  F008         	goto	l2243
  2218   001170                     u1430:
  2219   001170                     l2247:
  2220   001170  90D8               	bcf	status,0,c
  2221   001172  3618               	rlcf	___aodiv@quotient^0,f,c
  2222   001174  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  2223   001176  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  2224   001178  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  2225   00117A  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  2226   00117C  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  2227   00117E  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  2228   001180  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  2229   001182  500E               	movf	___aodiv@divisor^0,w,c
  2230   001184  5C06               	subwf	___aodiv@dividend^0,w,c
  2231   001186  500F               	movf	(___aodiv@divisor+1)^0,w,c
  2232   001188  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  2233   00118A  5010               	movf	(___aodiv@divisor+2)^0,w,c
  2234   00118C  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  2235   00118E  5011               	movf	(___aodiv@divisor+3)^0,w,c
  2236   001190  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  2237   001192  5012               	movf	(___aodiv@divisor+4)^0,w,c
  2238   001194  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  2239   001196  5013               	movf	(___aodiv@divisor+5)^0,w,c
  2240   001198  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  2241   00119A  5014               	movf	(___aodiv@divisor+6)^0,w,c
  2242   00119C  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  2243   00119E  5015               	movf	(___aodiv@divisor+7)^0,w,c
  2244   0011A0  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  2245   0011A2  A0D8               	btfss	status,0,c
  2246   0011A4  EFD6  F008         	goto	u1441
  2247   0011A8  EFD8  F008         	goto	u1440
  2248   0011AC                     u1441:
  2249   0011AC  EFE9  F008         	goto	l2255
  2250   0011B0                     u1440:
  2251   0011B0  500E               	movf	___aodiv@divisor^0,w,c
  2252   0011B2  5E06               	subwf	___aodiv@dividend^0,f,c
  2253   0011B4  500F               	movf	(___aodiv@divisor+1)^0,w,c
  2254   0011B6  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  2255   0011B8  5010               	movf	(___aodiv@divisor+2)^0,w,c
  2256   0011BA  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  2257   0011BC  5011               	movf	(___aodiv@divisor+3)^0,w,c
  2258   0011BE  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  2259   0011C0  5012               	movf	(___aodiv@divisor+4)^0,w,c
  2260   0011C2  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  2261   0011C4  5013               	movf	(___aodiv@divisor+5)^0,w,c
  2262   0011C6  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  2263   0011C8  5014               	movf	(___aodiv@divisor+6)^0,w,c
  2264   0011CA  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  2265   0011CC  5015               	movf	(___aodiv@divisor+7)^0,w,c
  2266   0011CE  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  2267   0011D0  8018               	bsf	___aodiv@quotient^0,0,c
  2268   0011D2                     l2255:
  2269   0011D2  90D8               	bcf	status,0,c
  2270   0011D4  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  2271   0011D6  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  2272   0011D8  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  2273   0011DA  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  2274   0011DC  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  2275   0011DE  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  2276   0011E0  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  2277   0011E2  320E               	rrcf	___aodiv@divisor^0,f,c
  2278   0011E4  2E16               	decfsz	___aodiv@counter^0,f,c
  2279   0011E6  EFB8  F008         	goto	l2247
  2280   0011EA                     l2259:
  2281   0011EA  5017               	movf	___aodiv@sign^0,w,c
  2282   0011EC  B4D8               	btfsc	status,2,c
  2283   0011EE  EFFB  F008         	goto	u1451
  2284   0011F2  EFFD  F008         	goto	u1450
  2285   0011F6                     u1451:
  2286   0011F6  EF0D  F009         	goto	l2263
  2287   0011FA                     u1450:
  2288   0011FA  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  2289   0011FC  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  2290   0011FE  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  2291   001200  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  2292   001202  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  2293   001204  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  2294   001206  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  2295   001208  6C18               	negf	___aodiv@quotient^0,c
  2296   00120A  0E00               	movlw	0
  2297   00120C  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  2298   00120E  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  2299   001210  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  2300   001212  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  2301   001214  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  2302   001216  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  2303   001218  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  2304   00121A                     l2263:
  2305   00121A  C018  F006         	movff	___aodiv@quotient,?___aodiv
  2306   00121E  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  2307   001222  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  2308   001226  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  2309   00122A  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  2310   00122E  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  2311   001232  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  2312   001236  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  2313   00123A  0012               	return		;funcret
  2314   00123C                     __end_of___aodiv:
  2315                           	callstack 0
  2316                           
  2317 ;; *************** function _levels *****************
  2318 ;; Defined at:
  2319 ;;		line 61 in file "card.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  i               2   16[COMRAM] int 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2337 ;;Total ram usage:        4 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 5
  2340 ;; This function calls:
  2341 ;;		_Light
  2342 ;;		_color_read_Blue
  2343 ;;		_color_read_Clear
  2344 ;;		_color_read_Green
  2345 ;;		_color_read_Red
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;;		_readcard
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text12
  2353   0017AC                     __ptext12:
  2354                           	callstack 0
  2355   0017AC                     _levels:
  2356                           	callstack 25
  2357   0017AC                     
  2358                           ;card.c: 62:         Light(i);
  2359   0017AC  5011               	movf	levels@i^0,w,c
  2360   0017AE  EC55  F00B         	call	_Light
  2361   0017B2                     
  2362                           ;card.c: 63:         _delay((unsigned long)((900)*(64000000/4000.0)));
  2363   0017B2  0E4A               	movlw	74
  2364   0017B4  6E14               	movwf	(??_levels+1)^0,c
  2365   0017B6  0E0E               	movlw	14
  2366   0017B8  6E13               	movwf	??_levels^0,c
  2367   0017BA  0E19               	movlw	25
  2368   0017BC                     u1697:
  2369   0017BC  2EE8               	decfsz	wreg,f,c
  2370   0017BE  D7FE               	bra	u1697
  2371   0017C0  2E13               	decfsz	??_levels^0,f,c
  2372   0017C2  D7FC               	bra	u1697
  2373   0017C4  2E14               	decfsz	(??_levels+1)^0,f,c
  2374   0017C6  D7FA               	bra	u1697
  2375   0017C8  F000               	nop	
  2376   0017CA                     
  2377                           ;card.c: 64:         red = color_read_Red();
  2378   0017CA  ECFE  F00B         	call	_color_read_Red	;wreg free
  2379   0017CE  C00A  F0FA         	movff	?_color_read_Red,_red
  2380   0017D2  C00B  F0FB         	movff	?_color_read_Red+1,_red+1
  2381   0017D6                     
  2382                           ;card.c: 65:         blue = color_read_Blue();
  2383   0017D6  EC76  F00C         	call	_color_read_Blue	;wreg free
  2384   0017DA  C00A  F0F8         	movff	?_color_read_Blue,_blue
  2385   0017DE  C00B  F0F9         	movff	?_color_read_Blue+1,_blue+1
  2386   0017E2                     
  2387                           ;card.c: 66:         green = color_read_Green();
  2388   0017E2  EC26  F00C         	call	_color_read_Green	;wreg free
  2389   0017E6  C00A  F0F6         	movff	?_color_read_Green,_green
  2390   0017EA  C00B  F0F7         	movff	?_color_read_Green+1,_green+1
  2391   0017EE                     
  2392                           ;card.c: 67:         clear = color_read_Clear();
  2393   0017EE  EC4E  F00C         	call	_color_read_Clear	;wreg free
  2394   0017F2  C00A  F0F4         	movff	?_color_read_Clear,_clear
  2395   0017F6  C00B  F0F5         	movff	?_color_read_Clear+1,_clear+1
  2396   0017FA  0012               	return		;funcret
  2397   0017FC                     __end_of_levels:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function _color_read_Red *****************
  2401 ;; Defined at:
  2402 ;;		line 29 in file "color.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  tmp             2   14[COMRAM] unsigned int 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  2    9[COMRAM] unsigned int 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;Total ram usage:        7 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 4
  2423 ;; This function calls:
  2424 ;;		_I2C_2_Master_Read
  2425 ;;		_I2C_2_Master_RepStart
  2426 ;;		_I2C_2_Master_Start
  2427 ;;		_I2C_2_Master_Stop
  2428 ;;		_I2C_2_Master_Write
  2429 ;; This function is called by:
  2430 ;;		_levels
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text13
  2435   0017FC                     __ptext13:
  2436                           	callstack 0
  2437   0017FC                     _color_read_Red:
  2438                           	callstack 25
  2439   0017FC                     
  2440                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  2441   0017FC  EC01  F00E         	call	_I2C_2_Master_Start	;wreg free
  2442                           
  2443                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  2444   001800  0E52               	movlw	82
  2445   001802  ECF1  F00D         	call	_I2C_2_Master_Write
  2446                           
  2447                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  2448   001806  0EB6               	movlw	182
  2449   001808  ECF1  F00D         	call	_I2C_2_Master_Write
  2450                           
  2451                           ;color.c: 35:  I2C_2_Master_RepStart();
  2452   00180C  ECF7  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2453                           
  2454                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  2455   001810  0E53               	movlw	83
  2456   001812  ECF1  F00D         	call	_I2C_2_Master_Write
  2457                           
  2458                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  2459   001816  0E01               	movlw	1
  2460   001818  ECC0  F00C         	call	_I2C_2_Master_Read
  2461   00181C  6E0C               	movwf	??_color_read_Red^0,c
  2462   00181E  500C               	movf	??_color_read_Red^0,w,c
  2463   001820  6E0F               	movwf	color_read_Red@tmp^0,c
  2464   001822  6A10               	clrf	(color_read_Red@tmp+1)^0,c
  2465                           
  2466                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2467   001824  0E00               	movlw	0
  2468   001826  ECC0  F00C         	call	_I2C_2_Master_Read
  2469   00182A  6E0C               	movwf	??_color_read_Red^0,c
  2470   00182C  500C               	movf	??_color_read_Red^0,w,c
  2471   00182E  6E0E               	movwf	(??_color_read_Red+2)^0,c
  2472   001830  6A0D               	clrf	(??_color_read_Red+1)^0,c
  2473   001832  500F               	movf	color_read_Red@tmp^0,w,c
  2474   001834  100D               	iorwf	(??_color_read_Red+1)^0,w,c
  2475   001836  6E0F               	movwf	color_read_Red@tmp^0,c
  2476   001838  5010               	movf	(color_read_Red@tmp+1)^0,w,c
  2477   00183A  100E               	iorwf	(??_color_read_Red+2)^0,w,c
  2478   00183C  6E10               	movwf	(color_read_Red@tmp+1)^0,c
  2479                           
  2480                           ;color.c: 39:  I2C_2_Master_Stop();
  2481   00183E  ECFC  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2482   001842                     
  2483                           ;color.c: 40:  return tmp;
  2484   001842  C00F  F00A         	movff	color_read_Red@tmp,?_color_read_Red
  2485   001846  C010  F00B         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2486   00184A  0012               	return		;funcret
  2487   00184C                     __end_of_color_read_Red:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function _color_read_Green *****************
  2491 ;; Defined at:
  2492 ;;		line 59 in file "color.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  tmp             2   14[COMRAM] unsigned int 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  2    9[COMRAM] unsigned int 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;Total ram usage:        7 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 4
  2513 ;; This function calls:
  2514 ;;		_I2C_2_Master_Read
  2515 ;;		_I2C_2_Master_RepStart
  2516 ;;		_I2C_2_Master_Start
  2517 ;;		_I2C_2_Master_Stop
  2518 ;;		_I2C_2_Master_Write
  2519 ;; This function is called by:
  2520 ;;		_levels
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text14
  2525   00184C                     __ptext14:
  2526                           	callstack 0
  2527   00184C                     _color_read_Green:
  2528                           	callstack 25
  2529   00184C                     
  2530                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  2531   00184C  EC01  F00E         	call	_I2C_2_Master_Start	;wreg free
  2532                           
  2533                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  2534   001850  0E52               	movlw	82
  2535   001852  ECF1  F00D         	call	_I2C_2_Master_Write
  2536                           
  2537                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x18);
  2538   001856  0EB8               	movlw	184
  2539   001858  ECF1  F00D         	call	_I2C_2_Master_Write
  2540                           
  2541                           ;color.c: 65:  I2C_2_Master_RepStart();
  2542   00185C  ECF7  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2543                           
  2544                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  2545   001860  0E53               	movlw	83
  2546   001862  ECF1  F00D         	call	_I2C_2_Master_Write
  2547                           
  2548                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  2549   001866  0E01               	movlw	1
  2550   001868  ECC0  F00C         	call	_I2C_2_Master_Read
  2551   00186C  6E0C               	movwf	??_color_read_Green^0,c
  2552   00186E  500C               	movf	??_color_read_Green^0,w,c
  2553   001870  6E0F               	movwf	color_read_Green@tmp^0,c
  2554   001872  6A10               	clrf	(color_read_Green@tmp+1)^0,c
  2555                           
  2556                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2557   001874  0E00               	movlw	0
  2558   001876  ECC0  F00C         	call	_I2C_2_Master_Read
  2559   00187A  6E0C               	movwf	??_color_read_Green^0,c
  2560   00187C  500C               	movf	??_color_read_Green^0,w,c
  2561   00187E  6E0E               	movwf	(??_color_read_Green+2)^0,c
  2562   001880  6A0D               	clrf	(??_color_read_Green+1)^0,c
  2563   001882  500F               	movf	color_read_Green@tmp^0,w,c
  2564   001884  100D               	iorwf	(??_color_read_Green+1)^0,w,c
  2565   001886  6E0F               	movwf	color_read_Green@tmp^0,c
  2566   001888  5010               	movf	(color_read_Green@tmp+1)^0,w,c
  2567   00188A  100E               	iorwf	(??_color_read_Green+2)^0,w,c
  2568   00188C  6E10               	movwf	(color_read_Green@tmp+1)^0,c
  2569                           
  2570                           ;color.c: 69:  I2C_2_Master_Stop();
  2571   00188E  ECFC  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2572   001892                     
  2573                           ;color.c: 70:  return tmp;
  2574   001892  C00F  F00A         	movff	color_read_Green@tmp,?_color_read_Green
  2575   001896  C010  F00B         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2576   00189A  0012               	return		;funcret
  2577   00189C                     __end_of_color_read_Green:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _color_read_Clear *****************
  2581 ;; Defined at:
  2582 ;;		line 73 in file "color.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  tmp             2   14[COMRAM] unsigned int 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  2    9[COMRAM] unsigned int 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;Total ram usage:        7 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; Hardware stack levels required when called: 4
  2603 ;; This function calls:
  2604 ;;		_I2C_2_Master_Read
  2605 ;;		_I2C_2_Master_RepStart
  2606 ;;		_I2C_2_Master_Start
  2607 ;;		_I2C_2_Master_Stop
  2608 ;;		_I2C_2_Master_Write
  2609 ;; This function is called by:
  2610 ;;		_levels
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text15
  2615   00189C                     __ptext15:
  2616                           	callstack 0
  2617   00189C                     _color_read_Clear:
  2618                           	callstack 25
  2619   00189C                     
  2620                           ;color.c: 75:  unsigned int tmp;;color.c: 76:  I2C_2_Master_Start();
  2621   00189C  EC01  F00E         	call	_I2C_2_Master_Start	;wreg free
  2622                           
  2623                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  2624   0018A0  0E52               	movlw	82
  2625   0018A2  ECF1  F00D         	call	_I2C_2_Master_Write
  2626                           
  2627                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x14);
  2628   0018A6  0EB4               	movlw	180
  2629   0018A8  ECF1  F00D         	call	_I2C_2_Master_Write
  2630                           
  2631                           ;color.c: 79:  I2C_2_Master_RepStart();
  2632   0018AC  ECF7  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2633                           
  2634                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  2635   0018B0  0E53               	movlw	83
  2636   0018B2  ECF1  F00D         	call	_I2C_2_Master_Write
  2637                           
  2638                           ;color.c: 81:  tmp=I2C_2_Master_Read(1);
  2639   0018B6  0E01               	movlw	1
  2640   0018B8  ECC0  F00C         	call	_I2C_2_Master_Read
  2641   0018BC  6E0C               	movwf	??_color_read_Clear^0,c
  2642   0018BE  500C               	movf	??_color_read_Clear^0,w,c
  2643   0018C0  6E0F               	movwf	color_read_Clear@tmp^0,c
  2644   0018C2  6A10               	clrf	(color_read_Clear@tmp+1)^0,c
  2645                           
  2646                           ;color.c: 82:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2647   0018C4  0E00               	movlw	0
  2648   0018C6  ECC0  F00C         	call	_I2C_2_Master_Read
  2649   0018CA  6E0C               	movwf	??_color_read_Clear^0,c
  2650   0018CC  500C               	movf	??_color_read_Clear^0,w,c
  2651   0018CE  6E0E               	movwf	(??_color_read_Clear+2)^0,c
  2652   0018D0  6A0D               	clrf	(??_color_read_Clear+1)^0,c
  2653   0018D2  500F               	movf	color_read_Clear@tmp^0,w,c
  2654   0018D4  100D               	iorwf	(??_color_read_Clear+1)^0,w,c
  2655   0018D6  6E0F               	movwf	color_read_Clear@tmp^0,c
  2656   0018D8  5010               	movf	(color_read_Clear@tmp+1)^0,w,c
  2657   0018DA  100E               	iorwf	(??_color_read_Clear+2)^0,w,c
  2658   0018DC  6E10               	movwf	(color_read_Clear@tmp+1)^0,c
  2659                           
  2660                           ;color.c: 83:  I2C_2_Master_Stop();
  2661   0018DE  ECFC  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2662   0018E2                     
  2663                           ;color.c: 84:  return tmp;
  2664   0018E2  C00F  F00A         	movff	color_read_Clear@tmp,?_color_read_Clear
  2665   0018E6  C010  F00B         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2666   0018EA  0012               	return		;funcret
  2667   0018EC                     __end_of_color_read_Clear:
  2668                           	callstack 0
  2669                           
  2670 ;; *************** function _color_read_Blue *****************
  2671 ;; Defined at:
  2672 ;;		line 45 in file "color.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;		None
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  tmp             2   14[COMRAM] unsigned int 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  2    9[COMRAM] unsigned int 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;Total ram usage:        7 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 4
  2693 ;; This function calls:
  2694 ;;		_I2C_2_Master_Read
  2695 ;;		_I2C_2_Master_RepStart
  2696 ;;		_I2C_2_Master_Start
  2697 ;;		_I2C_2_Master_Stop
  2698 ;;		_I2C_2_Master_Write
  2699 ;; This function is called by:
  2700 ;;		_levels
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text16
  2705   0018EC                     __ptext16:
  2706                           	callstack 0
  2707   0018EC                     _color_read_Blue:
  2708                           	callstack 25
  2709   0018EC                     
  2710                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  2711   0018EC  EC01  F00E         	call	_I2C_2_Master_Start	;wreg free
  2712                           
  2713                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  2714   0018F0  0E52               	movlw	82
  2715   0018F2  ECF1  F00D         	call	_I2C_2_Master_Write
  2716                           
  2717                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x1A);
  2718   0018F6  0EBA               	movlw	186
  2719   0018F8  ECF1  F00D         	call	_I2C_2_Master_Write
  2720                           
  2721                           ;color.c: 51:  I2C_2_Master_RepStart();
  2722   0018FC  ECF7  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2723                           
  2724                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  2725   001900  0E53               	movlw	83
  2726   001902  ECF1  F00D         	call	_I2C_2_Master_Write
  2727                           
  2728                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  2729   001906  0E01               	movlw	1
  2730   001908  ECC0  F00C         	call	_I2C_2_Master_Read
  2731   00190C  6E0C               	movwf	??_color_read_Blue^0,c
  2732   00190E  500C               	movf	??_color_read_Blue^0,w,c
  2733   001910  6E0F               	movwf	color_read_Blue@tmp^0,c
  2734   001912  6A10               	clrf	(color_read_Blue@tmp+1)^0,c
  2735                           
  2736                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2737   001914  0E00               	movlw	0
  2738   001916  ECC0  F00C         	call	_I2C_2_Master_Read
  2739   00191A  6E0C               	movwf	??_color_read_Blue^0,c
  2740   00191C  500C               	movf	??_color_read_Blue^0,w,c
  2741   00191E  6E0E               	movwf	(??_color_read_Blue+2)^0,c
  2742   001920  6A0D               	clrf	(??_color_read_Blue+1)^0,c
  2743   001922  500F               	movf	color_read_Blue@tmp^0,w,c
  2744   001924  100D               	iorwf	(??_color_read_Blue+1)^0,w,c
  2745   001926  6E0F               	movwf	color_read_Blue@tmp^0,c
  2746   001928  5010               	movf	(color_read_Blue@tmp+1)^0,w,c
  2747   00192A  100E               	iorwf	(??_color_read_Blue+2)^0,w,c
  2748   00192C  6E10               	movwf	(color_read_Blue@tmp+1)^0,c
  2749                           
  2750                           ;color.c: 55:  I2C_2_Master_Stop();
  2751   00192E  ECFC  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2752   001932                     
  2753                           ;color.c: 56:  return tmp;
  2754   001932  C00F  F00A         	movff	color_read_Blue@tmp,?_color_read_Blue
  2755   001936  C010  F00B         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2756   00193A  0012               	return		;funcret
  2757   00193C                     __end_of_color_read_Blue:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _I2C_2_Master_RepStart *****************
  2761 ;; Defined at:
  2762 ;;		line 33 in file "i2c.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 3
  2783 ;; This function calls:
  2784 ;;		_I2C_2_Master_Idle
  2785 ;; This function is called by:
  2786 ;;		_color_read_Red
  2787 ;;		_color_read_Blue
  2788 ;;		_color_read_Green
  2789 ;;		_color_read_Clear
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text17
  2794   001BEE                     __ptext17:
  2795                           	callstack 0
  2796   001BEE                     _I2C_2_Master_RepStart:
  2797                           	callstack 25
  2798   001BEE                     
  2799                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2800   001BEE  ECA3  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2801   001BF2                     
  2802                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2803   001BF2  010E               	movlb	14	; () banked
  2804   001BF4  83DA               	bsf	218,1,b	;volatile
  2805   001BF6                     
  2806                           ; BSR set to: 14
  2807   001BF6  0012               	return		;funcret
  2808   001BF8                     __end_of_I2C_2_Master_RepStart:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _I2C_2_Master_Read *****************
  2812 ;; Defined at:
  2813 ;;		line 51 in file "i2c.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  ack             1    wreg     unsigned char 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  ack             1    7[COMRAM] unsigned char 
  2818 ;;  tmp             1    8[COMRAM] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      unsigned char 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2831 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2832 ;;Total ram usage:        3 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 3
  2835 ;; This function calls:
  2836 ;;		_I2C_2_Master_Idle
  2837 ;; This function is called by:
  2838 ;;		_color_read_Red
  2839 ;;		_color_read_Blue
  2840 ;;		_color_read_Green
  2841 ;;		_color_read_Clear
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text18
  2846   001980                     __ptext18:
  2847                           	callstack 0
  2848   001980                     _I2C_2_Master_Read:
  2849                           	callstack 25
  2850                           
  2851                           ; BSR set to: 14
  2852                           ;incstack = 0
  2853                           ;I2C_2_Master_Read@ack stored from wreg
  2854   001980  6E08               	movwf	I2C_2_Master_Read@ack^0,c
  2855   001982                     
  2856                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2857   001982  ECA3  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2858   001986                     
  2859                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2860   001986  010E               	movlb	14	; () banked
  2861   001988  87DA               	bsf	218,3,b	;volatile
  2862                           
  2863                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2864   00198A  ECA3  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2865   00198E                     
  2866                           ;i2c.c: 57:   tmp = SSP2BUF;
  2867   00198E  CED5 F009          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2868                           
  2869                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2870   001992  ECA3  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2871   001996                     
  2872                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2873   001996  5008               	movf	I2C_2_Master_Read@ack^0,w,c
  2874   001998  B4D8               	btfsc	status,2,c
  2875   00199A  EFD1  F00C         	goto	u1021
  2876   00199E  EFD5  F00C         	goto	u1020
  2877   0019A2                     u1021:
  2878   0019A2  6A07               	clrf	??_I2C_2_Master_Read^0,c
  2879   0019A4  2A07               	incf	??_I2C_2_Master_Read^0,f,c
  2880   0019A6  EFD6  F00C         	goto	u1038
  2881   0019AA                     u1020:
  2882   0019AA  6A07               	clrf	??_I2C_2_Master_Read^0,c
  2883   0019AC                     u1038:
  2884   0019AC  3A07               	swapf	??_I2C_2_Master_Read^0,f,c
  2885   0019AE  4607               	rlncf	??_I2C_2_Master_Read^0,f,c
  2886   0019B0  010E               	movlb	14	; () banked
  2887   0019B2  51DA               	movf	218,w,b	;volatile
  2888   0019B4  1807               	xorwf	??_I2C_2_Master_Read^0,w,c
  2889   0019B6  0BDF               	andlw	-33
  2890   0019B8  1807               	xorwf	??_I2C_2_Master_Read^0,w,c
  2891   0019BA  6FDA               	movwf	218,b	;volatile
  2892   0019BC                     
  2893                           ; BSR set to: 14
  2894                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2895   0019BC  89DA               	bsf	218,4,b	;volatile
  2896   0019BE                     
  2897                           ; BSR set to: 14
  2898                           ;i2c.c: 61:   return tmp;
  2899   0019BE  5009               	movf	I2C_2_Master_Read@tmp^0,w,c
  2900   0019C0                     
  2901                           ; BSR set to: 14
  2902   0019C0  0012               	return		;funcret
  2903   0019C2                     __end_of_I2C_2_Master_Read:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _Light *****************
  2907 ;; Defined at:
  2908 ;;		line 14 in file "lights.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  colorcode       1    wreg     unsigned char 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  colorcode       1    5[COMRAM] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;Total ram usage:        1 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 2
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_levels
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text19
  2937   0016AA                     __ptext19:
  2938                           	callstack 0
  2939   0016AA                     _Light:
  2940                           	callstack 27
  2941                           
  2942                           ; BSR set to: 14
  2943                           ;incstack = 0
  2944                           ;Light@colorcode stored from wreg
  2945   0016AA  6E06               	movwf	Light@colorcode^0,c
  2946   0016AC                     
  2947                           ;lights.c: 15:     if (colorcode==0){
  2948   0016AC  5006               	movf	Light@colorcode^0,w,c
  2949   0016AE  A4D8               	btfss	status,2,c
  2950   0016B0  EF5C  F00B         	goto	u1071
  2951   0016B4  EF5E  F00B         	goto	u1070
  2952   0016B8                     u1071:
  2953   0016B8  EF61  F00B         	goto	l1963
  2954   0016BC                     u1070:
  2955   0016BC                     
  2956                           ;lights.c: 16:         LATGbits.LATG1=1;
  2957   0016BC  827F               	bsf	127,1,c	;volatile
  2958                           
  2959                           ;lights.c: 17:         LATFbits.LATF7=1;
  2960   0016BE  8E7E               	bsf	126,7,c	;volatile
  2961                           
  2962                           ;lights.c: 18:         LATAbits.LATA4=1;
  2963   0016C0  8879               	bsf	121,4,c	;volatile
  2964   0016C2                     l1963:
  2965                           
  2966                           ;lights.c: 20:     if (colorcode==1){
  2967   0016C2  0406               	decf	Light@colorcode^0,w,c
  2968   0016C4  A4D8               	btfss	status,2,c
  2969   0016C6  EF67  F00B         	goto	u1081
  2970   0016CA  EF69  F00B         	goto	u1080
  2971   0016CE                     u1081:
  2972   0016CE  EF6C  F00B         	goto	l1967
  2973   0016D2                     u1080:
  2974   0016D2                     
  2975                           ;lights.c: 21:         LATGbits.LATG1=1;
  2976   0016D2  827F               	bsf	127,1,c	;volatile
  2977                           
  2978                           ;lights.c: 22:         LATFbits.LATF7=0;
  2979   0016D4  9E7E               	bcf	126,7,c	;volatile
  2980                           
  2981                           ;lights.c: 23:         LATAbits.LATA4=0;
  2982   0016D6  9879               	bcf	121,4,c	;volatile
  2983   0016D8                     l1967:
  2984                           
  2985                           ;lights.c: 25:     if (colorcode==2){
  2986   0016D8  0E02               	movlw	2
  2987   0016DA  1806               	xorwf	Light@colorcode^0,w,c
  2988   0016DC  A4D8               	btfss	status,2,c
  2989   0016DE  EF73  F00B         	goto	u1091
  2990   0016E2  EF75  F00B         	goto	u1090
  2991   0016E6                     u1091:
  2992   0016E6  EF78  F00B         	goto	l1971
  2993   0016EA                     u1090:
  2994   0016EA                     
  2995                           ;lights.c: 26:         LATGbits.LATG1=0;
  2996   0016EA  927F               	bcf	127,1,c	;volatile
  2997                           
  2998                           ;lights.c: 27:         LATFbits.LATF7=1;
  2999   0016EC  8E7E               	bsf	126,7,c	;volatile
  3000                           
  3001                           ;lights.c: 28:         LATAbits.LATA4=0;
  3002   0016EE  9879               	bcf	121,4,c	;volatile
  3003   0016F0                     l1971:
  3004                           
  3005                           ;lights.c: 30:     if (colorcode==3){
  3006   0016F0  0E03               	movlw	3
  3007   0016F2  1806               	xorwf	Light@colorcode^0,w,c
  3008   0016F4  A4D8               	btfss	status,2,c
  3009   0016F6  EF7F  F00B         	goto	u1101
  3010   0016FA  EF81  F00B         	goto	u1100
  3011   0016FE                     u1101:
  3012   0016FE  EF84  F00B         	goto	l200
  3013   001702                     u1100:
  3014   001702                     
  3015                           ;lights.c: 31:         LATGbits.LATG1=0;
  3016   001702  927F               	bcf	127,1,c	;volatile
  3017                           
  3018                           ;lights.c: 32:         LATFbits.LATF7=0;
  3019   001704  9E7E               	bcf	126,7,c	;volatile
  3020                           
  3021                           ;lights.c: 33:         LATAbits.LATA4=1;
  3022   001706  8879               	bsf	121,4,c	;volatile
  3023   001708                     l200:
  3024   001708  0012               	return		;funcret
  3025   00170A                     __end_of_Light:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function _initUSART4 *****************
  3029 ;; Defined at:
  3030 ;;		line 4 in file "serial.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 2
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text20
  3059   001B8E                     __ptext20:
  3060                           	callstack 0
  3061   001B8E                     _initUSART4:
  3062                           	callstack 28
  3063   001B8E                     
  3064                           ;serial.c: 5:     RC0PPS = 0x12;
  3065   001B8E  0E12               	movlw	18
  3066   001B90  010E               	movlb	14	; () banked
  3067   001B92  6F62               	movwf	98,b	;volatile
  3068                           
  3069                           ;serial.c: 6:     RX4PPS = 0x11;
  3070   001B94  0E11               	movlw	17
  3071   001B96  6F15               	movwf	21,b	;volatile
  3072   001B98                     
  3073                           ; BSR set to: 14
  3074                           ;serial.c: 8:     BAUD4CONbits.BRG16 = 0;
  3075   001B98  97E9               	bcf	233,3,b	;volatile
  3076   001B9A                     
  3077                           ; BSR set to: 14
  3078                           ;serial.c: 9:     TX4STAbits.BRGH = 0;
  3079   001B9A  95E8               	bcf	232,2,b	;volatile
  3080                           
  3081                           ;serial.c: 10:     SP4BRGL = 51;
  3082   001B9C  0E33               	movlw	51
  3083   001B9E  6FE5               	movwf	229,b	;volatile
  3084                           
  3085                           ;serial.c: 11:     SP4BRGH = 0;
  3086   001BA0  0E00               	movlw	0
  3087   001BA2  6FE6               	movwf	230,b	;volatile
  3088   001BA4                     
  3089                           ; BSR set to: 14
  3090                           ;serial.c: 13:     RC4STAbits.CREN = 1;
  3091   001BA4  89E7               	bsf	231,4,b	;volatile
  3092   001BA6                     
  3093                           ; BSR set to: 14
  3094                           ;serial.c: 14:     TX4STAbits.TXEN = 1;
  3095   001BA6  8BE8               	bsf	232,5,b	;volatile
  3096   001BA8                     
  3097                           ; BSR set to: 14
  3098                           ;serial.c: 15:     RC4STAbits.SPEN = 1;
  3099   001BA8  8FE7               	bsf	231,7,b	;volatile
  3100   001BAA                     
  3101                           ; BSR set to: 14
  3102   001BAA  0012               	return		;funcret
  3103   001BAC                     __end_of_initUSART4:
  3104                           	callstack 0
  3105                           
  3106 ;; *************** function _color_click_init *****************
  3107 ;; Defined at:
  3108 ;;		line 5 in file "color.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3124 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3126 ;;Total ram usage:        1 bytes
  3127 ;; Hardware stack levels used: 1
  3128 ;; Hardware stack levels required when called: 5
  3129 ;; This function calls:
  3130 ;;		_I2C_2_Master_Init
  3131 ;;		_color_writetoaddr
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text21
  3138   001A38                     __ptext21:
  3139                           	callstack 0
  3140   001A38                     _color_click_init:
  3141                           	callstack 25
  3142   001A38                     
  3143                           ;color.c: 8:     I2C_2_Master_Init();
  3144   001A38  EC64  F00D         	call	_I2C_2_Master_Init	;wreg free
  3145   001A3C                     
  3146                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3147   001A3C  0E01               	movlw	1
  3148   001A3E  6E08               	movwf	color_writetoaddr@value^0,c
  3149   001A40  0E00               	movlw	0
  3150   001A42  ECB7  F00D         	call	_color_writetoaddr
  3151   001A46                     
  3152                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3153   001A46  0E3F               	movlw	63
  3154   001A48  6E0A               	movwf	??_color_click_init^0,c
  3155   001A4A  0E55               	movlw	85
  3156   001A4C                     u1707:
  3157   001A4C  2EE8               	decfsz	wreg,f,c
  3158   001A4E  D7FE               	bra	u1707
  3159   001A50  2E0A               	decfsz	??_color_click_init^0,f,c
  3160   001A52  D7FC               	bra	u1707
  3161   001A54  F000               	nop	
  3162   001A56                     
  3163                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3164   001A56  0E03               	movlw	3
  3165   001A58  6E08               	movwf	color_writetoaddr@value^0,c
  3166   001A5A  0E00               	movlw	0
  3167   001A5C  ECB7  F00D         	call	_color_writetoaddr
  3168   001A60                     
  3169                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3170   001A60  0ED5               	movlw	213
  3171   001A62  6E08               	movwf	color_writetoaddr@value^0,c
  3172   001A64  0E01               	movlw	1
  3173   001A66  ECB7  F00D         	call	_color_writetoaddr
  3174   001A6A  0012               	return		;funcret
  3175   001A6C                     __end_of_color_click_init:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function _color_writetoaddr *****************
  3179 ;; Defined at:
  3180 ;;		line 21 in file "color.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  address         1    wreg     unsigned char 
  3183 ;;  value           1    7[COMRAM] unsigned char 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  address         1    8[COMRAM] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3195 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;Total ram usage:        2 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 4
  3202 ;; This function calls:
  3203 ;;		_I2C_2_Master_Start
  3204 ;;		_I2C_2_Master_Stop
  3205 ;;		_I2C_2_Master_Write
  3206 ;; This function is called by:
  3207 ;;		_color_click_init
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text22
  3212   001B6E                     __ptext22:
  3213                           	callstack 0
  3214   001B6E                     _color_writetoaddr:
  3215                           	callstack 25
  3216                           
  3217                           ;incstack = 0
  3218                           ;color_writetoaddr@address stored from wreg
  3219   001B6E  6E09               	movwf	color_writetoaddr@address^0,c
  3220   001B70                     
  3221                           ;color.c: 22:     I2C_2_Master_Start();
  3222   001B70  EC01  F00E         	call	_I2C_2_Master_Start	;wreg free
  3223                           
  3224                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3225   001B74  0E52               	movlw	82
  3226   001B76  ECF1  F00D         	call	_I2C_2_Master_Write
  3227                           
  3228                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3229   001B7A  5009               	movf	color_writetoaddr@address^0,w,c
  3230   001B7C  0980               	iorlw	128
  3231   001B7E  ECF1  F00D         	call	_I2C_2_Master_Write
  3232                           
  3233                           ;color.c: 25:     I2C_2_Master_Write(value);
  3234   001B82  5008               	movf	color_writetoaddr@value^0,w,c
  3235   001B84  ECF1  F00D         	call	_I2C_2_Master_Write
  3236                           
  3237                           ;color.c: 26:     I2C_2_Master_Stop();
  3238   001B88  ECFC  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3239   001B8C  0012               	return		;funcret
  3240   001B8E                     __end_of_color_writetoaddr:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function _I2C_2_Master_Write *****************
  3244 ;; Defined at:
  3245 ;;		line 45 in file "i2c.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  data_byte       1    wreg     unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  data_byte       1    6[COMRAM] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3262 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3263 ;;Total ram usage:        1 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; Hardware stack levels required when called: 3
  3266 ;; This function calls:
  3267 ;;		_I2C_2_Master_Idle
  3268 ;; This function is called by:
  3269 ;;		_color_writetoaddr
  3270 ;;		_color_read_Red
  3271 ;;		_color_read_Blue
  3272 ;;		_color_read_Green
  3273 ;;		_color_read_Clear
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text23
  3278   001BE2                     __ptext23:
  3279                           	callstack 0
  3280   001BE2                     _I2C_2_Master_Write:
  3281                           	callstack 25
  3282                           
  3283                           ;incstack = 0
  3284                           ;I2C_2_Master_Write@data_byte stored from wreg
  3285   001BE2  6E07               	movwf	I2C_2_Master_Write@data_byte^0,c
  3286   001BE4                     
  3287                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3288   001BE4  ECA3  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3289   001BE8                     
  3290                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3291   001BE8  C007  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3292   001BEC  0012               	return		;funcret
  3293   001BEE                     __end_of_I2C_2_Master_Write:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _I2C_2_Master_Stop *****************
  3297 ;; Defined at:
  3298 ;;		line 39 in file "i2c.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;Total ram usage:        0 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 3
  3319 ;; This function calls:
  3320 ;;		_I2C_2_Master_Idle
  3321 ;; This function is called by:
  3322 ;;		_color_writetoaddr
  3323 ;;		_color_read_Red
  3324 ;;		_color_read_Blue
  3325 ;;		_color_read_Green
  3326 ;;		_color_read_Clear
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text24
  3331   001BF8                     __ptext24:
  3332                           	callstack 0
  3333   001BF8                     _I2C_2_Master_Stop:
  3334                           	callstack 25
  3335   001BF8                     
  3336                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3337   001BF8  ECA3  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3338   001BFC                     
  3339                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3340   001BFC  010E               	movlb	14	; () banked
  3341   001BFE  85DA               	bsf	218,2,b	;volatile
  3342   001C00                     
  3343                           ; BSR set to: 14
  3344   001C00  0012               	return		;funcret
  3345   001C02                     __end_of_I2C_2_Master_Stop:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _I2C_2_Master_Start *****************
  3349 ;; Defined at:
  3350 ;;		line 27 in file "i2c.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 3
  3371 ;; This function calls:
  3372 ;;		_I2C_2_Master_Idle
  3373 ;; This function is called by:
  3374 ;;		_color_writetoaddr
  3375 ;;		_color_read_Red
  3376 ;;		_color_read_Blue
  3377 ;;		_color_read_Green
  3378 ;;		_color_read_Clear
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text25
  3383   001C02                     __ptext25:
  3384                           	callstack 0
  3385   001C02                     _I2C_2_Master_Start:
  3386                           	callstack 25
  3387   001C02                     
  3388                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3389   001C02  ECA3  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3390   001C06                     
  3391                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3392   001C06  010E               	movlb	14	; () banked
  3393   001C08  81DA               	bsf	218,0,b	;volatile
  3394   001C0A                     
  3395                           ; BSR set to: 14
  3396   001C0A  0012               	return		;funcret
  3397   001C0C                     __end_of_I2C_2_Master_Start:
  3398                           	callstack 0
  3399                           
  3400 ;; *************** function _I2C_2_Master_Idle *****************
  3401 ;; Defined at:
  3402 ;;		line 22 in file "i2c.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, status,2, status,0
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;Total ram usage:        1 bytes
  3421 ;; Hardware stack levels used: 1
  3422 ;; Hardware stack levels required when called: 2
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_I2C_2_Master_Start
  3427 ;;		_I2C_2_Master_RepStart
  3428 ;;		_I2C_2_Master_Stop
  3429 ;;		_I2C_2_Master_Write
  3430 ;;		_I2C_2_Master_Read
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text26
  3435   001B46                     __ptext26:
  3436                           	callstack 0
  3437   001B46                     _I2C_2_Master_Idle:
  3438                           	callstack 25
  3439   001B46                     l348:
  3440   001B46  010E               	movlb	14	; () banked
  3441   001B48  B5D8               	btfsc	216,2,b	;volatile
  3442   001B4A  EFA9  F00D         	goto	u901
  3443   001B4E  EFAB  F00D         	goto	u900
  3444   001B52                     u901:
  3445   001B52  EFA3  F00D         	goto	l348
  3446   001B56                     u900:
  3447   001B56                     
  3448                           ; BSR set to: 14
  3449   001B56  CEDA F006          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3450   001B5A  0E1F               	movlw	31
  3451   001B5C  1606               	andwf	??_I2C_2_Master_Idle^0,f,c
  3452   001B5E  A4D8               	btfss	status,2,c
  3453   001B60  EFB4  F00D         	goto	u911
  3454   001B64  EFB6  F00D         	goto	u910
  3455   001B68                     u911:
  3456   001B68  EFA3  F00D         	goto	l348
  3457   001B6C                     u910:
  3458   001B6C                     
  3459                           ; BSR set to: 14
  3460   001B6C  0012               	return		;funcret
  3461   001B6E                     __end_of_I2C_2_Master_Idle:
  3462                           	callstack 0
  3463                           
  3464 ;; *************** function _I2C_2_Master_Init *****************
  3465 ;; Defined at:
  3466 ;;		line 4 in file "i2c.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3484 ;;Total ram usage:        0 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; Hardware stack levels required when called: 2
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_color_click_init
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text27
  3495   001AC8                     __ptext27:
  3496                           	callstack 0
  3497   001AC8                     _I2C_2_Master_Init:
  3498                           	callstack 27
  3499   001AC8                     
  3500                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3501   001AC8  010E               	movlb	14	; () banked
  3502   001ACA  51D9               	movf	217,w,b	;volatile
  3503   001ACC  0BF0               	andlw	-16
  3504   001ACE  0908               	iorlw	8
  3505   001AD0  6FD9               	movwf	217,b	;volatile
  3506   001AD2                     
  3507                           ; BSR set to: 14
  3508                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3509   001AD2  8BD9               	bsf	217,5,b	;volatile
  3510                           
  3511                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3512   001AD4  0E9F               	movlw	159
  3513   001AD6  6FD6               	movwf	214,b	;volatile
  3514   001AD8                     
  3515                           ; BSR set to: 14
  3516                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3517   001AD8  8A84               	bsf	132,5,c	;volatile
  3518   001ADA                     
  3519                           ; BSR set to: 14
  3520                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3521   001ADA  8C84               	bsf	132,6,c	;volatile
  3522   001ADC                     
  3523                           ; BSR set to: 14
  3524                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3525   001ADC  9BA7               	bcf	167,5,b	;volatile
  3526   001ADE                     
  3527                           ; BSR set to: 14
  3528                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3529   001ADE  9DA7               	bcf	167,6,b	;volatile
  3530                           
  3531                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3532   001AE0  0E1D               	movlw	29
  3533   001AE2  6F1D               	movwf	29,b	;volatile
  3534                           
  3535                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3536   001AE4  0E1E               	movlw	30
  3537   001AE6  6F1C               	movwf	28,b	;volatile
  3538                           
  3539                           ;i2c.c: 18:   RD5PPS=0x1C;
  3540   001AE8  0E1C               	movlw	28
  3541   001AEA  6F6F               	movwf	111,b	;volatile
  3542                           
  3543                           ;i2c.c: 19:   RD6PPS=0x1B;
  3544   001AEC  0E1B               	movlw	27
  3545   001AEE  6F70               	movwf	112,b	;volatile
  3546   001AF0                     
  3547                           ; BSR set to: 14
  3548   001AF0  0012               	return		;funcret
  3549   001AF2                     __end_of_I2C_2_Master_Init:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _TxBufferedString *****************
  3553 ;; Defined at:
  3554 ;;		line 83 in file "serial.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  string          2    6[COMRAM] PTR unsigned char 
  3557 ;;		 -> main@buf(100), 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1    wreg      void 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;Total ram usage:        2 bytes
  3574 ;; Hardware stack levels used: 1
  3575 ;; Hardware stack levels required when called: 3
  3576 ;; This function calls:
  3577 ;;		_putCharToTxBuf
  3578 ;; This function is called by:
  3579 ;;		_main
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text28
  3584   001A6C                     __ptext28:
  3585                           	callstack 0
  3586   001A6C                     _TxBufferedString:
  3587                           	callstack 27
  3588   001A6C                     
  3589                           ;serial.c: 85:     while(*string != 0){
  3590   001A6C  EF41  F00D         	goto	l2049
  3591   001A70                     l2045:
  3592                           
  3593                           ;serial.c: 86:   putCharToTxBuf(*string++);
  3594   001A70  C007  FFD9         	movff	TxBufferedString@string,fsr2l
  3595   001A74  C008  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3596   001A78  50DF               	movf	indf2,w,c
  3597   001A7A  EC79  F00D         	call	_putCharToTxBuf
  3598   001A7E  4A07               	infsnz	TxBufferedString@string^0,f,c
  3599   001A80  2A08               	incf	(TxBufferedString@string+1)^0,f,c
  3600   001A82                     l2049:
  3601                           
  3602                           ;serial.c: 85:     while(*string != 0){
  3603   001A82  C007  FFD9         	movff	TxBufferedString@string,fsr2l
  3604   001A86  C008  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3605   001A8A  50DF               	movf	indf2,w,c
  3606   001A8C  A4D8               	btfss	status,2,c
  3607   001A8E  EF4B  F00D         	goto	u1131
  3608   001A92  EF4D  F00D         	goto	u1130
  3609   001A96                     u1131:
  3610   001A96  EF38  F00D         	goto	l2045
  3611   001A9A                     u1130:
  3612   001A9A  0012               	return		;funcret
  3613   001A9C                     __end_of_TxBufferedString:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function _putCharToTxBuf *****************
  3617 ;; Defined at:
  3618 ;;		line 70 in file "serial.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  byte            1    wreg     unsigned char 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  byte            1    5[COMRAM] unsigned char 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;Total ram usage:        1 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 2
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_TxBufferedString
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text29
  3647   001AF2                     __ptext29:
  3648                           	callstack 0
  3649   001AF2                     _putCharToTxBuf:
  3650                           	callstack 27
  3651                           
  3652                           ;incstack = 0
  3653                           ;putCharToTxBuf@byte stored from wreg
  3654   001AF2  6E06               	movwf	putCharToTxBuf@byte^0,c
  3655   001AF4                     
  3656                           ;serial.c: 71:     if (TxBufWriteCnt>=100) {TxBufWriteCnt=0;}
  3657   001AF4  0E63               	movlw	99
  3658   001AF6  6452               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3659   001AF8  EF80  F00D         	goto	u1111
  3660   001AFC  EF82  F00D         	goto	u1110
  3661   001B00                     u1111:
  3662   001B00  EF84  F00D         	goto	l1979
  3663   001B04                     u1110:
  3664   001B04  0E00               	movlw	0
  3665   001B06  6E52               	movwf	_TxBufWriteCnt^0,c	;volatile
  3666   001B08                     l1979:
  3667                           
  3668                           ;serial.c: 72:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3669   001B08  0E00               	movlw	low _EUSART4TXbuf
  3670   001B0A  2452               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  3671   001B0C  6ED9               	movwf	fsr2l,c
  3672   001B0E  6ADA               	clrf	fsr2h,c
  3673   001B10  0E01               	movlw	high _EUSART4TXbuf
  3674   001B12  22DA               	addwfc	fsr2h,f,c
  3675   001B14  C006  FFDF         	movff	putCharToTxBuf@byte,indf2
  3676   001B18  2A52               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3677   001B1A  0012               	return		;funcret
  3678   001B1C                     __end_of_putCharToTxBuf:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function _LightInit *****************
  3682 ;; Defined at:
  3683 ;;		line 4 in file "lights.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		None
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: 2
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text30
  3712   001BD4                     __ptext30:
  3713                           	callstack 0
  3714   001BD4                     _LightInit:
  3715                           	callstack 28
  3716   001BD4                     
  3717                           ;lights.c: 5:     TRISGbits.TRISG1=0;
  3718   001BD4  9287               	bcf	135,1,c	;volatile
  3719                           
  3720                           ;lights.c: 6:     TRISFbits.TRISF7=0;
  3721   001BD6  9E86               	bcf	134,7,c	;volatile
  3722                           
  3723                           ;lights.c: 7:     TRISAbits.TRISA4=0;
  3724   001BD8  9881               	bcf	129,4,c	;volatile
  3725                           
  3726                           ;lights.c: 8:     LATGbits.LATG1=0;
  3727   001BDA  927F               	bcf	127,1,c	;volatile
  3728                           
  3729                           ;lights.c: 9:     LATFbits.LATF7=0;
  3730   001BDC  9E7E               	bcf	126,7,c	;volatile
  3731                           
  3732                           ;lights.c: 10:     LATAbits.LATA4=0;
  3733   001BDE  9879               	bcf	121,4,c	;volatile
  3734   001BE0  0012               	return		;funcret
  3735   001BE2                     __end_of_LightInit:
  3736                           	callstack 0
  3737                           
  3738 ;; *************** function _Interrupts_init *****************
  3739 ;; Defined at:
  3740 ;;		line 10 in file "interrupts.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		None
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;Total ram usage:        0 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 2
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_main
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text31
  3769   001BC4                     __ptext31:
  3770                           	callstack 0
  3771   001BC4                     _Interrupts_init:
  3772                           	callstack 28
  3773   001BC4                     
  3774                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
  3775   001BC4  8CF2               	bsf	242,6,c	;volatile
  3776                           
  3777                           ;interrupts.c: 13:     INTCONbits.IPEN=1;
  3778   001BC6  8AF2               	bsf	242,5,c	;volatile
  3779                           
  3780                           ;interrupts.c: 14:     PIE4bits.RC4IE=1;
  3781   001BC8  010E               	movlb	14	; () banked
  3782   001BCA  872D               	bsf	45,3,b	;volatile
  3783                           
  3784                           ;interrupts.c: 15:     PIE4bits.TX4IE=0;
  3785   001BCC  952D               	bcf	45,2,b	;volatile
  3786                           
  3787                           ;interrupts.c: 16:     PIE0bits.TMR0IE=1;
  3788   001BCE  8B29               	bsf	41,5,b	;volatile
  3789                           
  3790                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  3791   001BD0  8EF2               	bsf	242,7,c	;volatile
  3792   001BD2                     
  3793                           ; BSR set to: 14
  3794   001BD2  0012               	return		;funcret
  3795   001BD4                     __end_of_Interrupts_init:
  3796                           	callstack 0
  3797                           
  3798 ;; *************** function _HighISR *****************
  3799 ;; Defined at:
  3800 ;;		line 26 in file "interrupts.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  reg             1    4[COMRAM] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3817 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3818 ;;Total ram usage:        3 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; Hardware stack levels required when called: 1
  3821 ;; This function calls:
  3822 ;;		_getCharFromTxBuf
  3823 ;;		_isDataInTxBuf
  3824 ;;		_putCharToRxBuf
  3825 ;; This function is called by:
  3826 ;;		Interrupt level 2
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	intcode
  3831   000008                     __pintcode:
  3832                           	callstack 0
  3833   000008                     _HighISR:
  3834                           	callstack 21
  3835                           
  3836                           ; BSR set to: 14
  3837                           ;incstack = 0
  3838   000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3839   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3840   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3841   000012                     
  3842                           ;interrupts.c: 29:  if(PIR4bits.TX4IF & sendFLAG){
  3843   000012  010E               	movlb	14	; () banked
  3844   000014  B537               	btfsc	55,2,b	;volatile
  3845   000016  EF0F  F000         	goto	i2u126_41
  3846   00001A  EF12  F000         	goto	i2u126_40
  3847   00001E                     i2u126_41:
  3848   00001E  0E01               	movlw	1
  3849   000020  EF13  F000         	goto	i2u126_46
  3850   000024                     i2u126_40:
  3851   000024  0E00               	movlw	0
  3852   000026                     i2u126_46:
  3853   000026  144E               	andwf	_sendFLAG^0,w,c
  3854   000028  0900               	iorlw	0
  3855   00002A  B4D8               	btfsc	status,2,c
  3856   00002C  EF1A  F000         	goto	i2u127_41
  3857   000030  EF1C  F000         	goto	i2u127_40
  3858   000034                     i2u127_41:
  3859   000034  EF2E  F000         	goto	i2l2161
  3860   000038                     i2u127_40:
  3861   000038                     
  3862                           ; BSR set to: 14
  3863                           ;interrupts.c: 30:         TX4REG = getCharFromTxBuf();
  3864   000038  EC4E  F00D         	call	_getCharFromTxBuf	;wreg free
  3865   00003C  010E               	movlb	14	; () banked
  3866   00003E  6FE4               	movwf	228,b	;volatile
  3867   000040                     
  3868                           ; BSR set to: 14
  3869                           ;interrupts.c: 31:         if (!isDataInTxBuf()){
  3870   000040  ECD6  F00D         	call	_isDataInTxBuf	;wreg free
  3871   000044  0900               	iorlw	0
  3872   000046  A4D8               	btfss	status,2,c
  3873   000048  EF28  F000         	goto	i2u128_41
  3874   00004C  EF2A  F000         	goto	i2u128_40
  3875   000050                     i2u128_41:
  3876   000050  EF2E  F000         	goto	i2l2161
  3877   000054                     i2u128_40:
  3878   000054                     
  3879                           ;interrupts.c: 32:             PIE4bits.TX4IE=0;
  3880   000054  010E               	movlb	14	; () banked
  3881   000056  952D               	bcf	45,2,b	;volatile
  3882   000058                     
  3883                           ; BSR set to: 14
  3884                           ;interrupts.c: 33:             sendFLAG=0;
  3885   000058  0E00               	movlw	0
  3886   00005A  6E4E               	movwf	_sendFLAG^0,c
  3887   00005C                     i2l2161:
  3888                           
  3889                           ;interrupts.c: 37:     if(PIR4bits.RC4IF){
  3890   00005C  010E               	movlb	14	; () banked
  3891   00005E  A737               	btfss	55,3,b	;volatile
  3892   000060  EF34  F000         	goto	i2u129_41
  3893   000064  EF36  F000         	goto	i2u129_40
  3894   000068                     i2u129_41:
  3895   000068  EF3E  F000         	goto	i2l178
  3896   00006C                     i2u129_40:
  3897   00006C                     
  3898                           ; BSR set to: 14
  3899                           ;interrupts.c: 38:         char reg = RC4REG;
  3900   00006C  CEE3 F005          	movff	3811,HighISR@reg	;volatile
  3901   000070                     
  3902                           ; BSR set to: 14
  3903                           ;interrupts.c: 39:         putCharToRxBuf(reg);
  3904   000070  5005               	movf	HighISR@reg^0,w,c
  3905   000072  EC8E  F00D         	call	_putCharToRxBuf
  3906   000076                     
  3907                           ;interrupts.c: 40:         charFLAG=1;
  3908   000076  0E01               	movlw	1
  3909   000078  0100               	movlb	0	; () banked
  3910   00007A  6FFD               	movwf	_charFLAG& (0+255),b
  3911   00007C                     i2l178:
  3912   00007C  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3913   000080  C003  FFD9         	movff	??_HighISR,fsr2l
  3914   000084  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3915   000086  0011               	retfie		f
  3916   000088                     __end_of_HighISR:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function _putCharToRxBuf *****************
  3920 ;; Defined at:
  3921 ;;		line 50 in file "serial.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  byte            1    wreg     unsigned char 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  byte            1    0[COMRAM] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3939 ;;Total ram usage:        1 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_HighISR
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text33
  3949   001B1C                     __ptext33:
  3950                           	callstack 0
  3951   001B1C                     _putCharToRxBuf:
  3952                           	callstack 21
  3953                           
  3954                           ;incstack = 0
  3955                           ;putCharToRxBuf@byte stored from wreg
  3956   001B1C  6E01               	movwf	putCharToRxBuf@byte^0,c
  3957   001B1E                     
  3958                           ;serial.c: 51:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3959   001B1E  0E13               	movlw	19
  3960   001B20  6454               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3961   001B22  EF95  F00D         	goto	i2u117_41
  3962   001B26  EF97  F00D         	goto	i2u117_40
  3963   001B2A                     i2u117_41:
  3964   001B2A  EF99  F00D         	goto	i2l2067
  3965   001B2E                     i2u117_40:
  3966   001B2E  0E00               	movlw	0
  3967   001B30  6E54               	movwf	_RxBufWriteCnt^0,c	;volatile
  3968   001B32                     i2l2067:
  3969                           
  3970                           ;serial.c: 52:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3971   001B32  0EA0               	movlw	low _EUSART4RXbuf
  3972   001B34  2454               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3973   001B36  6ED9               	movwf	fsr2l,c
  3974   001B38  6ADA               	clrf	fsr2h,c
  3975   001B3A  0E01               	movlw	high _EUSART4RXbuf
  3976   001B3C  22DA               	addwfc	fsr2h,f,c
  3977   001B3E  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3978   001B42  2A54               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3979   001B44  0012               	return		;funcret
  3980   001B46                     __end_of_putCharToRxBuf:
  3981                           	callstack 0
  3982                           
  3983 ;; *************** function _isDataInTxBuf *****************
  3984 ;; Defined at:
  3985 ;;		line 78 in file "serial.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      unsigned char 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_HighISR
  4009 ;;		_sendTxBuf
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text34
  4014   001BAC                     __ptext34:
  4015                           	callstack 0
  4016   001BAC                     _isDataInTxBuf:
  4017                           	callstack 21
  4018   001BAC                     
  4019                           ;serial.c: 79:     return (TxBufWriteCnt!=TxBufReadCnt);
  4020   001BAC  5051               	movf	_TxBufReadCnt^0,w,c	;volatile
  4021   001BAE  1852               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  4022   001BB0  A4D8               	btfss	status,2,c
  4023   001BB2  EFDD  F00D         	goto	i2u115_41
  4024   001BB6  EFE0  F00D         	goto	i2u115_40
  4025   001BBA                     i2u115_41:
  4026   001BBA  0E01               	movlw	1
  4027   001BBC  EFE1  F00D         	goto	i2u116_40
  4028   001BC0                     i2u115_40:
  4029   001BC0  0E00               	movlw	0
  4030   001BC2                     i2u116_40:
  4031   001BC2  0012               	return		;funcret
  4032   001BC4                     __end_of_isDataInTxBuf:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function _getCharFromTxBuf *****************
  4036 ;; Defined at:
  4037 ;;		line 64 in file "serial.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;		None
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      unsigned char 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;Total ram usage:        2 bytes
  4056 ;; Hardware stack levels used: 1
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_HighISR
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text35
  4065   001A9C                     __ptext35:
  4066                           	callstack 0
  4067   001A9C                     _getCharFromTxBuf:
  4068                           	callstack 21
  4069   001A9C                     
  4070                           ;serial.c: 65:     if (TxBufReadCnt>=100) {TxBufReadCnt=0;}
  4071   001A9C  0E63               	movlw	99
  4072   001A9E  6451               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  4073   001AA0  EF54  F00D         	goto	i2u114_41
  4074   001AA4  EF56  F00D         	goto	i2u114_40
  4075   001AA8                     i2u114_41:
  4076   001AA8  EF58  F00D         	goto	i2l2055
  4077   001AAC                     i2u114_40:
  4078   001AAC  0E00               	movlw	0
  4079   001AAE  6E51               	movwf	_TxBufReadCnt^0,c	;volatile
  4080   001AB0                     i2l2055:
  4081                           
  4082                           ;serial.c: 66:     return EUSART4TXbuf[TxBufReadCnt++];
  4083   001AB0  2A51               	incf	_TxBufReadCnt^0,f,c	;volatile
  4084   001AB2  0451               	decf	_TxBufReadCnt^0,w,c	;volatile
  4085   001AB4  6E01               	movwf	??_getCharFromTxBuf^0,c
  4086   001AB6  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  4087   001AB8  0E00               	movlw	low _EUSART4TXbuf
  4088   001ABA  2401               	addwf	??_getCharFromTxBuf^0,w,c
  4089   001ABC  6ED9               	movwf	fsr2l,c
  4090   001ABE  0E01               	movlw	high _EUSART4TXbuf
  4091   001AC0  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  4092   001AC2  6EDA               	movwf	fsr2h,c
  4093   001AC4  50DF               	movf	indf2,w,c
  4094   001AC6  0012               	return		;funcret
  4095   001AC8                     __end_of_getCharFromTxBuf:
  4096                           	callstack 0
  4097                           
  4098                           	psect	rparam
  4099   000000                     
  4100                           	psect	temp
  4101   000055                     btemp:
  4102                           	callstack 0
  4103   000055                     	ds	1
  4104   000000                     int$flags	set	btemp
  4105   000000                     wtemp8	set	btemp+1
  4106   000000                     ttemp5	set	btemp+1
  4107   000000                     ttemp6	set	btemp+4
  4108   000000                     ttemp7	set	btemp+8
  4109                           
  4110                           	psect	idloc
  4111                           
  4112                           ;Config register IDLOC0 @ 0x200000
  4113                           ;	unspecified, using default values
  4114   200000                     	org	2097152
  4115   200000  0FFF               	dw	4095
  4116                           
  4117                           ;Config register IDLOC1 @ 0x200002
  4118                           ;	unspecified, using default values
  4119   200002                     	org	2097154
  4120   200002  0FFF               	dw	4095
  4121                           
  4122                           ;Config register IDLOC2 @ 0x200004
  4123                           ;	unspecified, using default values
  4124   200004                     	org	2097156
  4125   200004  0FFF               	dw	4095
  4126                           
  4127                           ;Config register IDLOC3 @ 0x200006
  4128                           ;	unspecified, using default values
  4129   200006                     	org	2097158
  4130   200006  0FFF               	dw	4095
  4131                           
  4132                           ;Config register IDLOC4 @ 0x200008
  4133                           ;	unspecified, using default values
  4134   200008                     	org	2097160
  4135   200008  0FFF               	dw	4095
  4136                           
  4137                           ;Config register IDLOC5 @ 0x20000A
  4138                           ;	unspecified, using default values
  4139   20000A                     	org	2097162
  4140   20000A  0FFF               	dw	4095
  4141                           
  4142                           ;Config register IDLOC6 @ 0x20000C
  4143                           ;	unspecified, using default values
  4144   20000C                     	org	2097164
  4145   20000C  0FFF               	dw	4095
  4146                           
  4147                           ;Config register IDLOC7 @ 0x20000E
  4148                           ;	unspecified, using default values
  4149   20000E                     	org	2097166
  4150   20000E  0FFF               	dw	4095
  4151                           
  4152                           	psect	config
  4153                           
  4154                           ;Config register CONFIG1L @ 0x300000
  4155                           ;	External Oscillator mode Selection bits
  4156                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4157                           ;	Power-up default value for COSC bits
  4158                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4159   300000                     	org	3145728
  4160   300000  AA                 	db	170
  4161                           
  4162                           ;Config register CONFIG1H @ 0x300001
  4163                           ;	unspecified, using default values
  4164                           ;	Clock Out Enable bit
  4165                           ;	CLKOUTEN = 0x1, unprogrammed default
  4166                           ;	Clock Switch Enable bit
  4167                           ;	CSWEN = 0x1, unprogrammed default
  4168                           ;	Fail-Safe Clock Monitor Enable bit
  4169                           ;	FCMEN = 0x1, unprogrammed default
  4170   300001                     	org	3145729
  4171   300001  FF                 	db	255
  4172                           
  4173                           ;Config register CONFIG2L @ 0x300002
  4174                           ;	unspecified, using default values
  4175                           ;	Master Clear Enable bit
  4176                           ;	MCLRE = 0x1, unprogrammed default
  4177                           ;	Power-up Timer Enable bit
  4178                           ;	PWRTE = 0x1, unprogrammed default
  4179                           ;	Low-power BOR enable bit
  4180                           ;	LPBOREN = 0x1, unprogrammed default
  4181                           ;	Brown-out Reset Enable bits
  4182                           ;	BOREN = 0x3, unprogrammed default
  4183   300002                     	org	3145730
  4184   300002  FF                 	db	255
  4185                           
  4186                           ;Config register CONFIG2H @ 0x300003
  4187                           ;	unspecified, using default values
  4188                           ;	Brown Out Reset Voltage selection bits
  4189                           ;	BORV = 0x3, unprogrammed default
  4190                           ;	ZCD Disable bit
  4191                           ;	ZCD = 0x1, unprogrammed default
  4192                           ;	PPSLOCK bit One-Way Set Enable bit
  4193                           ;	PPS1WAY = 0x1, unprogrammed default
  4194                           ;	Stack Full/Underflow Reset Enable bit
  4195                           ;	STVREN = 0x1, unprogrammed default
  4196                           ;	Debugger Enable bit
  4197                           ;	DEBUG = 0x1, unprogrammed default
  4198                           ;	Extended Instruction Set Enable bit
  4199                           ;	XINST = 0x1, unprogrammed default
  4200   300003                     	org	3145731
  4201   300003  FF                 	db	255
  4202                           
  4203                           ;Config register CONFIG3L @ 0x300004
  4204                           ;	WDT Period Select bits
  4205                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4206                           ;	WDT operating mode
  4207                           ;	WDTE = OFF, WDT Disabled
  4208   300004                     	org	3145732
  4209   300004  9F                 	db	159
  4210                           
  4211                           ;Config register CONFIG3H @ 0x300005
  4212                           ;	unspecified, using default values
  4213                           ;	WDT Window Select bits
  4214                           ;	WDTCWS = 0x7, unprogrammed default
  4215                           ;	WDT input clock selector
  4216                           ;	WDTCCS = 0x7, unprogrammed default
  4217   300005                     	org	3145733
  4218   300005  FF                 	db	255
  4219                           
  4220                           ;Config register CONFIG4L @ 0x300006
  4221                           ;	unspecified, using default values
  4222                           ;	Write Protection Block 0
  4223                           ;	WRT0 = 0x1, unprogrammed default
  4224                           ;	Write Protection Block 1
  4225                           ;	WRT1 = 0x1, unprogrammed default
  4226                           ;	Write Protection Block 2
  4227                           ;	WRT2 = 0x1, unprogrammed default
  4228                           ;	Write Protection Block 3
  4229                           ;	WRT3 = 0x1, unprogrammed default
  4230                           ;	Write Protection Block 3
  4231                           ;	WRT4 = 0x1, unprogrammed default
  4232                           ;	Write Protection Block 3
  4233                           ;	WRT5 = 0x1, unprogrammed default
  4234                           ;	Write Protection Block 3
  4235                           ;	WRT6 = 0x1, unprogrammed default
  4236                           ;	Write Protection Block 3
  4237                           ;	WRT7 = 0x1, unprogrammed default
  4238   300006                     	org	3145734
  4239   300006  FF                 	db	255
  4240                           
  4241                           ;Config register CONFIG4H @ 0x300007
  4242                           ;	unspecified, using default values
  4243                           ;	Configuration Register Write Protection bit
  4244                           ;	WRTC = 0x1, unprogrammed default
  4245                           ;	Boot Block Write Protection bit
  4246                           ;	WRTB = 0x1, unprogrammed default
  4247                           ;	Data EEPROM Write Protection bit
  4248                           ;	WRTD = 0x1, unprogrammed default
  4249                           ;	Scanner Enable bit
  4250                           ;	SCANE = 0x1, unprogrammed default
  4251                           ;	Low Voltage Programming Enable bit
  4252                           ;	LVP = 0x1, unprogrammed default
  4253   300007                     	org	3145735
  4254   300007  FF                 	db	255
  4255                           
  4256                           ;Config register CONFIG5L @ 0x300008
  4257                           ;	unspecified, using default values
  4258                           ;	UserNVM Program Memory Code Protection bit
  4259                           ;	CP = 0x1, unprogrammed default
  4260                           ;	DataNVM Memory Code Protection bit
  4261                           ;	CPD = 0x1, unprogrammed default
  4262   300008                     	org	3145736
  4263   300008  FF                 	db	255
  4264                           
  4265                           ;Config register CONFIG5H @ 0x300009
  4266                           ;	unspecified, using default values
  4267   300009                     	org	3145737
  4268   300009  FF                 	db	255
  4269                           
  4270                           ;Config register CONFIG6L @ 0x30000A
  4271                           ;	unspecified, using default values
  4272                           ;	Table Read Protection Block 0
  4273                           ;	EBTR0 = 0x1, unprogrammed default
  4274                           ;	Table Read Protection Block 1
  4275                           ;	EBTR1 = 0x1, unprogrammed default
  4276                           ;	Table Read Protection Block 2
  4277                           ;	EBTR2 = 0x1, unprogrammed default
  4278                           ;	Table Read Protection Block 3
  4279                           ;	EBTR3 = 0x1, unprogrammed default
  4280                           ;	Table Read Protection Block 4
  4281                           ;	EBTR4 = 0x1, unprogrammed default
  4282                           ;	Table Read Protection Block 5
  4283                           ;	EBTR5 = 0x1, unprogrammed default
  4284                           ;	Table Read Protection Block 6
  4285                           ;	EBTR6 = 0x1, unprogrammed default
  4286                           ;	Table Read Protection Block 7
  4287                           ;	EBTR7 = 0x1, unprogrammed default
  4288   30000A                     	org	3145738
  4289   30000A  FF                 	db	255
  4290                           
  4291                           ;Config register CONFIG6H @ 0x30000B
  4292                           ;	unspecified, using default values
  4293                           ;	Boot Block Table Read Protection bit
  4294                           ;	EBTRB = 0x1, unprogrammed default
  4295   30000B                     	org	3145739
  4296   30000B  FF                 	db	255
  4297                           tosu	equ	0xFFF
  4298                           tosh	equ	0xFFE
  4299                           tosl	equ	0xFFD
  4300                           stkptr	equ	0xFFC
  4301                           pclatu	equ	0xFFB
  4302                           pclath	equ	0xFFA
  4303                           pcl	equ	0xFF9
  4304                           tblptru	equ	0xFF8
  4305                           tblptrh	equ	0xFF7
  4306                           tblptrl	equ	0xFF6
  4307                           tablat	equ	0xFF5
  4308                           prodh	equ	0xFF4
  4309                           prodl	equ	0xFF3
  4310                           indf0	equ	0xFEF
  4311                           postinc0	equ	0xFEE
  4312                           postdec0	equ	0xFED
  4313                           preinc0	equ	0xFEC
  4314                           plusw0	equ	0xFEB
  4315                           fsr0h	equ	0xFEA
  4316                           fsr0l	equ	0xFE9
  4317                           wreg	equ	0xFE8
  4318                           indf1	equ	0xFE7
  4319                           postinc1	equ	0xFE6
  4320                           postdec1	equ	0xFE5
  4321                           preinc1	equ	0xFE4
  4322                           plusw1	equ	0xFE3
  4323                           fsr1h	equ	0xFE2
  4324                           fsr1l	equ	0xFE1
  4325                           bsr	equ	0xFE0
  4326                           indf2	equ	0xFDF
  4327                           postinc2	equ	0xFDE
  4328                           postdec2	equ	0xFDD
  4329                           preinc2	equ	0xFDC
  4330                           plusw2	equ	0xFDB
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    0
    Data        0
    BSS         234
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      84
    BANK0           160    144     159
    BANK1           256      0     212
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_1(CODE[52]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_1(CODE[52]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 52
		 -> STR_1(CODE[52]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1488$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_1(CODE[52]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1435$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1435$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _levels->_color_read_Blue
    _levels->_color_read_Clear
    _levels->_color_read_Green
    _levels->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               101   101      0    8916
                                             43 BANK0    101   101      0
                    _Interrupts_init
                          _LightInit
                   _TxBufferedString
                   _color_click_init
                         _initUSART4
                             _levels
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    15     14    7316
                                             16 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             75 COMRAM     2     2      0
                                             10 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             67 COMRAM     8     2      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             32 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _levels                                               4     2      2    1018
                                             16 COMRAM     4     2      2
                              _Light
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              6 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _Light                                                1     1      0      88
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              7 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              6 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LightInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              3     3      0      45
                                              2 COMRAM     3     3      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _isDataInTxBuf                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _LightInit
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _levels
     _Light
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D4       7       82.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITBIGSFRhlhhll     8F      0       0      39        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      54       1       89.4%
BITBIGSFRhlhhhl     4B      0       0      34        0.0%
BITBIGSFRhlhlhl     36      0       0      43        0.0%
BITBIGSFRhlhlhl     2D      0       0      42        0.0%
BITBIGSFRhlhll      2A      0       0      45        0.0%
BITBIGSFRlll        26      0       0      50        0.0%
BITBIGSFRhlhhhh     1B      0       0      33        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRhlhlhl      C      0       0      44        0.0%
BITBIGSFRllhh        B      0       0      48        0.0%
BITBIGSFRhll         9      0       0      46        0.0%
BITBIGSFRhlhlhh      8      0       0      40        0.0%
BITBIGSFRllhl        6      0       0      49        0.0%
BITBIGSFRhlhhll      4      0       0      38        0.0%
BITBIGSFRlh          3      0       0      47        0.0%
BITBIGSFRhlhhlh      2      0       0      36        0.0%
BITBIGSFRhlhhlh      1      0       0      35        0.0%
BITBIGSFRhlhlhl      1      0       0      41        0.0%
BITBIGSFRhlhhll      1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C7      51        0.0%
DATA                 0      0     1C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 04 13:32:54 2022

               _color_read_Red 17FC                _color_read_Blue 18EC                             l81 184A  
                           l90 18EA                             l75 1A6A                             l84 193A  
                           l78 1B8C                             l87 189A               _color_read_Clear 189C  
             _color_read_Green 184C              ??_Interrupts_init 0006                            l200 1708  
                          l127 17FA                            l170 1BD2                            l243 1BAA  
                          l351 1B6C                            l280 1B1A                            l360 1C00  
                          l193 1BE0                            l345 1AF0                            l354 1C0A  
                          l363 1BEC                            l348 1B46                            l357 1BF6  
                          l366 19C0                            l289 1A9A                            l483 123A  
                          l496 139E                            u900 1B56                            u901 1B52  
                          u910 1B6C                            u911 1B68                            _abs 19C2  
                          _pad 15B8                            _red 00FA                            wreg 000FE8  
                         l1112 1A00                           l2001 1BA6                           l1105 17AA  
                         l2011 1A46                           l2003 1BA8                           ?_abs 0018  
                         l1124 15B6                           l1132 197E                           l2005 1BC4  
                         l2013 1A56                           l2021 17B2                           l1109 19F8  
                         l2015 1A60                           l2007 1A38                           l2023 17CA  
                         l1135 1C0C                           l1047 175A                           l1080 0ECA  
                         l2017 1BD4                           l2009 1A3C                           l2025 17D6  
                         l2201 14EE                           l1073 1630                           l1081 0F10  
                         l2043 1A6C                           l2027 17E2                           l2019 17AC  
                         l2211 1570                           l2203 1500                           l1092 10B2  
                         l2045 1A70                           l2029 17EE                           l2205 1512  
                         l2221 195E                           l1069 15DA                           l1078 0EC2  
                         l2047 1A7E                           l2231 10EA                           l2223 10B4  
                         l2207 151C                           l2215 193C                           l2311 15FA  
                         l2303 15B8                           l2049 1A82                           l2241 1146  
                         l2233 10F8                           l2225 10B8                           l2209 153A  
                         l2217 1948                           l2313 15FE                           l2305 15C6  
                         l2321 0E36                           l2251 11B0                           l2243 114E  
                         l2235 1118                           l2227 10C6                           l2219 195A  
                         l2315 161C                           l2307 15D2                           l2331 0EB6  
                         l2323 0E56                           l1099 14EC                           l2403 175C  
                         l2261 11FA                           l2253 11D0                           l2245 1162  
                         l2237 111C                           l2229 10E6                           l2317 19C2  
                         l2309 15E6                           l2341 0F04                           l2333 0ED2  
                         l2325 0E6A                           l2405 1768                           l2421 1748  
                         l2413 170A                           l2263 121A                           l2255 11D2  
                         l2247 1170                           l2239 1128                           l2271 124E  
                         l2319 19DC                           l2351 0FAA                           l2343 0F0C  
                         l2335 0EE2                           l2327 0E7A                           l2407 1784  
                         l2415 171C                           l2431 163E                           l2257 11E4  
                         l2249 1182                           l2281 12BE                           l2273 126E  
                         l2361 1052                           l2353 0FB0                           l2345 0F18  
                         l2337 0EE8                           l2329 0E9A                           l2409 17A0  
                         l2417 1724                           l2441 169A                           l2433 1642  
                         l2425 1632                           l2259 11EA                           l2291 1336  
                         l2283 12C6                           l2275 1272                           l2267 123C  
                         l2363 106C                           l2355 0FB6                           l2347 0F22  
                         l2339 0EF8                           l2419 172C                           l2443 169E  
                         l2435 1648                           l2427 1636                           l1805 1B46  
                         l2293 1348                           l2285 12DA                           l2277 1280  
                         l2269 1240                           l2365 107C                           l2349 0F28  
                         l2357 101A                           l2381 13E4                           l2373 13A0  
                         l2437 1652                           l2429 163A                           l1807 1B56  
                         l2287 12E8                           l2295 134E                           l2279 12A0  
                         l2367 1082                           l2359 1034                           l2383 13F4  
                         l2375 13C4                           l2439 168E                           l1921 1AC8  
                         l2297 135E                           l2289 1316                           l2369 1092  
                         l2393 14B2                           l2385 1410                           l2377 13D2  
                         l1931 1ADE                           l1923 1AD2                           l2299 137E  
                         l2387 142C                           l2379 13E0                           l1925 1AD8  
                         l1861 1C02                           l1933 1B70                           l1941 18EC  
                         l2389 1482                           l2397 14C4                           l1927 1ADA  
                         l1863 1C06                           l1871 1BFC                           l1943 1932  
                         l1935 17FC                           l1929 1ADC                           l1865 1BE4  
                         l1961 16BC                           l1881 198E                           l1873 1BEE  
                         l1953 189C                           l1937 1842                           l1867 1BE8  
                         l1971 16F0                           l1963 16C2                           l1883 1996  
                         l1875 1BF2                           l1955 18E2                           l1947 184C  
                         l1981 1B18                           l1869 1BF8                           l1973 1702  
                         l1965 16D2                           l1885 19BC                           l1877 1982  
                         l1949 1892                           ?_pad 0016                           l1975 1AF4  
                         l1967 16D8                           l1959 16AC                           l1887 19BE  
                         l1879 1986                           l1977 1B04                           l1993 1B8E  
                         l1969 16EA                           l1979 1B08                           l1995 1B98  
                         l1997 1B9A                           l1999 1BA4                           STR_1 0E01  
                         u1100 1702                           u1020 19AA                           u1101 16FE  
                         u1021 19A2                           u1110 1B04                           u1111 1B00  
                         u1130 1A9A                           u1131 1A96                           u1070 16BC  
                         u1038 19AC                           u1071 16B8                           u1080 16D2  
                         u1400 10F8                           u1081 16CE                           u1401 10F4  
                         u1090 16EA                           u1091 16E6                           u1411 1122  
                         u1420 1146                           u1500 1316                           u1340 1500  
                         u1421 1142                           u1501 1312                           u1341 14FC  
                         u1430 1170                           u1510 135E                           u1350 1512  
                         u1431 116C                           u1511 135A                           u1351 150E  
                         u1440 11B0                           u1360 153A                           u1520 15C6  
                         u1600 0EF8                   _BAUD4CONbits 000EE9                           u1441 11AC  
                         u1361 1536                           u1521 15C2                           u1601 0EF4  
                         u1450 11FA                           u1370 1570                           u1530 161C  
                         u1610 1034                           u1451 11F6                           u1371 156C  
                         u1531 1618                           u1611 1030                           u1460 124E  
                         u1540 19DC                           u1380 197E                           u1620 1052  
                         u1461 124A                           u1541 19D8                           u1381 197A  
                         u1621 104E                           u1390 10C6                           u1470 1280  
                         u1630 106C                           u1550 0E66                           u1391 10C2  
                         u1471 127C                           u1631 1068                           u1551 0E60  
                         u1480 12BE                           u1640 107C                           u1560 0E68  
                         u1481 12BA                           u1641 1078                           u1490 12E8  
                         u1570 0E7A                           u1650 13C4                           u1707 1A4C  
                         u1491 12E4                           u1571 0E76                           u1651 13C0  
                         u1580 0EB6                           u1660 1410                           u1581 0EB2  
                         u1661 140C                           u1590 0EE2                           u1670 142C  
                         u1591 0EDE                           u1671 1428                           u1680 17A0  
                         u1681 179C                           u1697 17BC                           abs@a 0018  
                         _dbuf 01B4                           _blue 00F8                           _main 1632  
                         _dtoa 0E36                           _prec 00F2                           pad@i 001D  
                         pad@p 001A                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001F  
                         fsr2l 000FD9                           btemp 0055                           start 0088  
       __end_of_color_read_Red 184C                __end_of_HighISR 0088                   ___param_bank 000000  
                        ??_abs 001A                          ??_pad 001C                __end_of___aodiv 123C  
                        ?_main 0001                          ?_dtoa 0021                __end_of___aomod 13A0  
                        i2l178 007C                          i2l283 1BC2                          i2l276 1AC6  
                        i2l269 1B44                   vfpfcnvrt@fmt 0046                          _TMR0H 000FD4  
                        _TMR0L 000FD3                          _Light 16AA     __end_of_I2C_2_Master_Start 1C0C  
   __end_of_I2C_2_Master_Write 1BEE                          _clear 00F4                          _flags 00FC  
                        _green 00F6                          _fputc 14EE                          _fputs 193C  
                        pad@fp 0016                          _width 00F0                          _putch 1C0C  
                        main@i 00EF                          dtoa@d 0023                          dtoa@i 0042  
                        dtoa@n 0039                          dtoa@p 0035                          dtoa@s 0041  
                        dtoa@w 0037                          tablat 000FF5                          ttemp5 0056  
                        ttemp6 0059                          ttemp7 005D                          status 000FD8  
                        wtemp8 0056                __end_of_sprintf 175C        __end_of_color_read_Blue 193C  
        _I2C_2_Master_RepStart 1BEE             putCharToRxBuf@byte 0001                ?_color_read_Red 000A  
              __initialization 1A02                   __end_of_main 16AA                   __end_of_dtoa 10B4  
           putCharToTxBuf@byte 0006                         ??_main 004E                         ??_dtoa 002B  
                __activetblptr 000001                         ?_Light 0001                         ?_fputc 0006  
                       ?_fputs 000F                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RD5PPS 000E6F                         _RD6PPS 000E70  
                       i2l2051 1A9C                         i2l2053 1AAC                         i2l2055 1AB0  
                       i2l2063 1B1E                         i2l2151 0012                         i2l2065 1B2E  
                       i2l2153 0038                         i2l2161 005C                         i2l2059 1BAC  
                       i2l2067 1B32                         i2l2163 006C                         i2l2155 0040  
                       i2l2069 1B42                         i2l2165 0070                         i2l2157 0054  
                       i2l2167 0076                         i2l2159 0058                      ??_HighISR 0003  
     __end_of_color_click_init 1A6C                         _RX4PPS 000E15                         _TX4REG 000EE4  
                 vfprintf@cfmt 004C               _getCharFromTxBuf 1A9C                      ??___aodiv 0016  
                    ??___aomod 0016                     _ReturnFLAG 00FE                         _levels 17AC  
                       clear_0 1A08                         clear_1 1A14                         clear_2 1A20  
                       isa$std 000001                         pad@buf 0018                         dtoa@fp 0021  
                       fputc@c 0006              ?_TxBufferedString 0007                         fputs@c 0013  
                       fputs@i 0014                         fputs@s 000F                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
           ??_TxBufferedString 0009                         putch@c 0001               __end_of_vfprintf 17AC  
                    ??_sprintf 004E          __end_of_isDataInTxBuf 1BC4                     __accesstop 0060  
      __end_of__initialization 1A26       __end_of_color_read_Clear 18EC       __end_of_color_read_Green 189C  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 000A  
              _Interrupts_init 1BC4                  __end_of_Light 170A                 __pcstackCOMRAM 0001  
                __end_of_fputc 15B8                  __end_of_fputs 1980                  __end_of_putch 1C0E  
            __end_of_LightInit 1BE2                        ??_Light 0006                        ??_fputc 000A  
                      ??_fputs 0013                        ??_putch 0006                     __pbssBANK0 00F0  
                   __pbssBANK1 0100              _color_writetoaddr 1B6E             ?_color_writetoaddr 0008  
                      ?_levels 0011            ??_color_writetoaddr 0009                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
      __end_of_Interrupts_init 1BD4         color_writetoaddr@value 0008               ??_color_read_Red 000C  
                      _HighISR 0008      __end_of_color_writetoaddr 1B8E             _I2C_2_Master_Start 1C02  
                   _initUSART4 1B8E             _I2C_2_Master_Write 1BE2                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000F                        ___aodiv 10B4  
                      ___aomod 123C            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 006A                   __psmallconst 0E00                        __pcinit 1A02  
                      __ramtop 0E00                        __ptext0 1632                        __ptext1 170A  
                      __ptext2 175C                        __ptext3 13A0                        __ptext4 0E36  
                      __ptext5 15B8                        __ptext6 193C                        __ptext7 14EE  
                      __ptext8 1C0C                        __ptext9 19C2                  _RxBufWriteCnt 0054  
     __end_of_getCharFromTxBuf 1AC8                        main@buf 008B                        _sprintf 170A  
         ??_I2C_2_Master_Start 0007           ??_I2C_2_Master_Write 0007           end_of_initialization 1A26  
                      fputc@fp 0008                        levels@i 0011                        fputs@fp 0011  
            ?_color_click_init 0001             ??_color_click_init 000A              __end_of_vfpfcnvrt 14EE  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0060                     ??_vfprintf 004C  
                    _TRISAbits 000F81                      _TRISDbits 000F84                      _TRISFbits 000F86  
                    _TRISGbits 000F87       color_writetoaddr@address 0009        ??_I2C_2_Master_RepStart 0007  
             ?_Interrupts_init 0001              ?_color_read_Clear 000A                   _EUSART4RXbuf 01A0  
                 _EUSART4TXbuf 0100                   _EUSART4VXbuf 0164              ?_color_read_Green 000A  
                  ?_initUSART4 0001             ??_color_read_Clear 000C             ??_color_read_Green 000C  
                  vfpfcnvrt@ap 0048                    vfpfcnvrt@cp 0068                    vfpfcnvrt@fp 0044  
               __end_of_levels 17FC            color_read_Clear@tmp 000F            start_initialization 1A02  
                    _LightInit 1BD4                    __end_of_abs 1A02                    __end_of_pad 1632  
                _TxBufWriteCnt 0052            color_read_Green@tmp 000F                    vfprintf@fmt 006C  
               _putCharToRxBuf 1B1C                 _putCharToTxBuf 1AF2                       ??_levels 0013  
                  __pbssCOMRAM 004E                  __pcstackBANK0 0060                     ?_LightInit 0001  
             ___aodiv@dividend 0006                       ?_HighISR 0001                      _dtoa$1516 0033  
       __end_of_putCharToRxBuf 1B46         __end_of_putCharToTxBuf 1B1C                      __pintcode 0008  
                     ?___aodiv 0006                       ?___aomod 0006               ___aodiv@quotient 0018  
       TxBufferedString@string 0007           I2C_2_Master_Read@ack 0008                 Light@colorcode 0006  
         I2C_2_Master_Read@tmp 0009                    __smallconst 0E00              _I2C_2_Master_Idle 1B46  
            _I2C_2_Master_Init 1AC8              _I2C_2_Master_Read 1980              _I2C_2_Master_Stop 1BF8  
                 _RxBufReadCnt 0053             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                  _VxBufWriteCnt 0050  
                     ?_sprintf 0070              ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001  
          ??_I2C_2_Master_Idle 0006            ??_I2C_2_Master_Init 0006            ??_I2C_2_Master_Read 0007  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0007                  _isDataInTxBuf 1BAC  
                     _LATFbits 000F7E               _TxBufferedString 1A6C                       _LATGbits 000F7F  
                     _PIE0bits 000E29                       _PIE4bits 000E2D                       i2u114_40 1AAC  
                     i2u114_41 1AA8                       i2u115_40 1BC0                       i2u115_41 1BBA  
                     i2u116_40 1BC2                       i2u117_40 1B2E                       i2u117_41 1B2A  
                     i2u126_40 0024                       i2u126_41 001E                       i2u126_46 0026  
                     i2u127_40 0038                       i2u127_41 0034                       i2u128_40 0054  
                     i2u128_41 0050                       i2u129_40 006C                       i2u129_41 0068  
                     _PIR4bits 000E37                ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8                      _vfpfcnvrt 13A0  
    __end_of_I2C_2_Master_Idle 1B6E      __end_of_I2C_2_Master_Init 1AF2      __end_of_I2C_2_Master_Read 19C2  
    __end_of_I2C_2_Master_Stop 1C02    I2C_2_Master_Write@data_byte 0007              ??_color_read_Blue 000C  
                  ??_LightInit 0006                   _TxBufReadCnt 0051                 ?_isDataInTxBuf 0001  
__end_of_I2C_2_Master_RepStart 1BF8             color_read_Blue@tmp 000F                   ??_initUSART4 0006  
                     __Hrparam 0000                     vfprintf@ap 006E                       __Lrparam 0000  
                   vfprintf@fp 006A                   __Lsmallconst 0E00                     ?_vfpfcnvrt 0044  
              ___aodiv@divisor 000E                ___aodiv@counter 0016                       _charFLAG 00FD  
                   _ANSELDbits 000EA7                     sprintf@fmt 0072                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6             __end_of_initUSART4 1BAC                   _VxBufReadCnt 004F  
                     __ptext10 123C                       __ptext11 10B4                       __ptext20 1B8E  
                     __ptext12 17AC                       __ptext21 1A38                       __ptext13 17FC  
                     __ptext30 1BD4                       __ptext22 1B6E                       __ptext14 184C  
                     __ptext31 1BC4                       __ptext23 1BE2                       __ptext15 189C  
                     __ptext24 1BF8                       __ptext16 18EC                       __ptext33 1B1C  
                     __ptext25 1C02                       __ptext17 1BEE                       __ptext34 1BAC  
                     __ptext26 1B46                       __ptext18 1980                       __ptext35 1A9C  
                     __ptext27 1AC8                       __ptext19 16AA                       __ptext28 1A6C  
                     __ptext29 1AF2                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     _sendFLAG 004E                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 0055                       _vfprintf 175C               ___aomod@dividend 0006  
                   _INTCONbits 000FF2                ??_isDataInTxBuf 0001                       intlevel2 0000  
                    sprintf@ap 007E                     HighISR@reg 0005                ___aomod@divisor 000E  
                  ??_vfpfcnvrt 004A                ___aomod@counter 0016               _color_click_init 1A38  
     __end_of_TxBufferedString 1A9C                       sprintf@f 0080                       sprintf@s 0070  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0017               ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0006  
                 ___aomod@sign 0017  
