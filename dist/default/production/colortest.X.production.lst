

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 01 23:50:02 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Version 2.35
    46                           ; Generated 05/05/2021 GMT
    47                           ; 
    48                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F67K40 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataBANK0
    82   000676                     __pidataBANK0:
    83                           	callstack 0
    84                           
    85                           ;initializer for main@F14612
    86   000676  6C                 	db	108
    87   000677  69                 	db	105
    88   000678  67                 	db	103
    89   000679  68                 	db	104
    90   00067A  74                 	db	116
    91   00067B  20                 	db	32
    92   00067C  62                 	db	98
    93   00067D  6C                 	db	108
    94   00067E  75                 	db	117
    95   00067F  65                 	db	101
    96   000680  20                 	db	32
    97   000681  00                 	db	0
    98                           
    99                           ;initializer for main@F14610
   100   000682  6F                 	db	111
   101   000683  72                 	db	114
   102   000684  61                 	db	97
   103   000685  6E                 	db	110
   104   000686  67                 	db	103
   105   000687  65                 	db	101
   106   000688  20                 	db	32
   107   000689  00                 	db	0
   108                           
   109                           ;initializer for main@F14608
   110   00068A  79                 	db	121
   111   00068B  65                 	db	101
   112   00068C  6C                 	db	108
   113   00068D  6C                 	db	108
   114   00068E  6F                 	db	111
   115   00068F  77                 	db	119
   116   000690  20                 	db	32
   117   000691  00                 	db	0
   118                           
   119                           ;initializer for main@F14604
   120   000692  67                 	db	103
   121   000693  72                 	db	114
   122   000694  65                 	db	101
   123   000695  65                 	db	101
   124   000696  6E                 	db	110
   125   000697  20                 	db	32
   126   000698  00                 	db	0
   127                           
   128                           ;initializer for main@F14598
   129   000699  77                 	db	119
   130   00069A  68                 	db	104
   131   00069B  69                 	db	105
   132   00069C  74                 	db	116
   133   00069D  65                 	db	101
   134   00069E  20                 	db	32
   135   00069F  00                 	db	0
   136                           
   137                           ;initializer for main@F14606
   138   0006A0  70                 	db	112
   139   0006A1  69                 	db	105
   140   0006A2  6E                 	db	110
   141   0006A3  6B                 	db	107
   142   0006A4  20                 	db	32
   143   0006A5  00                 	db	0
   144                           
   145                           ;initializer for main@F14602
   146   0006A6  62                 	db	98
   147   0006A7  6C                 	db	108
   148   0006A8  75                 	db	117
   149   0006A9  65                 	db	101
   150   0006AA  20                 	db	32
   151   0006AB  00                 	db	0
   152                           
   153                           ;initializer for main@F14600
   154   0006AC  72                 	db	114
   155   0006AD  65                 	db	101
   156   0006AE  64                 	db	100
   157   0006AF  20                 	db	32
   158   0006B0  00                 	db	0
   159   000000                     _RC4STAbits	set	3815
   160   000000                     _SP4BRGH	set	3814
   161   000000                     _SP4BRGL	set	3813
   162   000000                     _TX4STAbits	set	3816
   163   000000                     _BAUD4CONbits	set	3817
   164   000000                     _LATAbits	set	3961
   165   000000                     _LATDbits	set	3964
   166   000000                     _SSP2CON2bits	set	3802
   167   000000                     _RX4PPS	set	3605
   168   000000                     _PIE0bits	set	3625
   169   000000                     _PIE4bits	set	3629
   170   000000                     _PIR4bits	set	3639
   171   000000                     _INTCONbits	set	4082
   172   000000                     _RC0PPS	set	3682
   173   000000                     _RC4REG	set	3811
   174   000000                     _TX4REG	set	3812
   175   000000                     _LATFbits	set	3966
   176   000000                     _LATGbits	set	3967
   177   000000                     _TRISAbits	set	3969
   178   000000                     _TRISFbits	set	3974
   179   000000                     _TRISGbits	set	3975
   180   000000                     _TMR0L	set	4051
   181   000000                     _TMR0H	set	4052
   182   000000                     _T0CON0bits	set	4053
   183   000000                     _T0CON1bits	set	4054
   184   000000                     _TRISDbits	set	3972
   185   000000                     _RD5PPS	set	3695
   186   000000                     _ANSELDbits	set	3751
   187   000000                     _SSP2ADD	set	3798
   188   000000                     _SSP2CON1bits	set	3801
   189   000000                     _SSP2CLKPPS	set	3612
   190   000000                     _SSP2DATPPS	set	3613
   191   000000                     _SSP2CON2	set	3802
   192   000000                     _SSP2STAT	set	3800
   193   000000                     _SSP2BUF	set	3797
   194   000000                     _RD6PPS	set	3696
   195                           
   196                           ; #config settings
   197                           
   198                           	psect	cinit
   199   0005F2                     __pcinit:
   200                           	callstack 0
   201   0005F2                     start_initialization:
   202                           	callstack 0
   203   0005F2                     __initialization:
   204                           	callstack 0
   205                           
   206                           ; Initialize objects allocated to BANK0 (59 bytes)
   207                           ; load TBLPTR registers with __pidataBANK0
   208   0005F2  0E76               	movlw	low __pidataBANK0
   209   0005F4  6EF6               	movwf	tblptrl,c
   210   0005F6  0E06               	movlw	high __pidataBANK0
   211   0005F8  6EF7               	movwf	tblptrh,c
   212   0005FA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   213   0005FC  6EF8               	movwf	tblptru,c
   214   0005FE  EE00  F09E         	lfsr	0,__pdataBANK0
   215   000602  EE10 F03B          	lfsr	1,59
   216   000606                     copy_data0:
   217   000606  0009               	tblrd		*+
   218   000608  CFF5 FFEE          	movff	tablat,postinc0
   219   00060C  50E5               	movf	postdec1,w,c
   220   00060E  50E1               	movf	fsr1l,w,c
   221   000610  E1FA               	bnz	copy_data0
   222                           
   223                           ; Clear objects allocated to BANK1 (120 bytes)
   224   000612  EE01  F000         	lfsr	0,__pbssBANK1
   225   000616  0E78               	movlw	120
   226   000618                     clear_0:
   227   000618  6AEE               	clrf	postinc0,c
   228   00061A  06E8               	decf	wreg,f,c
   229   00061C  E1FD               	bnz	clear_0
   230                           
   231                           ; Clear objects allocated to COMRAM (35 bytes)
   232   00061E  EE00  F001         	lfsr	0,__pbssCOMRAM
   233   000622  0E23               	movlw	35
   234   000624                     clear_1:
   235   000624  6AEE               	clrf	postinc0,c
   236   000626  06E8               	decf	wreg,f,c
   237   000628  E1FD               	bnz	clear_1
   238   00062A                     end_of_initialization:
   239                           	callstack 0
   240   00062A                     __end_of__initialization:
   241                           	callstack 0
   242   00062A  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   243   00062C  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   244   00062E  0100               	movlb	0
   245   000630  EF56  F000         	goto	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMRAM
   248   000001                     __pbssCOMRAM:
   249                           	callstack 0
   250   000001                     _EUSART4RXbuf:
   251                           	callstack 0
   252   000001                     	ds	20
   253   000015                     _green:
   254                           	callstack 0
   255   000015                     	ds	2
   256   000017                     _blue:
   257                           	callstack 0
   258   000017                     	ds	2
   259   000019                     _red:
   260                           	callstack 0
   261   000019                     	ds	2
   262   00001B                     _sendFLAG:
   263                           	callstack 0
   264   00001B                     	ds	1
   265   00001C                     _charFLAG:
   266                           	callstack 0
   267   00001C                     	ds	1
   268   00001D                     _VxBufReadCnt:
   269                           	callstack 0
   270   00001D                     	ds	1
   271   00001E                     _VxBufWriteCnt:
   272                           	callstack 0
   273   00001E                     	ds	1
   274   00001F                     _TxBufReadCnt:
   275                           	callstack 0
   276   00001F                     	ds	1
   277   000020                     _TxBufWriteCnt:
   278                           	callstack 0
   279   000020                     	ds	1
   280   000021                     _RxBufReadCnt:
   281                           	callstack 0
   282   000021                     	ds	1
   283   000022                     _RxBufWriteCnt:
   284                           	callstack 0
   285   000022                     	ds	1
   286   000023                     _ReturnFLAG:
   287                           	callstack 0
   288   000023                     	ds	1
   289                           
   290                           	psect	dataBANK0
   291   00009E                     __pdataBANK0:
   292                           	callstack 0
   293   00009E                     main@F14612:
   294                           	callstack 0
   295   00009E                     	ds	12
   296   0000AA                     main@F14610:
   297                           	callstack 0
   298   0000AA                     	ds	8
   299   0000B2                     main@F14608:
   300                           	callstack 0
   301   0000B2                     	ds	8
   302   0000BA                     main@F14604:
   303                           	callstack 0
   304   0000BA                     	ds	7
   305   0000C1                     main@F14598:
   306                           	callstack 0
   307   0000C1                     	ds	7
   308   0000C8                     main@F14606:
   309                           	callstack 0
   310   0000C8                     	ds	6
   311   0000CE                     main@F14602:
   312                           	callstack 0
   313   0000CE                     	ds	6
   314   0000D4                     main@F14600:
   315                           	callstack 0
   316   0000D4                     	ds	5
   317                           
   318                           	psect	bssBANK1
   319   000100                     __pbssBANK1:
   320                           	callstack 0
   321   000100                     _EUSART4VXbuf:
   322                           	callstack 0
   323   000100                     	ds	60
   324   00013C                     _EUSART4TXbuf:
   325                           	callstack 0
   326   00013C                     	ds	60
   327                           
   328                           	psect	cstackBANK0
   329   000060                     __pcstackBANK0:
   330                           	callstack 0
   331   000060                     main@buf_120:
   332                           	callstack 0
   333                           
   334                           ; 12 bytes @ 0x0
   335   000060                     	ds	12
   336   00006C                     main@buf_116:
   337                           	callstack 0
   338                           
   339                           ; 8 bytes @ 0xC
   340   00006C                     	ds	8
   341   000074                     main@buf_118:
   342                           	callstack 0
   343                           
   344                           ; 8 bytes @ 0x14
   345   000074                     	ds	8
   346   00007C                     main@buf_106:
   347                           	callstack 0
   348                           
   349                           ; 7 bytes @ 0x1C
   350   00007C                     	ds	7
   351   000083                     main@buf_112:
   352                           	callstack 0
   353                           
   354                           ; 7 bytes @ 0x23
   355   000083                     	ds	7
   356   00008A                     main@buf_110:
   357                           	callstack 0
   358                           
   359                           ; 6 bytes @ 0x2A
   360   00008A                     	ds	6
   361   000090                     main@buf_114:
   362                           	callstack 0
   363                           
   364                           ; 6 bytes @ 0x30
   365   000090                     	ds	6
   366   000096                     main@buf_108:
   367                           	callstack 0
   368                           
   369                           ; 5 bytes @ 0x36
   370   000096                     	ds	5
   371   00009B                     main@buf:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x3B
   375   00009B                     	ds	1
   376   00009C                     main@j:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x3C
   380   00009C                     	ds	1
   381   00009D                     main@color:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x3D
   385   00009D                     	ds	1
   386                           
   387                           	psect	cstackCOMRAM
   388   000024                     __pcstackCOMRAM:
   389                           	callstack 0
   390   000024                     ??_getCharFromTxBuf:
   391   000024                     putCharToRxBuf@byte:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x0
   395   000024                     	ds	2
   396   000026                     ??_HighISR:
   397                           
   398                           ; 1 bytes @ 0x2
   399   000026                     	ds	3
   400   000029                     HighISR@reg:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x5
   404   000029                     	ds	1
   405   00002A                     ??_I2C_2_Master_Idle:
   406   00002A                     ?___awdiv:
   407                           	callstack 0
   408   00002A                     Light@colorcode:
   409                           	callstack 0
   410   00002A                     putCharToTxBuf@byte:
   411                           	callstack 0
   412   00002A                     ___awdiv@dividend:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x6
   416   00002A                     	ds	1
   417   00002B                     ??_I2C_2_Master_Read:
   418   00002B                     I2C_2_Master_Write@data_byte:
   419                           	callstack 0
   420   00002B                     TxBufferedString@string:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x7
   424   00002B                     	ds	1
   425   00002C                     color_writetoaddr@value:
   426                           	callstack 0
   427   00002C                     I2C_2_Master_Read@ack:
   428                           	callstack 0
   429   00002C                     ___awdiv@divisor:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x8
   433   00002C                     	ds	1
   434   00002D                     color_writetoaddr@address:
   435                           	callstack 0
   436   00002D                     I2C_2_Master_Read@tmp:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x9
   440   00002D                     	ds	1
   441   00002E                     ??_color_click_init:
   442   00002E                     ?_color_read_Red:
   443                           	callstack 0
   444   00002E                     ?_color_read_Blue:
   445                           	callstack 0
   446   00002E                     ?_color_read_Green:
   447                           	callstack 0
   448   00002E                     ___awdiv@counter:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0xA
   452   00002E                     	ds	1
   453   00002F                     ___awdiv@sign:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0xB
   457   00002F                     	ds	1
   458   000030                     ??_color_read_Red:
   459   000030                     ??_color_read_Blue:
   460   000030                     ??_color_read_Green:
   461   000030                     ___awdiv@quotient:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xC
   465   000030                     	ds	3
   466   000033                     color_read_Red@tmp:
   467                           	callstack 0
   468   000033                     color_read_Blue@tmp:
   469                           	callstack 0
   470   000033                     color_read_Green@tmp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xF
   474   000033                     	ds	2
   475   000035                     levels@i:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x11
   479   000035                     	ds	2
   480   000037                     ??_levels:
   481                           
   482                           ; 1 bytes @ 0x13
   483   000037                     	ds	2
   484   000039                     readcard@ratio3:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x15
   488   000039                     	ds	2
   489   00003B                     readcard@ratio1:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x17
   493   00003B                     	ds	2
   494   00003D                     readcard@ratio2:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x19
   498   00003D                     	ds	2
   499   00003F                     readcard@red:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x1B
   503   00003F                     	ds	1
   504   000040                     readcard@blue:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x1C
   508   000040                     	ds	1
   509   000041                     ??_main:
   510                           
   511                           ; 1 bytes @ 0x1D
   512   000041                     	ds	2
   513                           
   514 ;;
   515 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   516 ;;
   517 ;; *************** function _main *****************
   518 ;; Defined at:
   519 ;;		line 44 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  buf            12    0[BANK0 ] unsigned char [12]
   524 ;;  buf             8   20[BANK0 ] unsigned char [8]
   525 ;;  buf             8   12[BANK0 ] unsigned char [8]
   526 ;;  buf             6   48[BANK0 ] unsigned char [6]
   527 ;;  buf             7   35[BANK0 ] unsigned char [7]
   528 ;;  buf             6   42[BANK0 ] unsigned char [6]
   529 ;;  buf             5   54[BANK0 ] unsigned char [5]
   530 ;;  buf             7   28[BANK0 ] unsigned char [7]
   531 ;;  color           1   61[BANK0 ] unsigned char 
   532 ;;  a               1    0        unsigned char 
   533 ;;  j               1   60[BANK0 ] unsigned char 
   534 ;;  buf             1   59[BANK0 ] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   545 ;;      Locals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   547 ;;      Totals:         2      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   548 ;;Total ram usage:       64 bytes
   549 ;; Hardware stack levels required when called: 7
   550 ;; This function calls:
   551 ;;		_Interrupts_init
   552 ;;		_Light
   553 ;;		_LightInit
   554 ;;		_Timer0_init
   555 ;;		_TxBufferedString
   556 ;;		_color_click_init
   557 ;;		_initUSART4
   558 ;;		_readcard
   559 ;; This function is called by:
   560 ;;		Startup code after reset
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text0
   565   0000AC                     __ptext0:
   566                           	callstack 0
   567   0000AC                     _main:
   568                           	callstack 24
   569   0000AC                     
   570                           ;main.c: 45:     Timer0_init();
   571   0000AC  EC04  F004         	call	_Timer0_init	;wreg free
   572                           
   573                           ;main.c: 46:     initUSART4();
   574   0000B0  EC14  F004         	call	_initUSART4	;wreg free
   575   0000B4                     
   576                           ;main.c: 47:     Interrupts_init();
   577   0000B4  EC2F  F004         	call	_Interrupts_init	;wreg free
   578   0000B8                     
   579                           ;main.c: 49:     color_click_init();
   580   0000B8  EC59  F003         	call	_color_click_init	;wreg free
   581   0000BC                     
   582                           ;main.c: 50:     LightInit();
   583   0000BC  EC37  F004         	call	_LightInit	;wreg free
   584   0000C0                     l1782:
   585                           
   586                           ;main.c: 54:         unsigned char color = readcard();
   587   0000C0  EC1C  F001         	call	_readcard	;wreg free
   588   0000C4  0100               	movlb	0	; () banked
   589   0000C6  6F9D               	movwf	main@color& (0+255),b
   590   0000C8                     
   591                           ; BSR set to: 0
   592                           ;main.c: 56:         if(color==0){unsigned char buf[]="white ";}
   593   0000C8  519D               	movf	main@color& (0+255),w,b
   594   0000CA  A4D8               	btfss	status,2,c
   595   0000CC  EF6A  F000         	goto	u841
   596   0000D0  EF6C  F000         	goto	u840
   597   0000D4                     u841:
   598   0000D4  EF75  F000         	goto	l1790
   599   0000D8                     u840:
   600   0000D8                     
   601                           ; BSR set to: 0
   602   0000D8  EE20  F0C1         	lfsr	2,main@F14598
   603   0000DC  EE10  F07C         	lfsr	1,main@buf_106
   604   0000E0  0E06               	movlw	6
   605   0000E2                     u851:
   606   0000E2  CFDB FFE3          	movff	plusw2,plusw1
   607   0000E6  06E8               	decf	wreg,f,c
   608   0000E8  E2FC               	bc	u851
   609   0000EA                     l1790:
   610                           
   611                           ; BSR set to: 0
   612                           ;main.c: 57:         if(color==1){unsigned char buf[]="red ";}
   613   0000EA  059D               	decf	main@color& (0+255),w,b
   614   0000EC  A4D8               	btfss	status,2,c
   615   0000EE  EF7B  F000         	goto	u861
   616   0000F2  EF7D  F000         	goto	u860
   617   0000F6                     u861:
   618   0000F6  EF86  F000         	goto	l1794
   619   0000FA                     u860:
   620   0000FA                     
   621                           ; BSR set to: 0
   622   0000FA  EE20  F0D4         	lfsr	2,main@F14600
   623   0000FE  EE10  F096         	lfsr	1,main@buf_108
   624   000102  0E04               	movlw	4
   625   000104                     u871:
   626   000104  CFDB FFE3          	movff	plusw2,plusw1
   627   000108  06E8               	decf	wreg,f,c
   628   00010A  E2FC               	bc	u871
   629   00010C                     l1794:
   630                           
   631                           ; BSR set to: 0
   632                           ;main.c: 58:         if(color==2){unsigned char buf[]="blue ";}
   633   00010C  0E02               	movlw	2
   634   00010E  199D               	xorwf	main@color& (0+255),w,b
   635   000110  A4D8               	btfss	status,2,c
   636   000112  EF8D  F000         	goto	u881
   637   000116  EF8F  F000         	goto	u880
   638   00011A                     u881:
   639   00011A  EF98  F000         	goto	l1798
   640   00011E                     u880:
   641   00011E                     
   642                           ; BSR set to: 0
   643   00011E  EE20  F0CE         	lfsr	2,main@F14602
   644   000122  EE10  F08A         	lfsr	1,main@buf_110
   645   000126  0E05               	movlw	5
   646   000128                     u891:
   647   000128  CFDB FFE3          	movff	plusw2,plusw1
   648   00012C  06E8               	decf	wreg,f,c
   649   00012E  E2FC               	bc	u891
   650   000130                     l1798:
   651                           
   652                           ; BSR set to: 0
   653                           ;main.c: 59:         if(color==3){unsigned char buf[]="green ";}
   654   000130  0E03               	movlw	3
   655   000132  199D               	xorwf	main@color& (0+255),w,b
   656   000134  A4D8               	btfss	status,2,c
   657   000136  EF9F  F000         	goto	u901
   658   00013A  EFA1  F000         	goto	u900
   659   00013E                     u901:
   660   00013E  EFAA  F000         	goto	l1802
   661   000142                     u900:
   662   000142                     
   663                           ; BSR set to: 0
   664   000142  EE20  F0BA         	lfsr	2,main@F14604
   665   000146  EE10  F083         	lfsr	1,main@buf_112
   666   00014A  0E06               	movlw	6
   667   00014C                     u911:
   668   00014C  CFDB FFE3          	movff	plusw2,plusw1
   669   000150  06E8               	decf	wreg,f,c
   670   000152  E2FC               	bc	u911
   671   000154                     l1802:
   672                           
   673                           ; BSR set to: 0
   674                           ;main.c: 60:         if(color==4){unsigned char buf[]="pink ";}
   675   000154  0E04               	movlw	4
   676   000156  199D               	xorwf	main@color& (0+255),w,b
   677   000158  A4D8               	btfss	status,2,c
   678   00015A  EFB1  F000         	goto	u921
   679   00015E  EFB3  F000         	goto	u920
   680   000162                     u921:
   681   000162  EFBC  F000         	goto	l1806
   682   000166                     u920:
   683   000166                     
   684                           ; BSR set to: 0
   685   000166  EE20  F0C8         	lfsr	2,main@F14606
   686   00016A  EE10  F090         	lfsr	1,main@buf_114
   687   00016E  0E05               	movlw	5
   688   000170                     u931:
   689   000170  CFDB FFE3          	movff	plusw2,plusw1
   690   000174  06E8               	decf	wreg,f,c
   691   000176  E2FC               	bc	u931
   692   000178                     l1806:
   693                           
   694                           ; BSR set to: 0
   695                           ;main.c: 61:         if(color==5){unsigned char buf[]="yellow ";}
   696   000178  0E05               	movlw	5
   697   00017A  199D               	xorwf	main@color& (0+255),w,b
   698   00017C  A4D8               	btfss	status,2,c
   699   00017E  EFC3  F000         	goto	u941
   700   000182  EFC5  F000         	goto	u940
   701   000186                     u941:
   702   000186  EFCE  F000         	goto	l1810
   703   00018A                     u940:
   704   00018A                     
   705                           ; BSR set to: 0
   706   00018A  EE20  F0B2         	lfsr	2,main@F14608
   707   00018E  EE10  F06C         	lfsr	1,main@buf_116
   708   000192  0E07               	movlw	7
   709   000194                     u951:
   710   000194  CFDB FFE3          	movff	plusw2,plusw1
   711   000198  06E8               	decf	wreg,f,c
   712   00019A  E2FC               	bc	u951
   713   00019C                     l1810:
   714                           
   715                           ; BSR set to: 0
   716                           ;main.c: 62:         if(color==6){unsigned char buf[]="orange ";}
   717   00019C  0E06               	movlw	6
   718   00019E  199D               	xorwf	main@color& (0+255),w,b
   719   0001A0  A4D8               	btfss	status,2,c
   720   0001A2  EFD5  F000         	goto	u961
   721   0001A6  EFD7  F000         	goto	u960
   722   0001AA                     u961:
   723   0001AA  EFE0  F000         	goto	l1814
   724   0001AE                     u960:
   725   0001AE                     
   726                           ; BSR set to: 0
   727   0001AE  EE20  F0AA         	lfsr	2,main@F14610
   728   0001B2  EE10  F074         	lfsr	1,main@buf_118
   729   0001B6  0E07               	movlw	7
   730   0001B8                     u971:
   731   0001B8  CFDB FFE3          	movff	plusw2,plusw1
   732   0001BC  06E8               	decf	wreg,f,c
   733   0001BE  E2FC               	bc	u971
   734   0001C0                     l1814:
   735                           
   736                           ; BSR set to: 0
   737                           ;main.c: 63:         if(color==7){unsigned char buf[]="light blue ";}
   738   0001C0  0E07               	movlw	7
   739   0001C2  199D               	xorwf	main@color& (0+255),w,b
   740   0001C4  A4D8               	btfss	status,2,c
   741   0001C6  EFE7  F000         	goto	u981
   742   0001CA  EFE9  F000         	goto	u980
   743   0001CE                     u981:
   744   0001CE  EFF2  F000         	goto	l1818
   745   0001D2                     u980:
   746   0001D2                     
   747                           ; BSR set to: 0
   748   0001D2  EE20  F09E         	lfsr	2,main@F14612
   749   0001D6  EE10  F060         	lfsr	1,main@buf_120
   750   0001DA  0E0B               	movlw	11
   751   0001DC                     u991:
   752   0001DC  CFDB FFE3          	movff	plusw2,plusw1
   753   0001E0  06E8               	decf	wreg,f,c
   754   0001E2  E2FC               	bc	u991
   755   0001E4                     l1818:
   756                           
   757                           ; BSR set to: 0
   758                           ;main.c: 64:         TxBufferedString(&buf);
   759   0001E4  0E9B               	movlw	low main@buf
   760   0001E6  6E2B               	movwf	TxBufferedString@string^0,c
   761   0001E8  0E00               	movlw	high main@buf
   762   0001EA  6E2C               	movwf	(TxBufferedString@string+1)^0,c
   763   0001EC  EC73  F003         	call	_TxBufferedString	;wreg free
   764   0001F0                     
   765                           ;main.c: 65:         Light(0);
   766   0001F0  0E00               	movlw	0
   767   0001F2  EC2F  F002         	call	_Light
   768   0001F6                     
   769                           ;main.c: 66:         sendFLAG=1;
   770   0001F6  0E01               	movlw	1
   771   0001F8  6E1B               	movwf	_sendFLAG^0,c
   772   0001FA                     
   773                           ;main.c: 67:         PIE4bits.TX4IE=1;
   774   0001FA  010E               	movlb	14	; () banked
   775   0001FC  852D               	bsf	45,2,b	;volatile
   776   0001FE                     
   777                           ; BSR set to: 14
   778                           ;main.c: 68:         for (j=0;j<3;j++){_delay((unsigned long)((900)*(64000000/4000.0)));
      +                          }
   779   0001FE  0E00               	movlw	0
   780   000200  0100               	movlb	0	; () banked
   781   000202  6F9C               	movwf	main@j& (0+255),b
   782   000204                     l1832:
   783                           
   784                           ; BSR set to: 0
   785   000204  0E4A               	movlw	74
   786   000206  6E42               	movwf	(??_main+1)^0,c
   787   000208  0E0E               	movlw	14
   788   00020A  6E41               	movwf	??_main^0,c
   789   00020C  0E19               	movlw	25
   790   00020E                     u1097:
   791   00020E  2EE8               	decfsz	wreg,f,c
   792   000210  D7FE               	bra	u1097
   793   000212  2E41               	decfsz	??_main^0,f,c
   794   000214  D7FC               	bra	u1097
   795   000216  2E42               	decfsz	(??_main+1)^0,f,c
   796   000218  D7FA               	bra	u1097
   797   00021A  F000               	nop	
   798   00021C  0100               	movlb	0	; () banked
   799   00021E  2B9C               	incf	main@j& (0+255),f,b
   800   000220  0E02               	movlw	2
   801   000222  659C               	cpfsgt	main@j& (0+255),b
   802   000224  EF16  F001         	goto	u1001
   803   000228  EF18  F001         	goto	u1000
   804   00022C                     u1001:
   805   00022C  EF02  F001         	goto	l1832
   806   000230                     u1000:
   807   000230  EF60  F000         	goto	l1782
   808   000234  EF54  F000         	goto	start
   809   000238                     __end_of_main:
   810                           	callstack 0
   811                           
   812 ;; *************** function _readcard *****************
   813 ;; Defined at:
   814 ;;		line 20 in file "card.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  ratio2          2   25[COMRAM] unsigned int 
   819 ;;  ratio1          2   23[COMRAM] unsigned int 
   820 ;;  ratio3          2   21[COMRAM] unsigned int 
   821 ;;  green           1    0        unsigned char 
   822 ;;  blue            1   28[COMRAM] unsigned char 
   823 ;;  red             1   27[COMRAM] unsigned char 
   824 ;;  lightblue       1    0        unsigned char 
   825 ;;  orange          1    0        unsigned char 
   826 ;;  yellow          1    0        unsigned char 
   827 ;;  pink            1    0        unsigned char 
   828 ;;  white           1    0        unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      unsigned char 
   831 ;; Registers used:
   832 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   839 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   841 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   842 ;;Total ram usage:        8 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 6
   845 ;; This function calls:
   846 ;;		___awdiv
   847 ;;		_levels
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text1
   854   000238                     __ptext1:
   855                           	callstack 0
   856   000238                     _readcard:
   857                           	callstack 24
   858   000238                     
   859                           ;card.c: 21:     levels(0);
   860   000238  0E00               	movlw	0
   861   00023A  6E36               	movwf	(levels@i+1)^0,c
   862   00023C  0E00               	movlw	0
   863   00023E  6E35               	movwf	levels@i^0,c
   864   000240  ECD7  F002         	call	_levels	;wreg free
   865   000244                     
   866                           ;card.c: 23:     unsigned char red=1;
   867   000244  0E01               	movlw	1
   868   000246  6E3F               	movwf	readcard@red^0,c
   869   000248                     
   870                           ;card.c: 24:     unsigned char blue=2;
   871   000248  0E02               	movlw	2
   872   00024A  6E40               	movwf	readcard@blue^0,c
   873   00024C                     
   874                           ;card.c: 31:     unsigned int ratio1=100*red/blue;
   875   00024C  503F               	movf	readcard@red^0,w,c
   876   00024E  0D64               	mullw	100
   877   000250  CFF3 F02A          	movff	prodl,___awdiv@dividend
   878   000254  CFF4 F02B          	movff	prodh,___awdiv@dividend+1
   879   000258  C040  F02C         	movff	readcard@blue,___awdiv@divisor
   880   00025C  6A2D               	clrf	(___awdiv@divisor+1)^0,c
   881   00025E  ECCD  F001         	call	___awdiv	;wreg free
   882   000262  C02A  F03B         	movff	?___awdiv,readcard@ratio1
   883   000266  C02B  F03C         	movff	?___awdiv+1,readcard@ratio1+1
   884   00026A                     
   885                           ;card.c: 32:     unsigned int ratio2=100*red/green;
   886   00026A  503F               	movf	readcard@red^0,w,c
   887   00026C  0D64               	mullw	100
   888   00026E  CFF3 F02A          	movff	prodl,___awdiv@dividend
   889   000272  CFF4 F02B          	movff	prodh,___awdiv@dividend+1
   890   000276  0E00               	movlw	0
   891   000278  6E2D               	movwf	(___awdiv@divisor+1)^0,c
   892   00027A  0E03               	movlw	3
   893   00027C  6E2C               	movwf	___awdiv@divisor^0,c
   894   00027E  ECCD  F001         	call	___awdiv	;wreg free
   895   000282  C02A  F03D         	movff	?___awdiv,readcard@ratio2
   896   000286  C02B  F03E         	movff	?___awdiv+1,readcard@ratio2+1
   897   00028A                     
   898                           ;card.c: 33:     unsigned int ratio3=100*blue/green;
   899   00028A  5040               	movf	readcard@blue^0,w,c
   900   00028C  0D64               	mullw	100
   901   00028E  CFF3 F02A          	movff	prodl,___awdiv@dividend
   902   000292  CFF4 F02B          	movff	prodh,___awdiv@dividend+1
   903   000296  0E00               	movlw	0
   904   000298  6E2D               	movwf	(___awdiv@divisor+1)^0,c
   905   00029A  0E03               	movlw	3
   906   00029C  6E2C               	movwf	___awdiv@divisor^0,c
   907   00029E  ECCD  F001         	call	___awdiv	;wreg free
   908   0002A2  C02A  F039         	movff	?___awdiv,readcard@ratio3
   909   0002A6  C02B  F03A         	movff	?___awdiv+1,readcard@ratio3+1
   910   0002AA                     
   911                           ;card.c: 36:     if ((ratio1>80 & ratio1<125) & (ratio2>80 & ratio2<125) & (ratio3>80 & 
      +                          ratio3<125)){
   912   0002AA  503C               	movf	(readcard@ratio1+1)^0,w,c
   913   0002AC  E109               	bnz	u740
   914   0002AE  0E51               	movlw	81
   915   0002B0  5C3B               	subwf	readcard@ratio1^0,w,c
   916   0002B2  A0D8               	btfss	status,0,c
   917   0002B4  EF5E  F001         	goto	u741
   918   0002B8  EF60  F001         	goto	u740
   919   0002BC                     u741:
   920   0002BC  EF9A  F001         	goto	l1722
   921   0002C0                     u740:
   922   0002C0  503C               	movf	(readcard@ratio1+1)^0,w,c
   923   0002C2  E107               	bnz	u751
   924   0002C4  0E7D               	movlw	125
   925   0002C6  5C3B               	subwf	readcard@ratio1^0,w,c
   926   0002C8  B0D8               	btfsc	status,0,c
   927   0002CA  EF69  F001         	goto	u751
   928   0002CE  EF6B  F001         	goto	u750
   929   0002D2                     u751:
   930   0002D2  EF9A  F001         	goto	l1722
   931   0002D6                     u750:
   932   0002D6  503E               	movf	(readcard@ratio2+1)^0,w,c
   933   0002D8  E109               	bnz	u760
   934   0002DA  0E51               	movlw	81
   935   0002DC  5C3D               	subwf	readcard@ratio2^0,w,c
   936   0002DE  A0D8               	btfss	status,0,c
   937   0002E0  EF74  F001         	goto	u761
   938   0002E4  EF76  F001         	goto	u760
   939   0002E8                     u761:
   940   0002E8  EF9A  F001         	goto	l1722
   941   0002EC                     u760:
   942   0002EC  503E               	movf	(readcard@ratio2+1)^0,w,c
   943   0002EE  E107               	bnz	u771
   944   0002F0  0E7D               	movlw	125
   945   0002F2  5C3D               	subwf	readcard@ratio2^0,w,c
   946   0002F4  B0D8               	btfsc	status,0,c
   947   0002F6  EF7F  F001         	goto	u771
   948   0002FA  EF81  F001         	goto	u770
   949   0002FE                     u771:
   950   0002FE  EF9A  F001         	goto	l1722
   951   000302                     u770:
   952   000302  503A               	movf	(readcard@ratio3+1)^0,w,c
   953   000304  E109               	bnz	u780
   954   000306  0E51               	movlw	81
   955   000308  5C39               	subwf	readcard@ratio3^0,w,c
   956   00030A  A0D8               	btfss	status,0,c
   957   00030C  EF8A  F001         	goto	u781
   958   000310  EF8C  F001         	goto	u780
   959   000314                     u781:
   960   000314  EF9A  F001         	goto	l1722
   961   000318                     u780:
   962   000318  503A               	movf	(readcard@ratio3+1)^0,w,c
   963   00031A  E107               	bnz	u791
   964   00031C  0E7D               	movlw	125
   965   00031E  5C39               	subwf	readcard@ratio3^0,w,c
   966   000320  B0D8               	btfsc	status,0,c
   967   000322  EF95  F001         	goto	u791
   968   000326  EF97  F001         	goto	u790
   969   00032A                     u791:
   970   00032A  EF9A  F001         	goto	l1722
   971   00032E                     u790:
   972   00032E                     
   973                           ;card.c: 38:         return blue;
   974   00032E  5040               	movf	readcard@blue^0,w,c
   975   000330  EFCC  F001         	goto	l143
   976   000334                     l1722:
   977                           
   978                           ;card.c: 41:     if (ratio1>160 & ratio2>160){
   979   000334  503C               	movf	(readcard@ratio1+1)^0,w,c
   980   000336  E109               	bnz	u800
   981   000338  0EA1               	movlw	161
   982   00033A  5C3B               	subwf	readcard@ratio1^0,w,c
   983   00033C  A0D8               	btfss	status,0,c
   984   00033E  EFA3  F001         	goto	u801
   985   000342  EFA5  F001         	goto	u800
   986   000346                     u801:
   987   000346  EFC5  F001         	goto	l1748
   988   00034A                     u800:
   989   00034A  503E               	movf	(readcard@ratio2+1)^0,w,c
   990   00034C  E109               	bnz	u810
   991   00034E  0EA1               	movlw	161
   992   000350  5C3D               	subwf	readcard@ratio2^0,w,c
   993   000352  A0D8               	btfss	status,0,c
   994   000354  EFAE  F001         	goto	u811
   995   000358  EFB0  F001         	goto	u810
   996   00035C                     u811:
   997   00035C  EFC5  F001         	goto	l1748
   998   000360                     u810:
   999   000360                     
  1000                           ;card.c: 43:         levels(2);
  1001   000360  0E00               	movlw	0
  1002   000362  6E36               	movwf	(levels@i+1)^0,c
  1003   000364  0E02               	movlw	2
  1004   000366  6E35               	movwf	levels@i^0,c
  1005   000368  ECD7  F002         	call	_levels	;wreg free
  1006   00036C                     
  1007                           ;card.c: 46:         levels(3);
  1008   00036C  0E00               	movlw	0
  1009   00036E  6E36               	movwf	(levels@i+1)^0,c
  1010   000370  0E03               	movlw	3
  1011   000372  6E35               	movwf	levels@i^0,c
  1012   000374  ECD7  F002         	call	_levels	;wreg free
  1013   000378                     
  1014                           ;card.c: 49:         levels(3);
  1015   000378  0E00               	movlw	0
  1016   00037A  6E36               	movwf	(levels@i+1)^0,c
  1017   00037C  0E03               	movlw	3
  1018   00037E  6E35               	movwf	levels@i^0,c
  1019   000380  ECD7  F002         	call	_levels	;wreg free
  1020   000384                     
  1021                           ;card.c: 53:         return red;
  1022   000384  503F               	movf	readcard@red^0,w,c
  1023   000386  EFCC  F001         	goto	l143
  1024   00038A                     l1748:
  1025                           
  1026                           ;card.c: 56:     levels(1);
  1027   00038A  0E00               	movlw	0
  1028   00038C  6E36               	movwf	(levels@i+1)^0,c
  1029   00038E  0E01               	movlw	1
  1030   000390  6E35               	movwf	levels@i^0,c
  1031   000392  ECD7  F002         	call	_levels	;wreg free
  1032   000396                     
  1033                           ;card.c: 58:     return green;
  1034   000396  0E03               	movlw	3
  1035   000398                     l143:
  1036   000398  0012               	return		;funcret
  1037   00039A                     __end_of_readcard:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function _levels *****************
  1041 ;; Defined at:
  1042 ;;		line 61 in file "card.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  i               2   17[COMRAM] int 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1059 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1060 ;;Total ram usage:        4 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; Hardware stack levels required when called: 5
  1063 ;; This function calls:
  1064 ;;		_Light
  1065 ;;		_color_read_Blue
  1066 ;;		_color_read_Green
  1067 ;;		_color_read_Red
  1068 ;; This function is called by:
  1069 ;;		_readcard
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text2
  1074   0005AE                     __ptext2:
  1075                           	callstack 0
  1076   0005AE                     _levels:
  1077                           	callstack 24
  1078   0005AE                     
  1079                           ;card.c: 62:         Light(i);
  1080   0005AE  5035               	movf	levels@i^0,w,c
  1081   0005B0  EC2F  F002         	call	_Light
  1082   0005B4                     
  1083                           ;card.c: 63:         _delay((unsigned long)((900)*(64000000/4000.0)));
  1084   0005B4  0E4A               	movlw	74
  1085   0005B6  6E38               	movwf	(??_levels+1)^0,c
  1086   0005B8  0E0E               	movlw	14
  1087   0005BA  6E37               	movwf	??_levels^0,c
  1088   0005BC  0E19               	movlw	25
  1089   0005BE                     u1107:
  1090   0005BE  2EE8               	decfsz	wreg,f,c
  1091   0005C0  D7FE               	bra	u1107
  1092   0005C2  2E37               	decfsz	??_levels^0,f,c
  1093   0005C4  D7FC               	bra	u1107
  1094   0005C6  2E38               	decfsz	(??_levels+1)^0,f,c
  1095   0005C8  D7FA               	bra	u1107
  1096   0005CA  F000               	nop	
  1097   0005CC                     
  1098                           ;card.c: 64:         red = color_read_Red();
  1099   0005CC  EC5F  F002         	call	_color_read_Red	;wreg free
  1100   0005D0  C02E  F019         	movff	?_color_read_Red,_red
  1101   0005D4  C02F  F01A         	movff	?_color_read_Red+1,_red+1
  1102   0005D8                     
  1103                           ;card.c: 65:         blue = color_read_Blue();
  1104   0005D8  ECAF  F002         	call	_color_read_Blue	;wreg free
  1105   0005DC  C02E  F017         	movff	?_color_read_Blue,_blue
  1106   0005E0  C02F  F018         	movff	?_color_read_Blue+1,_blue+1
  1107   0005E4                     
  1108                           ;card.c: 66:         green = color_read_Green();
  1109   0005E4  EC87  F002         	call	_color_read_Green	;wreg free
  1110   0005E8  C02E  F015         	movff	?_color_read_Green,_green
  1111   0005EC  C02F  F016         	movff	?_color_read_Green+1,_green+1
  1112   0005F0  0012               	return		;funcret
  1113   0005F2                     __end_of_levels:
  1114                           	callstack 0
  1115                           
  1116 ;; *************** function _color_read_Red *****************
  1117 ;; Defined at:
  1118 ;;		line 29 in file "color.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  tmp             2   15[COMRAM] unsigned int 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2   10[COMRAM] unsigned int 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1135 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1136 ;;Total ram usage:        7 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 4
  1139 ;; This function calls:
  1140 ;;		_I2C_2_Master_Read
  1141 ;;		_I2C_2_Master_RepStart
  1142 ;;		_I2C_2_Master_Start
  1143 ;;		_I2C_2_Master_Stop
  1144 ;;		_I2C_2_Master_Write
  1145 ;; This function is called by:
  1146 ;;		_levels
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text3
  1151   0004BE                     __ptext3:
  1152                           	callstack 0
  1153   0004BE                     _color_read_Red:
  1154                           	callstack 24
  1155   0004BE                     
  1156                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  1157   0004BE  EC4E  F004         	call	_I2C_2_Master_Start	;wreg free
  1158                           
  1159                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  1160   0004C2  0E52               	movlw	82
  1161   0004C4  EC3E  F004         	call	_I2C_2_Master_Write
  1162                           
  1163                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  1164   0004C8  0EB6               	movlw	182
  1165   0004CA  EC3E  F004         	call	_I2C_2_Master_Write
  1166                           
  1167                           ;color.c: 35:  I2C_2_Master_RepStart();
  1168   0004CE  EC44  F004         	call	_I2C_2_Master_RepStart	;wreg free
  1169                           
  1170                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  1171   0004D2  0E53               	movlw	83
  1172   0004D4  EC3E  F004         	call	_I2C_2_Master_Write
  1173                           
  1174                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  1175   0004D8  0E01               	movlw	1
  1176   0004DA  EC1A  F003         	call	_I2C_2_Master_Read
  1177   0004DE  6E30               	movwf	??_color_read_Red^0,c
  1178   0004E0  5030               	movf	??_color_read_Red^0,w,c
  1179   0004E2  6E33               	movwf	color_read_Red@tmp^0,c
  1180   0004E4  6A34               	clrf	(color_read_Red@tmp+1)^0,c
  1181                           
  1182                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1183   0004E6  0E00               	movlw	0
  1184   0004E8  EC1A  F003         	call	_I2C_2_Master_Read
  1185   0004EC  6E30               	movwf	??_color_read_Red^0,c
  1186   0004EE  5030               	movf	??_color_read_Red^0,w,c
  1187   0004F0  6E32               	movwf	(??_color_read_Red+2)^0,c
  1188   0004F2  6A31               	clrf	(??_color_read_Red+1)^0,c
  1189   0004F4  5033               	movf	color_read_Red@tmp^0,w,c
  1190   0004F6  1031               	iorwf	(??_color_read_Red+1)^0,w,c
  1191   0004F8  6E33               	movwf	color_read_Red@tmp^0,c
  1192   0004FA  5034               	movf	(color_read_Red@tmp+1)^0,w,c
  1193   0004FC  1032               	iorwf	(??_color_read_Red+2)^0,w,c
  1194   0004FE  6E34               	movwf	(color_read_Red@tmp+1)^0,c
  1195                           
  1196                           ;color.c: 39:  I2C_2_Master_Stop();
  1197   000500  EC49  F004         	call	_I2C_2_Master_Stop	;wreg free
  1198   000504                     
  1199                           ;color.c: 40:  return tmp;
  1200   000504  C033  F02E         	movff	color_read_Red@tmp,?_color_read_Red
  1201   000508  C034  F02F         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1202   00050C  0012               	return		;funcret
  1203   00050E                     __end_of_color_read_Red:
  1204                           	callstack 0
  1205                           
  1206 ;; *************** function _color_read_Green *****************
  1207 ;; Defined at:
  1208 ;;		line 59 in file "color.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  tmp             2   15[COMRAM] unsigned int 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  2   10[COMRAM] unsigned int 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2, status,0, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1224 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1225 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1226 ;;Total ram usage:        7 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; Hardware stack levels required when called: 4
  1229 ;; This function calls:
  1230 ;;		_I2C_2_Master_Read
  1231 ;;		_I2C_2_Master_RepStart
  1232 ;;		_I2C_2_Master_Start
  1233 ;;		_I2C_2_Master_Stop
  1234 ;;		_I2C_2_Master_Write
  1235 ;; This function is called by:
  1236 ;;		_levels
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text4
  1241   00050E                     __ptext4:
  1242                           	callstack 0
  1243   00050E                     _color_read_Green:
  1244                           	callstack 24
  1245   00050E                     
  1246                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  1247   00050E  EC4E  F004         	call	_I2C_2_Master_Start	;wreg free
  1248                           
  1249                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  1250   000512  0E52               	movlw	82
  1251   000514  EC3E  F004         	call	_I2C_2_Master_Write
  1252                           
  1253                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x18);
  1254   000518  0EB8               	movlw	184
  1255   00051A  EC3E  F004         	call	_I2C_2_Master_Write
  1256                           
  1257                           ;color.c: 65:  I2C_2_Master_RepStart();
  1258   00051E  EC44  F004         	call	_I2C_2_Master_RepStart	;wreg free
  1259                           
  1260                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  1261   000522  0E53               	movlw	83
  1262   000524  EC3E  F004         	call	_I2C_2_Master_Write
  1263                           
  1264                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  1265   000528  0E01               	movlw	1
  1266   00052A  EC1A  F003         	call	_I2C_2_Master_Read
  1267   00052E  6E30               	movwf	??_color_read_Green^0,c
  1268   000530  5030               	movf	??_color_read_Green^0,w,c
  1269   000532  6E33               	movwf	color_read_Green@tmp^0,c
  1270   000534  6A34               	clrf	(color_read_Green@tmp+1)^0,c
  1271                           
  1272                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1273   000536  0E00               	movlw	0
  1274   000538  EC1A  F003         	call	_I2C_2_Master_Read
  1275   00053C  6E30               	movwf	??_color_read_Green^0,c
  1276   00053E  5030               	movf	??_color_read_Green^0,w,c
  1277   000540  6E32               	movwf	(??_color_read_Green+2)^0,c
  1278   000542  6A31               	clrf	(??_color_read_Green+1)^0,c
  1279   000544  5033               	movf	color_read_Green@tmp^0,w,c
  1280   000546  1031               	iorwf	(??_color_read_Green+1)^0,w,c
  1281   000548  6E33               	movwf	color_read_Green@tmp^0,c
  1282   00054A  5034               	movf	(color_read_Green@tmp+1)^0,w,c
  1283   00054C  1032               	iorwf	(??_color_read_Green+2)^0,w,c
  1284   00054E  6E34               	movwf	(color_read_Green@tmp+1)^0,c
  1285                           
  1286                           ;color.c: 69:  I2C_2_Master_Stop();
  1287   000550  EC49  F004         	call	_I2C_2_Master_Stop	;wreg free
  1288   000554                     
  1289                           ;color.c: 70:  return tmp;
  1290   000554  C033  F02E         	movff	color_read_Green@tmp,?_color_read_Green
  1291   000558  C034  F02F         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1292   00055C  0012               	return		;funcret
  1293   00055E                     __end_of_color_read_Green:
  1294                           	callstack 0
  1295                           
  1296 ;; *************** function _color_read_Blue *****************
  1297 ;; Defined at:
  1298 ;;		line 45 in file "color.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  tmp             2   15[COMRAM] unsigned int 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2   10[COMRAM] unsigned int 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1314 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1315 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1316 ;;Total ram usage:        7 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 4
  1319 ;; This function calls:
  1320 ;;		_I2C_2_Master_Read
  1321 ;;		_I2C_2_Master_RepStart
  1322 ;;		_I2C_2_Master_Start
  1323 ;;		_I2C_2_Master_Stop
  1324 ;;		_I2C_2_Master_Write
  1325 ;; This function is called by:
  1326 ;;		_levels
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text5
  1331   00055E                     __ptext5:
  1332                           	callstack 0
  1333   00055E                     _color_read_Blue:
  1334                           	callstack 24
  1335   00055E                     
  1336                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  1337   00055E  EC4E  F004         	call	_I2C_2_Master_Start	;wreg free
  1338                           
  1339                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  1340   000562  0E52               	movlw	82
  1341   000564  EC3E  F004         	call	_I2C_2_Master_Write
  1342                           
  1343                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x1A);
  1344   000568  0EBA               	movlw	186
  1345   00056A  EC3E  F004         	call	_I2C_2_Master_Write
  1346                           
  1347                           ;color.c: 51:  I2C_2_Master_RepStart();
  1348   00056E  EC44  F004         	call	_I2C_2_Master_RepStart	;wreg free
  1349                           
  1350                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  1351   000572  0E53               	movlw	83
  1352   000574  EC3E  F004         	call	_I2C_2_Master_Write
  1353                           
  1354                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  1355   000578  0E01               	movlw	1
  1356   00057A  EC1A  F003         	call	_I2C_2_Master_Read
  1357   00057E  6E30               	movwf	??_color_read_Blue^0,c
  1358   000580  5030               	movf	??_color_read_Blue^0,w,c
  1359   000582  6E33               	movwf	color_read_Blue@tmp^0,c
  1360   000584  6A34               	clrf	(color_read_Blue@tmp+1)^0,c
  1361                           
  1362                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1363   000586  0E00               	movlw	0
  1364   000588  EC1A  F003         	call	_I2C_2_Master_Read
  1365   00058C  6E30               	movwf	??_color_read_Blue^0,c
  1366   00058E  5030               	movf	??_color_read_Blue^0,w,c
  1367   000590  6E32               	movwf	(??_color_read_Blue+2)^0,c
  1368   000592  6A31               	clrf	(??_color_read_Blue+1)^0,c
  1369   000594  5033               	movf	color_read_Blue@tmp^0,w,c
  1370   000596  1031               	iorwf	(??_color_read_Blue+1)^0,w,c
  1371   000598  6E33               	movwf	color_read_Blue@tmp^0,c
  1372   00059A  5034               	movf	(color_read_Blue@tmp+1)^0,w,c
  1373   00059C  1032               	iorwf	(??_color_read_Blue+2)^0,w,c
  1374   00059E  6E34               	movwf	(color_read_Blue@tmp+1)^0,c
  1375                           
  1376                           ;color.c: 55:  I2C_2_Master_Stop();
  1377   0005A0  EC49  F004         	call	_I2C_2_Master_Stop	;wreg free
  1378   0005A4                     
  1379                           ;color.c: 56:  return tmp;
  1380   0005A4  C033  F02E         	movff	color_read_Blue@tmp,?_color_read_Blue
  1381   0005A8  C034  F02F         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1382   0005AC  0012               	return		;funcret
  1383   0005AE                     __end_of_color_read_Blue:
  1384                           	callstack 0
  1385                           
  1386 ;; *************** function _I2C_2_Master_RepStart *****************
  1387 ;; Defined at:
  1388 ;;		line 33 in file "i2c.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;Total ram usage:        0 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; Hardware stack levels required when called: 3
  1409 ;; This function calls:
  1410 ;;		_I2C_2_Master_Idle
  1411 ;; This function is called by:
  1412 ;;		_color_read_Red
  1413 ;;		_color_read_Blue
  1414 ;;		_color_read_Green
  1415 ;;		_color_read_Clear
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text6
  1420   000888                     __ptext6:
  1421                           	callstack 0
  1422   000888                     _I2C_2_Master_RepStart:
  1423                           	callstack 24
  1424   000888                     
  1425                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1426   000888  ECE0  F003         	call	_I2C_2_Master_Idle	;wreg free
  1427   00088C                     
  1428                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1429   00088C  010E               	movlb	14	; () banked
  1430   00088E  83DA               	bsf	218,1,b	;volatile
  1431   000890                     
  1432                           ; BSR set to: 14
  1433   000890  0012               	return		;funcret
  1434   000892                     __end_of_I2C_2_Master_RepStart:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function _I2C_2_Master_Read *****************
  1438 ;; Defined at:
  1439 ;;		line 51 in file "i2c.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  ack             1    wreg     unsigned char 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  ack             1    8[COMRAM] unsigned char 
  1444 ;;  tmp             1    9[COMRAM] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      unsigned char 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;Total ram usage:        3 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 3
  1461 ;; This function calls:
  1462 ;;		_I2C_2_Master_Idle
  1463 ;; This function is called by:
  1464 ;;		_color_read_Red
  1465 ;;		_color_read_Blue
  1466 ;;		_color_read_Green
  1467 ;;		_color_read_Clear
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text7
  1472   000634                     __ptext7:
  1473                           	callstack 0
  1474   000634                     _I2C_2_Master_Read:
  1475                           	callstack 24
  1476                           
  1477                           ; BSR set to: 14
  1478                           ;incstack = 0
  1479                           ;I2C_2_Master_Read@ack stored from wreg
  1480   000634  6E2C               	movwf	I2C_2_Master_Read@ack^0,c
  1481   000636                     
  1482                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1483   000636  ECE0  F003         	call	_I2C_2_Master_Idle	;wreg free
  1484   00063A                     
  1485                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1486   00063A  010E               	movlb	14	; () banked
  1487   00063C  87DA               	bsf	218,3,b	;volatile
  1488                           
  1489                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1490   00063E  ECE0  F003         	call	_I2C_2_Master_Idle	;wreg free
  1491   000642                     
  1492                           ;i2c.c: 57:   tmp = SSP2BUF;
  1493   000642  CED5 F02D          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1494                           
  1495                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1496   000646  ECE0  F003         	call	_I2C_2_Master_Idle	;wreg free
  1497   00064A                     
  1498                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1499   00064A  502C               	movf	I2C_2_Master_Read@ack^0,w,c
  1500   00064C  B4D8               	btfsc	status,2,c
  1501   00064E  EF2B  F003         	goto	u611
  1502   000652  EF2F  F003         	goto	u610
  1503   000656                     u611:
  1504   000656  6A2B               	clrf	??_I2C_2_Master_Read^0,c
  1505   000658  2A2B               	incf	??_I2C_2_Master_Read^0,f,c
  1506   00065A  EF30  F003         	goto	u628
  1507   00065E                     u610:
  1508   00065E  6A2B               	clrf	??_I2C_2_Master_Read^0,c
  1509   000660                     u628:
  1510   000660  3A2B               	swapf	??_I2C_2_Master_Read^0,f,c
  1511   000662  462B               	rlncf	??_I2C_2_Master_Read^0,f,c
  1512   000664  010E               	movlb	14	; () banked
  1513   000666  51DA               	movf	218,w,b	;volatile
  1514   000668  182B               	xorwf	??_I2C_2_Master_Read^0,w,c
  1515   00066A  0BDF               	andlw	-33
  1516   00066C  182B               	xorwf	??_I2C_2_Master_Read^0,w,c
  1517   00066E  6FDA               	movwf	218,b	;volatile
  1518   000670                     
  1519                           ; BSR set to: 14
  1520                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1521   000670  89DA               	bsf	218,4,b	;volatile
  1522   000672                     
  1523                           ; BSR set to: 14
  1524                           ;i2c.c: 61:   return tmp;
  1525   000672  502D               	movf	I2C_2_Master_Read@tmp^0,w,c
  1526   000674                     
  1527                           ; BSR set to: 14
  1528   000674  0012               	return		;funcret
  1529   000676                     __end_of_I2C_2_Master_Read:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function _Light *****************
  1533 ;; Defined at:
  1534 ;;		line 14 in file "lights.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  colorcode       1    wreg     unsigned char 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  colorcode       1    6[COMRAM] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1552 ;;Total ram usage:        1 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; Hardware stack levels required when called: 2
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;;		_levels
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text8
  1564   00045E                     __ptext8:
  1565                           	callstack 0
  1566   00045E                     _Light:
  1567                           	callstack 26
  1568                           
  1569                           ; BSR set to: 14
  1570                           ;incstack = 0
  1571                           ;Light@colorcode stored from wreg
  1572   00045E  6E2A               	movwf	Light@colorcode^0,c
  1573   000460                     
  1574                           ;lights.c: 15:     if (colorcode==0){
  1575   000460  502A               	movf	Light@colorcode^0,w,c
  1576   000462  A4D8               	btfss	status,2,c
  1577   000464  EF36  F002         	goto	u631
  1578   000468  EF38  F002         	goto	u630
  1579   00046C                     u631:
  1580   00046C  EF3B  F002         	goto	l1536
  1581   000470                     u630:
  1582   000470                     
  1583                           ;lights.c: 16:         LATGbits.LATG1=1;
  1584   000470  827F               	bsf	127,1,c	;volatile
  1585                           
  1586                           ;lights.c: 17:         LATFbits.LATF7=1;
  1587   000472  8E7E               	bsf	126,7,c	;volatile
  1588                           
  1589                           ;lights.c: 18:         LATAbits.LATA4=1;
  1590   000474  8879               	bsf	121,4,c	;volatile
  1591   000476                     l1536:
  1592                           
  1593                           ;lights.c: 20:     if (colorcode==1){
  1594   000476  042A               	decf	Light@colorcode^0,w,c
  1595   000478  A4D8               	btfss	status,2,c
  1596   00047A  EF41  F002         	goto	u641
  1597   00047E  EF43  F002         	goto	u640
  1598   000482                     u641:
  1599   000482  EF46  F002         	goto	l1540
  1600   000486                     u640:
  1601   000486                     
  1602                           ;lights.c: 21:         LATGbits.LATG1=1;
  1603   000486  827F               	bsf	127,1,c	;volatile
  1604                           
  1605                           ;lights.c: 22:         LATFbits.LATF7=1;
  1606   000488  8E7E               	bsf	126,7,c	;volatile
  1607                           
  1608                           ;lights.c: 23:         LATAbits.LATA4=0;
  1609   00048A  9879               	bcf	121,4,c	;volatile
  1610   00048C                     l1540:
  1611                           
  1612                           ;lights.c: 25:     if (colorcode==2){
  1613   00048C  0E02               	movlw	2
  1614   00048E  182A               	xorwf	Light@colorcode^0,w,c
  1615   000490  A4D8               	btfss	status,2,c
  1616   000492  EF4D  F002         	goto	u651
  1617   000496  EF4F  F002         	goto	u650
  1618   00049A                     u651:
  1619   00049A  EF52  F002         	goto	l1544
  1620   00049E                     u650:
  1621   00049E                     
  1622                           ;lights.c: 26:         LATGbits.LATG1=0;
  1623   00049E  927F               	bcf	127,1,c	;volatile
  1624                           
  1625                           ;lights.c: 27:         LATFbits.LATF7=1;
  1626   0004A0  8E7E               	bsf	126,7,c	;volatile
  1627                           
  1628                           ;lights.c: 28:         LATAbits.LATA4=0;
  1629   0004A2  9879               	bcf	121,4,c	;volatile
  1630   0004A4                     l1544:
  1631                           
  1632                           ;lights.c: 30:     if (colorcode==3){
  1633   0004A4  0E03               	movlw	3
  1634   0004A6  182A               	xorwf	Light@colorcode^0,w,c
  1635   0004A8  A4D8               	btfss	status,2,c
  1636   0004AA  EF59  F002         	goto	u661
  1637   0004AE  EF5B  F002         	goto	u660
  1638   0004B2                     u661:
  1639   0004B2  EF5E  F002         	goto	l226
  1640   0004B6                     u660:
  1641   0004B6                     
  1642                           ;lights.c: 31:         LATGbits.LATG1=0;
  1643   0004B6  927F               	bcf	127,1,c	;volatile
  1644                           
  1645                           ;lights.c: 32:         LATFbits.LATF7=0;
  1646   0004B8  9E7E               	bcf	126,7,c	;volatile
  1647                           
  1648                           ;lights.c: 33:         LATAbits.LATA4=1;
  1649   0004BA  8879               	bsf	121,4,c	;volatile
  1650   0004BC                     l226:
  1651   0004BC  0012               	return		;funcret
  1652   0004BE                     __end_of_Light:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function ___awdiv *****************
  1656 ;; Defined at:
  1657 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  dividend        2    6[COMRAM] int 
  1660 ;;  divisor         2    8[COMRAM] int 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  quotient        2   12[COMRAM] int 
  1663 ;;  sign            1   11[COMRAM] unsigned char 
  1664 ;;  counter         1   10[COMRAM] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  2    6[COMRAM] int 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1675 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1678 ;;Total ram usage:        8 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 2
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_readcard
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text9
  1689   00039A                     __ptext9:
  1690                           	callstack 0
  1691   00039A                     ___awdiv:
  1692                           	callstack 27
  1693   00039A  0E00               	movlw	0
  1694   00039C  6E2F               	movwf	___awdiv@sign^0,c
  1695   00039E  BE2D               	btfsc	(___awdiv@divisor+1)^0,7,c
  1696   0003A0  EFD6  F001         	goto	u680
  1697   0003A4  EFD4  F001         	goto	u681
  1698   0003A8                     u681:
  1699   0003A8  EFDC  F001         	goto	l1606
  1700   0003AC                     u680:
  1701   0003AC  6C2C               	negf	___awdiv@divisor^0,c
  1702   0003AE  1E2D               	comf	(___awdiv@divisor+1)^0,f,c
  1703   0003B0  B0D8               	btfsc	status,0,c
  1704   0003B2  2A2D               	incf	(___awdiv@divisor+1)^0,f,c
  1705   0003B4  0E01               	movlw	1
  1706   0003B6  6E2F               	movwf	___awdiv@sign^0,c
  1707   0003B8                     l1606:
  1708   0003B8  BE2B               	btfsc	(___awdiv@dividend+1)^0,7,c
  1709   0003BA  EFE3  F001         	goto	u690
  1710   0003BE  EFE1  F001         	goto	u691
  1711   0003C2                     u691:
  1712   0003C2  EFE9  F001         	goto	l1612
  1713   0003C6                     u690:
  1714   0003C6  6C2A               	negf	___awdiv@dividend^0,c
  1715   0003C8  1E2B               	comf	(___awdiv@dividend+1)^0,f,c
  1716   0003CA  B0D8               	btfsc	status,0,c
  1717   0003CC  2A2B               	incf	(___awdiv@dividend+1)^0,f,c
  1718   0003CE  0E01               	movlw	1
  1719   0003D0  1A2F               	xorwf	___awdiv@sign^0,f,c
  1720   0003D2                     l1612:
  1721   0003D2  0E00               	movlw	0
  1722   0003D4  6E31               	movwf	(___awdiv@quotient+1)^0,c
  1723   0003D6  0E00               	movlw	0
  1724   0003D8  6E30               	movwf	___awdiv@quotient^0,c
  1725   0003DA  502C               	movf	___awdiv@divisor^0,w,c
  1726   0003DC  102D               	iorwf	(___awdiv@divisor+1)^0,w,c
  1727   0003DE  B4D8               	btfsc	status,2,c
  1728   0003E0  EFF4  F001         	goto	u701
  1729   0003E4  EFF6  F001         	goto	u700
  1730   0003E8                     u701:
  1731   0003E8  EF1E  F002         	goto	l1634
  1732   0003EC                     u700:
  1733   0003EC  0E01               	movlw	1
  1734   0003EE  6E2E               	movwf	___awdiv@counter^0,c
  1735   0003F0  EFFE  F001         	goto	l1620
  1736   0003F4                     l1618:
  1737   0003F4  90D8               	bcf	status,0,c
  1738   0003F6  362C               	rlcf	___awdiv@divisor^0,f,c
  1739   0003F8  362D               	rlcf	(___awdiv@divisor+1)^0,f,c
  1740   0003FA  2A2E               	incf	___awdiv@counter^0,f,c
  1741   0003FC                     l1620:
  1742   0003FC  AE2D               	btfss	(___awdiv@divisor+1)^0,7,c
  1743   0003FE  EF03  F002         	goto	u711
  1744   000402  EF05  F002         	goto	u710
  1745   000406                     u711:
  1746   000406  EFFA  F001         	goto	l1618
  1747   00040A                     u710:
  1748   00040A                     l1622:
  1749   00040A  90D8               	bcf	status,0,c
  1750   00040C  3630               	rlcf	___awdiv@quotient^0,f,c
  1751   00040E  3631               	rlcf	(___awdiv@quotient+1)^0,f,c
  1752   000410  502C               	movf	___awdiv@divisor^0,w,c
  1753   000412  5C2A               	subwf	___awdiv@dividend^0,w,c
  1754   000414  502D               	movf	(___awdiv@divisor+1)^0,w,c
  1755   000416  582B               	subwfb	(___awdiv@dividend+1)^0,w,c
  1756   000418  A0D8               	btfss	status,0,c
  1757   00041A  EF11  F002         	goto	u721
  1758   00041E  EF13  F002         	goto	u720
  1759   000422                     u721:
  1760   000422  EF18  F002         	goto	l1630
  1761   000426                     u720:
  1762   000426  502C               	movf	___awdiv@divisor^0,w,c
  1763   000428  5E2A               	subwf	___awdiv@dividend^0,f,c
  1764   00042A  502D               	movf	(___awdiv@divisor+1)^0,w,c
  1765   00042C  5A2B               	subwfb	(___awdiv@dividend+1)^0,f,c
  1766   00042E  8030               	bsf	___awdiv@quotient^0,0,c
  1767   000430                     l1630:
  1768   000430  90D8               	bcf	status,0,c
  1769   000432  322D               	rrcf	(___awdiv@divisor+1)^0,f,c
  1770   000434  322C               	rrcf	___awdiv@divisor^0,f,c
  1771   000436  2E2E               	decfsz	___awdiv@counter^0,f,c
  1772   000438  EF05  F002         	goto	l1622
  1773   00043C                     l1634:
  1774   00043C  502F               	movf	___awdiv@sign^0,w,c
  1775   00043E  B4D8               	btfsc	status,2,c
  1776   000440  EF24  F002         	goto	u731
  1777   000444  EF26  F002         	goto	u730
  1778   000448                     u731:
  1779   000448  EF2A  F002         	goto	l1638
  1780   00044C                     u730:
  1781   00044C  6C30               	negf	___awdiv@quotient^0,c
  1782   00044E  1E31               	comf	(___awdiv@quotient+1)^0,f,c
  1783   000450  B0D8               	btfsc	status,0,c
  1784   000452  2A31               	incf	(___awdiv@quotient+1)^0,f,c
  1785   000454                     l1638:
  1786   000454  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  1787   000458  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  1788   00045C  0012               	return		;funcret
  1789   00045E                     __end_of___awdiv:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _initUSART4 *****************
  1793 ;; Defined at:
  1794 ;;		line 4 in file "serial.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1812 ;;Total ram usage:        0 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 2
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text10
  1823   000828                     __ptext10:
  1824                           	callstack 0
  1825   000828                     _initUSART4:
  1826                           	callstack 28
  1827   000828                     
  1828                           ;serial.c: 5:     RC0PPS = 0x12;
  1829   000828  0E12               	movlw	18
  1830   00082A  010E               	movlb	14	; () banked
  1831   00082C  6F62               	movwf	98,b	;volatile
  1832                           
  1833                           ;serial.c: 6:     RX4PPS = 0x11;
  1834   00082E  0E11               	movlw	17
  1835   000830  6F15               	movwf	21,b	;volatile
  1836   000832                     
  1837                           ; BSR set to: 14
  1838                           ;serial.c: 8:     BAUD4CONbits.BRG16 = 0;
  1839   000832  97E9               	bcf	233,3,b	;volatile
  1840   000834                     
  1841                           ; BSR set to: 14
  1842                           ;serial.c: 9:     TX4STAbits.BRGH = 0;
  1843   000834  95E8               	bcf	232,2,b	;volatile
  1844                           
  1845                           ;serial.c: 10:     SP4BRGL = 51;
  1846   000836  0E33               	movlw	51
  1847   000838  6FE5               	movwf	229,b	;volatile
  1848                           
  1849                           ;serial.c: 11:     SP4BRGH = 0;
  1850   00083A  0E00               	movlw	0
  1851   00083C  6FE6               	movwf	230,b	;volatile
  1852   00083E                     
  1853                           ; BSR set to: 14
  1854                           ;serial.c: 13:     RC4STAbits.CREN = 1;
  1855   00083E  89E7               	bsf	231,4,b	;volatile
  1856   000840                     
  1857                           ; BSR set to: 14
  1858                           ;serial.c: 14:     TX4STAbits.TXEN = 1;
  1859   000840  8BE8               	bsf	232,5,b	;volatile
  1860   000842                     
  1861                           ; BSR set to: 14
  1862                           ;serial.c: 15:     RC4STAbits.SPEN = 1;
  1863   000842  8FE7               	bsf	231,7,b	;volatile
  1864   000844                     
  1865                           ; BSR set to: 14
  1866   000844  0012               	return		;funcret
  1867   000846                     __end_of_initUSART4:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function _color_click_init *****************
  1871 ;; Defined at:
  1872 ;;		line 5 in file "color.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1890 ;;Total ram usage:        1 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; Hardware stack levels required when called: 5
  1893 ;; This function calls:
  1894 ;;		_I2C_2_Master_Init
  1895 ;;		_color_writetoaddr
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text11
  1902   0006B2                     __ptext11:
  1903                           	callstack 0
  1904   0006B2                     _color_click_init:
  1905                           	callstack 25
  1906   0006B2                     
  1907                           ;color.c: 8:     I2C_2_Master_Init();
  1908   0006B2  ECA1  F003         	call	_I2C_2_Master_Init	;wreg free
  1909   0006B6                     
  1910                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1911   0006B6  0E01               	movlw	1
  1912   0006B8  6E2C               	movwf	color_writetoaddr@value^0,c
  1913   0006BA  0E00               	movlw	0
  1914   0006BC  ECF4  F003         	call	_color_writetoaddr
  1915   0006C0                     
  1916                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1917   0006C0  0E3F               	movlw	63
  1918   0006C2  6E2E               	movwf	??_color_click_init^0,c
  1919   0006C4  0E55               	movlw	85
  1920   0006C6                     u1117:
  1921   0006C6  2EE8               	decfsz	wreg,f,c
  1922   0006C8  D7FE               	bra	u1117
  1923   0006CA  2E2E               	decfsz	??_color_click_init^0,f,c
  1924   0006CC  D7FC               	bra	u1117
  1925   0006CE  F000               	nop	
  1926   0006D0                     
  1927                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  1928   0006D0  0E03               	movlw	3
  1929   0006D2  6E2C               	movwf	color_writetoaddr@value^0,c
  1930   0006D4  0E00               	movlw	0
  1931   0006D6  ECF4  F003         	call	_color_writetoaddr
  1932   0006DA                     
  1933                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  1934   0006DA  0ED5               	movlw	213
  1935   0006DC  6E2C               	movwf	color_writetoaddr@value^0,c
  1936   0006DE  0E01               	movlw	1
  1937   0006E0  ECF4  F003         	call	_color_writetoaddr
  1938   0006E4  0012               	return		;funcret
  1939   0006E6                     __end_of_color_click_init:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _color_writetoaddr *****************
  1943 ;; Defined at:
  1944 ;;		line 21 in file "color.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  address         1    wreg     unsigned char 
  1947 ;;  value           1    8[COMRAM] unsigned char 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  address         1    9[COMRAM] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1959 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;Total ram usage:        2 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 4
  1966 ;; This function calls:
  1967 ;;		_I2C_2_Master_Start
  1968 ;;		_I2C_2_Master_Stop
  1969 ;;		_I2C_2_Master_Write
  1970 ;; This function is called by:
  1971 ;;		_color_click_init
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text12
  1976   0007E8                     __ptext12:
  1977                           	callstack 0
  1978   0007E8                     _color_writetoaddr:
  1979                           	callstack 25
  1980                           
  1981                           ;incstack = 0
  1982                           ;color_writetoaddr@address stored from wreg
  1983   0007E8  6E2D               	movwf	color_writetoaddr@address^0,c
  1984   0007EA                     
  1985                           ;color.c: 22:     I2C_2_Master_Start();
  1986   0007EA  EC4E  F004         	call	_I2C_2_Master_Start	;wreg free
  1987                           
  1988                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  1989   0007EE  0E52               	movlw	82
  1990   0007F0  EC3E  F004         	call	_I2C_2_Master_Write
  1991                           
  1992                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  1993   0007F4  502D               	movf	color_writetoaddr@address^0,w,c
  1994   0007F6  0980               	iorlw	128
  1995   0007F8  EC3E  F004         	call	_I2C_2_Master_Write
  1996                           
  1997                           ;color.c: 25:     I2C_2_Master_Write(value);
  1998   0007FC  502C               	movf	color_writetoaddr@value^0,w,c
  1999   0007FE  EC3E  F004         	call	_I2C_2_Master_Write
  2000                           
  2001                           ;color.c: 26:     I2C_2_Master_Stop();
  2002   000802  EC49  F004         	call	_I2C_2_Master_Stop	;wreg free
  2003   000806  0012               	return		;funcret
  2004   000808                     __end_of_color_writetoaddr:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _I2C_2_Master_Write *****************
  2008 ;; Defined at:
  2009 ;;		line 45 in file "i2c.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  data_byte       1    wreg     unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  data_byte       1    7[COMRAM] unsigned char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2, status,0, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2027 ;;Total ram usage:        1 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 3
  2030 ;; This function calls:
  2031 ;;		_I2C_2_Master_Idle
  2032 ;; This function is called by:
  2033 ;;		_color_writetoaddr
  2034 ;;		_color_read_Red
  2035 ;;		_color_read_Blue
  2036 ;;		_color_read_Green
  2037 ;;		_color_read_Clear
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text13
  2042   00087C                     __ptext13:
  2043                           	callstack 0
  2044   00087C                     _I2C_2_Master_Write:
  2045                           	callstack 24
  2046                           
  2047                           ;incstack = 0
  2048                           ;I2C_2_Master_Write@data_byte stored from wreg
  2049   00087C  6E2B               	movwf	I2C_2_Master_Write@data_byte^0,c
  2050   00087E                     
  2051                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2052   00087E  ECE0  F003         	call	_I2C_2_Master_Idle	;wreg free
  2053   000882                     
  2054                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2055   000882  C02B  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2056   000886  0012               	return		;funcret
  2057   000888                     __end_of_I2C_2_Master_Write:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _I2C_2_Master_Stop *****************
  2061 ;; Defined at:
  2062 ;;		line 39 in file "i2c.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 3
  2083 ;; This function calls:
  2084 ;;		_I2C_2_Master_Idle
  2085 ;; This function is called by:
  2086 ;;		_color_writetoaddr
  2087 ;;		_color_read_Red
  2088 ;;		_color_read_Blue
  2089 ;;		_color_read_Green
  2090 ;;		_color_read_Clear
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text14
  2095   000892                     __ptext14:
  2096                           	callstack 0
  2097   000892                     _I2C_2_Master_Stop:
  2098                           	callstack 24
  2099   000892                     
  2100                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2101   000892  ECE0  F003         	call	_I2C_2_Master_Idle	;wreg free
  2102   000896                     
  2103                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2104   000896  010E               	movlb	14	; () banked
  2105   000898  85DA               	bsf	218,2,b	;volatile
  2106   00089A                     
  2107                           ; BSR set to: 14
  2108   00089A  0012               	return		;funcret
  2109   00089C                     __end_of_I2C_2_Master_Stop:
  2110                           	callstack 0
  2111                           
  2112 ;; *************** function _I2C_2_Master_Start *****************
  2113 ;; Defined at:
  2114 ;;		line 27 in file "i2c.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2132 ;;Total ram usage:        0 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 3
  2135 ;; This function calls:
  2136 ;;		_I2C_2_Master_Idle
  2137 ;; This function is called by:
  2138 ;;		_color_writetoaddr
  2139 ;;		_color_read_Red
  2140 ;;		_color_read_Blue
  2141 ;;		_color_read_Green
  2142 ;;		_color_read_Clear
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text15
  2147   00089C                     __ptext15:
  2148                           	callstack 0
  2149   00089C                     _I2C_2_Master_Start:
  2150                           	callstack 24
  2151   00089C                     
  2152                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2153   00089C  ECE0  F003         	call	_I2C_2_Master_Idle	;wreg free
  2154   0008A0                     
  2155                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2156   0008A0  010E               	movlb	14	; () banked
  2157   0008A2  81DA               	bsf	218,0,b	;volatile
  2158   0008A4                     
  2159                           ; BSR set to: 14
  2160   0008A4  0012               	return		;funcret
  2161   0008A6                     __end_of_I2C_2_Master_Start:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _I2C_2_Master_Idle *****************
  2165 ;; Defined at:
  2166 ;;		line 22 in file "i2c.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;Total ram usage:        1 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 2
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_I2C_2_Master_Start
  2191 ;;		_I2C_2_Master_RepStart
  2192 ;;		_I2C_2_Master_Stop
  2193 ;;		_I2C_2_Master_Write
  2194 ;;		_I2C_2_Master_Read
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text16
  2199   0007C0                     __ptext16:
  2200                           	callstack 0
  2201   0007C0                     _I2C_2_Master_Idle:
  2202                           	callstack 24
  2203   0007C0                     l374:
  2204   0007C0  010E               	movlb	14	; () banked
  2205   0007C2  B5D8               	btfsc	216,2,b	;volatile
  2206   0007C4  EFE6  F003         	goto	u591
  2207   0007C8  EFE8  F003         	goto	u590
  2208   0007CC                     u591:
  2209   0007CC  EFE0  F003         	goto	l374
  2210   0007D0                     u590:
  2211   0007D0                     
  2212                           ; BSR set to: 14
  2213   0007D0  CEDA F02A          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2214   0007D4  0E1F               	movlw	31
  2215   0007D6  162A               	andwf	??_I2C_2_Master_Idle^0,f,c
  2216   0007D8  A4D8               	btfss	status,2,c
  2217   0007DA  EFF1  F003         	goto	u601
  2218   0007DE  EFF3  F003         	goto	u600
  2219   0007E2                     u601:
  2220   0007E2  EFE0  F003         	goto	l374
  2221   0007E6                     u600:
  2222   0007E6                     
  2223                           ; BSR set to: 14
  2224   0007E6  0012               	return		;funcret
  2225   0007E8                     __end_of_I2C_2_Master_Idle:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function _I2C_2_Master_Init *****************
  2229 ;; Defined at:
  2230 ;;		line 4 in file "i2c.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 2
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_color_click_init
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text17
  2259   000742                     __ptext17:
  2260                           	callstack 0
  2261   000742                     _I2C_2_Master_Init:
  2262                           	callstack 27
  2263   000742                     
  2264                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2265   000742  010E               	movlb	14	; () banked
  2266   000744  51D9               	movf	217,w,b	;volatile
  2267   000746  0BF0               	andlw	-16
  2268   000748  0908               	iorlw	8
  2269   00074A  6FD9               	movwf	217,b	;volatile
  2270   00074C                     
  2271                           ; BSR set to: 14
  2272                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2273   00074C  8BD9               	bsf	217,5,b	;volatile
  2274                           
  2275                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2276   00074E  0E9F               	movlw	159
  2277   000750  6FD6               	movwf	214,b	;volatile
  2278   000752                     
  2279                           ; BSR set to: 14
  2280                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2281   000752  8A84               	bsf	132,5,c	;volatile
  2282   000754                     
  2283                           ; BSR set to: 14
  2284                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2285   000754  8C84               	bsf	132,6,c	;volatile
  2286   000756                     
  2287                           ; BSR set to: 14
  2288                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2289   000756  9BA7               	bcf	167,5,b	;volatile
  2290   000758                     
  2291                           ; BSR set to: 14
  2292                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2293   000758  9DA7               	bcf	167,6,b	;volatile
  2294                           
  2295                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2296   00075A  0E1D               	movlw	29
  2297   00075C  6F1D               	movwf	29,b	;volatile
  2298                           
  2299                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2300   00075E  0E1E               	movlw	30
  2301   000760  6F1C               	movwf	28,b	;volatile
  2302                           
  2303                           ;i2c.c: 18:   RD5PPS=0x1C;
  2304   000762  0E1C               	movlw	28
  2305   000764  6F6F               	movwf	111,b	;volatile
  2306                           
  2307                           ;i2c.c: 19:   RD6PPS=0x1B;
  2308   000766  0E1B               	movlw	27
  2309   000768  6F70               	movwf	112,b	;volatile
  2310   00076A                     
  2311                           ; BSR set to: 14
  2312   00076A  0012               	return		;funcret
  2313   00076C                     __end_of_I2C_2_Master_Init:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function _TxBufferedString *****************
  2317 ;; Defined at:
  2318 ;;		line 83 in file "serial.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  string          2    7[COMRAM] PTR unsigned char 
  2321 ;;		 -> main@buf(1), 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2337 ;;Total ram usage:        2 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 3
  2340 ;; This function calls:
  2341 ;;		_putCharToTxBuf
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text18
  2348   0006E6                     __ptext18:
  2349                           	callstack 0
  2350   0006E6                     _TxBufferedString:
  2351                           	callstack 27
  2352   0006E6                     
  2353                           ;serial.c: 85:     while(*string != 0){
  2354   0006E6  EF7E  F003         	goto	l1764
  2355   0006EA                     l1760:
  2356                           
  2357                           ;serial.c: 86:   putCharToTxBuf(*string++);
  2358   0006EA  C02B  FFD9         	movff	TxBufferedString@string,fsr2l
  2359   0006EE  C02C  FFDA         	movff	TxBufferedString@string+1,fsr2h
  2360   0006F2  50DF               	movf	indf2,w,c
  2361   0006F4  ECB6  F003         	call	_putCharToTxBuf
  2362   0006F8  4A2B               	infsnz	TxBufferedString@string^0,f,c
  2363   0006FA  2A2C               	incf	(TxBufferedString@string+1)^0,f,c
  2364   0006FC                     l1764:
  2365                           
  2366                           ;serial.c: 85:     while(*string != 0){
  2367   0006FC  C02B  FFD9         	movff	TxBufferedString@string,fsr2l
  2368   000700  C02C  FFDA         	movff	TxBufferedString@string+1,fsr2h
  2369   000704  50DF               	movf	indf2,w,c
  2370   000706  A4D8               	btfss	status,2,c
  2371   000708  EF88  F003         	goto	u821
  2372   00070C  EF8A  F003         	goto	u820
  2373   000710                     u821:
  2374   000710  EF75  F003         	goto	l1760
  2375   000714                     u820:
  2376   000714  0012               	return		;funcret
  2377   000716                     __end_of_TxBufferedString:
  2378                           	callstack 0
  2379                           
  2380 ;; *************** function _putCharToTxBuf *****************
  2381 ;; Defined at:
  2382 ;;		line 70 in file "serial.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  byte            1    wreg     unsigned char 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  byte            1    6[COMRAM] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2400 ;;Total ram usage:        1 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; Hardware stack levels required when called: 2
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_TxBufferedString
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text19
  2411   00076C                     __ptext19:
  2412                           	callstack 0
  2413   00076C                     _putCharToTxBuf:
  2414                           	callstack 27
  2415                           
  2416                           ;incstack = 0
  2417                           ;putCharToTxBuf@byte stored from wreg
  2418   00076C  6E2A               	movwf	putCharToTxBuf@byte^0,c
  2419   00076E                     
  2420                           ;serial.c: 71:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  2421   00076E  0E3B               	movlw	59
  2422   000770  6420               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  2423   000772  EFBD  F003         	goto	u671
  2424   000776  EFBF  F003         	goto	u670
  2425   00077A                     u671:
  2426   00077A  EFC1  F003         	goto	l1594
  2427   00077E                     u670:
  2428   00077E  0E00               	movlw	0
  2429   000780  6E20               	movwf	_TxBufWriteCnt^0,c	;volatile
  2430   000782                     l1594:
  2431                           
  2432                           ;serial.c: 72:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  2433   000782  0E3C               	movlw	low _EUSART4TXbuf
  2434   000784  2420               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  2435   000786  6ED9               	movwf	fsr2l,c
  2436   000788  6ADA               	clrf	fsr2h,c
  2437   00078A  0E01               	movlw	high _EUSART4TXbuf
  2438   00078C  22DA               	addwfc	fsr2h,f,c
  2439   00078E  C02A  FFDF         	movff	putCharToTxBuf@byte,indf2
  2440   000792  2A20               	incf	_TxBufWriteCnt^0,f,c	;volatile
  2441   000794  0012               	return		;funcret
  2442   000796                     __end_of_putCharToTxBuf:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _Timer0_init *****************
  2446 ;; Defined at:
  2447 ;;		line 7 in file "timers.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;		None
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;Total ram usage:        0 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 2
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text20
  2476   000808                     __ptext20:
  2477                           	callstack 0
  2478   000808                     _Timer0_init:
  2479                           	callstack 28
  2480   000808                     
  2481                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2482   000808  50D6               	movf	214,w,c	;volatile
  2483   00080A  0B1F               	andlw	-225
  2484   00080C  0940               	iorlw	64
  2485   00080E  6ED6               	movwf	214,c	;volatile
  2486   000810                     
  2487                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2488   000810  88D6               	bsf	214,4,c	;volatile
  2489                           
  2490                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  2491   000812  50D6               	movf	214,w,c	;volatile
  2492   000814  0BF0               	andlw	-16
  2493   000816  0908               	iorlw	8
  2494   000818  6ED6               	movwf	214,c	;volatile
  2495   00081A                     
  2496                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  2497   00081A  88D5               	bsf	213,4,c	;volatile
  2498                           
  2499                           ;timers.c: 15:     TMR0H=0b00001011;
  2500   00081C  0E0B               	movlw	11
  2501   00081E  6ED4               	movwf	212,c	;volatile
  2502                           
  2503                           ;timers.c: 16:     TMR0L=0b11011100;
  2504   000820  0EDC               	movlw	220
  2505   000822  6ED3               	movwf	211,c	;volatile
  2506   000824                     
  2507                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  2508   000824  8ED5               	bsf	213,7,c	;volatile
  2509   000826  0012               	return		;funcret
  2510   000828                     __end_of_Timer0_init:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _LightInit *****************
  2514 ;; Defined at:
  2515 ;;		line 4 in file "lights.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		None
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;Total ram usage:        0 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 2
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_main
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text21
  2544   00086E                     __ptext21:
  2545                           	callstack 0
  2546   00086E                     _LightInit:
  2547                           	callstack 28
  2548   00086E                     
  2549                           ;lights.c: 5:     TRISGbits.TRISG1=0;
  2550   00086E  9287               	bcf	135,1,c	;volatile
  2551                           
  2552                           ;lights.c: 6:     TRISFbits.TRISF7=0;
  2553   000870  9E86               	bcf	134,7,c	;volatile
  2554                           
  2555                           ;lights.c: 7:     TRISAbits.TRISA4=0;
  2556   000872  9881               	bcf	129,4,c	;volatile
  2557                           
  2558                           ;lights.c: 8:     LATGbits.LATG1=0;
  2559   000874  927F               	bcf	127,1,c	;volatile
  2560                           
  2561                           ;lights.c: 9:     LATFbits.LATF7=0;
  2562   000876  9E7E               	bcf	126,7,c	;volatile
  2563                           
  2564                           ;lights.c: 10:     LATAbits.LATA4=0;
  2565   000878  9879               	bcf	121,4,c	;volatile
  2566   00087A  0012               	return		;funcret
  2567   00087C                     __end_of_LightInit:
  2568                           	callstack 0
  2569                           
  2570 ;; *************** function _Interrupts_init *****************
  2571 ;; Defined at:
  2572 ;;		line 10 in file "interrupts.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		None
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;Total ram usage:        0 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 2
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text22
  2601   00085E                     __ptext22:
  2602                           	callstack 0
  2603   00085E                     _Interrupts_init:
  2604                           	callstack 28
  2605   00085E                     
  2606                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
  2607   00085E  8CF2               	bsf	242,6,c	;volatile
  2608                           
  2609                           ;interrupts.c: 13:     INTCONbits.IPEN=1;
  2610   000860  8AF2               	bsf	242,5,c	;volatile
  2611                           
  2612                           ;interrupts.c: 14:     PIE4bits.RC4IE=1;
  2613   000862  010E               	movlb	14	; () banked
  2614   000864  872D               	bsf	45,3,b	;volatile
  2615                           
  2616                           ;interrupts.c: 15:     PIE4bits.TX4IE=0;
  2617   000866  952D               	bcf	45,2,b	;volatile
  2618                           
  2619                           ;interrupts.c: 16:     PIE0bits.TMR0IE=1;
  2620   000868  8B29               	bsf	41,5,b	;volatile
  2621                           
  2622                           ;interrupts.c: 17:     INTCONbits.GIE=1;
  2623   00086A  8EF2               	bsf	242,7,c	;volatile
  2624   00086C                     
  2625                           ; BSR set to: 14
  2626   00086C  0012               	return		;funcret
  2627   00086E                     __end_of_Interrupts_init:
  2628                           	callstack 0
  2629                           
  2630 ;; *************** function _HighISR *****************
  2631 ;; Defined at:
  2632 ;;		line 26 in file "interrupts.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  reg             1    5[COMRAM] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2648 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2650 ;;Total ram usage:        4 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 1
  2653 ;; This function calls:
  2654 ;;		_getCharFromTxBuf
  2655 ;;		_isDataInTxBuf
  2656 ;;		_putCharToRxBuf
  2657 ;; This function is called by:
  2658 ;;		Interrupt level 2
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	intcode
  2663   000008                     __pintcode:
  2664                           	callstack 0
  2665   000008                     _HighISR:
  2666                           	callstack 24
  2667                           
  2668                           ; BSR set to: 14
  2669                           ;incstack = 0
  2670   000008  8243               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2671   00000A  CFD9 F027          	movff	fsr2l,??_HighISR+1
  2672   00000E  CFDA F028          	movff	fsr2h,??_HighISR+2
  2673   000012                     
  2674                           ;interrupts.c: 29:  if(PIR4bits.TX4IF & sendFLAG){
  2675   000012  010E               	movlb	14	; () banked
  2676   000014  B537               	btfsc	55,2,b	;volatile
  2677   000016  EF0F  F000         	goto	i2u101_41
  2678   00001A  EF12  F000         	goto	i2u101_40
  2679   00001E                     i2u101_41:
  2680   00001E  0E01               	movlw	1
  2681   000020  EF13  F000         	goto	i2u101_46
  2682   000024                     i2u101_40:
  2683   000024  0E00               	movlw	0
  2684   000026                     i2u101_46:
  2685   000026  141B               	andwf	_sendFLAG^0,w,c
  2686   000028  0900               	iorlw	0
  2687   00002A  B4D8               	btfsc	status,2,c
  2688   00002C  EF1A  F000         	goto	i2u102_41
  2689   000030  EF1C  F000         	goto	i2u102_40
  2690   000034                     i2u102_41:
  2691   000034  EF3F  F000         	goto	i2l1852
  2692   000038                     i2u102_40:
  2693   000038                     
  2694                           ; BSR set to: 14
  2695                           ;interrupts.c: 30:         TX4REG = getCharFromTxBuf();
  2696   000038  EC8B  F003         	call	_getCharFromTxBuf	;wreg free
  2697   00003C  010E               	movlb	14	; () banked
  2698   00003E  6FE4               	movwf	228,b	;volatile
  2699   000040                     
  2700                           ; BSR set to: 14
  2701                           ;interrupts.c: 31:         if (!isDataInTxBuf()){
  2702   000040  EC23  F004         	call	_isDataInTxBuf	;wreg free
  2703   000044  0900               	iorlw	0
  2704   000046  A4D8               	btfss	status,2,c
  2705   000048  EF28  F000         	goto	i2u103_41
  2706   00004C  EF2A  F000         	goto	i2u103_40
  2707   000050                     i2u103_41:
  2708   000050  EF2E  F000         	goto	i2l1850
  2709   000054                     i2u103_40:
  2710   000054                     
  2711                           ;interrupts.c: 32:             PIE4bits.TX4IE=0;
  2712   000054  010E               	movlb	14	; () banked
  2713   000056  952D               	bcf	45,2,b	;volatile
  2714   000058                     
  2715                           ; BSR set to: 14
  2716                           ;interrupts.c: 33:             sendFLAG=0;
  2717   000058  0E00               	movlw	0
  2718   00005A  6E1B               	movwf	_sendFLAG^0,c
  2719   00005C                     i2l1850:
  2720                           
  2721                           ;interrupts.c: 35:         LATDbits.LATD7=!LATDbits.LATD7;
  2722   00005C  AE7C               	btfss	124,7,c	;volatile
  2723   00005E  EF33  F000         	goto	i2u104_41
  2724   000062  EF37  F000         	goto	i2u104_40
  2725   000066                     i2u104_41:
  2726   000066  6A26               	clrf	??_HighISR^0,c
  2727   000068  2A26               	incf	??_HighISR^0,f,c
  2728   00006A  EF38  F000         	goto	i2u105_48
  2729   00006E                     i2u104_40:
  2730   00006E  6A26               	clrf	??_HighISR^0,c
  2731   000070                     i2u105_48:
  2732   000070  3226               	rrcf	??_HighISR^0,f,c
  2733   000072  3226               	rrcf	??_HighISR^0,f,c
  2734   000074  507C               	movf	124,w,c	;volatile
  2735   000076  1826               	xorwf	??_HighISR^0,w,c
  2736   000078  0B7F               	andlw	-129
  2737   00007A  1826               	xorwf	??_HighISR^0,w,c
  2738   00007C  6E7C               	movwf	124,c	;volatile
  2739   00007E                     i2l1852:
  2740                           
  2741                           ;interrupts.c: 38:     if(PIR4bits.RC4IF){
  2742   00007E  010E               	movlb	14	; () banked
  2743   000080  A737               	btfss	55,3,b	;volatile
  2744   000082  EF45  F000         	goto	i2u106_41
  2745   000086  EF47  F000         	goto	i2u106_40
  2746   00008A                     i2u106_41:
  2747   00008A  EF4E  F000         	goto	i2l204
  2748   00008E                     i2u106_40:
  2749   00008E                     
  2750                           ; BSR set to: 14
  2751                           ;interrupts.c: 39:         char reg = RC4REG;
  2752   00008E  CEE3 F029          	movff	3811,HighISR@reg	;volatile
  2753   000092                     
  2754                           ; BSR set to: 14
  2755                           ;interrupts.c: 40:         putCharToRxBuf(reg);
  2756   000092  5029               	movf	HighISR@reg^0,w,c
  2757   000094  ECCB  F003         	call	_putCharToRxBuf
  2758   000098                     
  2759                           ;interrupts.c: 41:         charFLAG=1;
  2760   000098  0E01               	movlw	1
  2761   00009A  6E1C               	movwf	_charFLAG^0,c
  2762   00009C                     i2l204:
  2763   00009C  C028  FFDA         	movff	??_HighISR+2,fsr2h
  2764   0000A0  C027  FFD9         	movff	??_HighISR+1,fsr2l
  2765   0000A4  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2766   0000A6  0011               	retfie		f
  2767   0000A8                     __end_of_HighISR:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _putCharToRxBuf *****************
  2771 ;; Defined at:
  2772 ;;		line 50 in file "serial.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  byte            1    wreg     unsigned char 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  byte            1    0[COMRAM] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;Total ram usage:        1 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_HighISR
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text24
  2800   000796                     __ptext24:
  2801                           	callstack 0
  2802   000796                     _putCharToRxBuf:
  2803                           	callstack 24
  2804                           
  2805                           ;incstack = 0
  2806                           ;putCharToRxBuf@byte stored from wreg
  2807   000796  6E24               	movwf	putCharToRxBuf@byte^0,c
  2808   000798                     
  2809                           ;serial.c: 51:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  2810   000798  0E13               	movlw	19
  2811   00079A  6422               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  2812   00079C  EFD2  F003         	goto	i2u28_41
  2813   0007A0  EFD4  F003         	goto	i2u28_40
  2814   0007A4                     i2u28_41:
  2815   0007A4  EFD6  F003         	goto	i2l1352
  2816   0007A8                     i2u28_40:
  2817   0007A8  0E00               	movlw	0
  2818   0007AA  6E22               	movwf	_RxBufWriteCnt^0,c	;volatile
  2819   0007AC                     i2l1352:
  2820                           
  2821                           ;serial.c: 52:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  2822   0007AC  0E01               	movlw	low _EUSART4RXbuf
  2823   0007AE  2422               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  2824   0007B0  6ED9               	movwf	fsr2l,c
  2825   0007B2  6ADA               	clrf	fsr2h,c
  2826   0007B4  0E00               	movlw	high _EUSART4RXbuf
  2827   0007B6  22DA               	addwfc	fsr2h,f,c
  2828   0007B8  C024  FFDF         	movff	putCharToRxBuf@byte,indf2
  2829   0007BC  2A22               	incf	_RxBufWriteCnt^0,f,c	;volatile
  2830   0007BE  0012               	return		;funcret
  2831   0007C0                     __end_of_putCharToRxBuf:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _isDataInTxBuf *****************
  2835 ;; Defined at:
  2836 ;;		line 78 in file "serial.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      unsigned char 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;Total ram usage:        0 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_HighISR
  2860 ;;		_sendTxBuf
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text25
  2865   000846                     __ptext25:
  2866                           	callstack 0
  2867   000846                     _isDataInTxBuf:
  2868                           	callstack 24
  2869   000846                     
  2870                           ;serial.c: 79:     return (TxBufWriteCnt!=TxBufReadCnt);
  2871   000846  501F               	movf	_TxBufReadCnt^0,w,c	;volatile
  2872   000848  1820               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  2873   00084A  A4D8               	btfss	status,2,c
  2874   00084C  EF2A  F004         	goto	i2u26_41
  2875   000850  EF2D  F004         	goto	i2u26_40
  2876   000854                     i2u26_41:
  2877   000854  0E01               	movlw	1
  2878   000856  EF2E  F004         	goto	i2u27_40
  2879   00085A                     i2u26_40:
  2880   00085A  0E00               	movlw	0
  2881   00085C                     i2u27_40:
  2882   00085C  0012               	return		;funcret
  2883   00085E                     __end_of_isDataInTxBuf:
  2884                           	callstack 0
  2885                           
  2886 ;; *************** function _getCharFromTxBuf *****************
  2887 ;; Defined at:
  2888 ;;		line 64 in file "serial.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      unsigned char 
  2895 ;; Registers used:
  2896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;Total ram usage:        2 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_HighISR
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text26
  2916   000716                     __ptext26:
  2917                           	callstack 0
  2918   000716                     _getCharFromTxBuf:
  2919                           	callstack 24
  2920   000716                     
  2921                           ;serial.c: 65:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  2922   000716  0E3B               	movlw	59
  2923   000718  641F               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  2924   00071A  EF91  F003         	goto	i2u83_41
  2925   00071E  EF93  F003         	goto	i2u83_40
  2926   000722                     i2u83_41:
  2927   000722  EF95  F003         	goto	i2l1770
  2928   000726                     i2u83_40:
  2929   000726  0E00               	movlw	0
  2930   000728  6E1F               	movwf	_TxBufReadCnt^0,c	;volatile
  2931   00072A                     i2l1770:
  2932                           
  2933                           ;serial.c: 66:     return EUSART4TXbuf[TxBufReadCnt++];
  2934   00072A  2A1F               	incf	_TxBufReadCnt^0,f,c	;volatile
  2935   00072C  041F               	decf	_TxBufReadCnt^0,w,c	;volatile
  2936   00072E  6E24               	movwf	??_getCharFromTxBuf^0,c
  2937   000730  6A25               	clrf	(??_getCharFromTxBuf+1)^0,c
  2938   000732  0E3C               	movlw	low _EUSART4TXbuf
  2939   000734  2424               	addwf	??_getCharFromTxBuf^0,w,c
  2940   000736  6ED9               	movwf	fsr2l,c
  2941   000738  0E01               	movlw	high _EUSART4TXbuf
  2942   00073A  2025               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  2943   00073C  6EDA               	movwf	fsr2h,c
  2944   00073E  50DF               	movf	indf2,w,c
  2945   000740  0012               	return		;funcret
  2946   000742                     __end_of_getCharFromTxBuf:
  2947                           	callstack 0
  2948   000000                     
  2949                           	psect	rparam
  2950   000000                     
  2951                           	psect	temp
  2952   000043                     btemp:
  2953                           	callstack 0
  2954   000043                     	ds	1
  2955   000000                     int$flags	set	btemp
  2956   000000                     wtemp8	set	btemp+1
  2957   000000                     ttemp5	set	btemp+1
  2958   000000                     ttemp6	set	btemp+4
  2959   000000                     ttemp7	set	btemp+8
  2960                           
  2961                           	psect	idloc
  2962                           
  2963                           ;Config register IDLOC0 @ 0x200000
  2964                           ;	unspecified, using default values
  2965   200000                     	org	2097152
  2966   200000  0FFF               	dw	4095
  2967                           
  2968                           ;Config register IDLOC1 @ 0x200002
  2969                           ;	unspecified, using default values
  2970   200002                     	org	2097154
  2971   200002  0FFF               	dw	4095
  2972                           
  2973                           ;Config register IDLOC2 @ 0x200004
  2974                           ;	unspecified, using default values
  2975   200004                     	org	2097156
  2976   200004  0FFF               	dw	4095
  2977                           
  2978                           ;Config register IDLOC3 @ 0x200006
  2979                           ;	unspecified, using default values
  2980   200006                     	org	2097158
  2981   200006  0FFF               	dw	4095
  2982                           
  2983                           ;Config register IDLOC4 @ 0x200008
  2984                           ;	unspecified, using default values
  2985   200008                     	org	2097160
  2986   200008  0FFF               	dw	4095
  2987                           
  2988                           ;Config register IDLOC5 @ 0x20000A
  2989                           ;	unspecified, using default values
  2990   20000A                     	org	2097162
  2991   20000A  0FFF               	dw	4095
  2992                           
  2993                           ;Config register IDLOC6 @ 0x20000C
  2994                           ;	unspecified, using default values
  2995   20000C                     	org	2097164
  2996   20000C  0FFF               	dw	4095
  2997                           
  2998                           ;Config register IDLOC7 @ 0x20000E
  2999                           ;	unspecified, using default values
  3000   20000E                     	org	2097166
  3001   20000E  0FFF               	dw	4095
  3002                           
  3003                           	psect	config
  3004                           
  3005                           ;Config register CONFIG1L @ 0x300000
  3006                           ;	External Oscillator mode Selection bits
  3007                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3008                           ;	Power-up default value for COSC bits
  3009                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3010   300000                     	org	3145728
  3011   300000  AA                 	db	170
  3012                           
  3013                           ;Config register CONFIG1H @ 0x300001
  3014                           ;	unspecified, using default values
  3015                           ;	Clock Out Enable bit
  3016                           ;	CLKOUTEN = 0x1, unprogrammed default
  3017                           ;	Clock Switch Enable bit
  3018                           ;	CSWEN = 0x1, unprogrammed default
  3019                           ;	Fail-Safe Clock Monitor Enable bit
  3020                           ;	FCMEN = 0x1, unprogrammed default
  3021   300001                     	org	3145729
  3022   300001  FF                 	db	255
  3023                           
  3024                           ;Config register CONFIG2L @ 0x300002
  3025                           ;	unspecified, using default values
  3026                           ;	Master Clear Enable bit
  3027                           ;	MCLRE = 0x1, unprogrammed default
  3028                           ;	Power-up Timer Enable bit
  3029                           ;	PWRTE = 0x1, unprogrammed default
  3030                           ;	Low-power BOR enable bit
  3031                           ;	LPBOREN = 0x1, unprogrammed default
  3032                           ;	Brown-out Reset Enable bits
  3033                           ;	BOREN = 0x3, unprogrammed default
  3034   300002                     	org	3145730
  3035   300002  FF                 	db	255
  3036                           
  3037                           ;Config register CONFIG2H @ 0x300003
  3038                           ;	unspecified, using default values
  3039                           ;	Brown Out Reset Voltage selection bits
  3040                           ;	BORV = 0x3, unprogrammed default
  3041                           ;	ZCD Disable bit
  3042                           ;	ZCD = 0x1, unprogrammed default
  3043                           ;	PPSLOCK bit One-Way Set Enable bit
  3044                           ;	PPS1WAY = 0x1, unprogrammed default
  3045                           ;	Stack Full/Underflow Reset Enable bit
  3046                           ;	STVREN = 0x1, unprogrammed default
  3047                           ;	Debugger Enable bit
  3048                           ;	DEBUG = 0x1, unprogrammed default
  3049                           ;	Extended Instruction Set Enable bit
  3050                           ;	XINST = 0x1, unprogrammed default
  3051   300003                     	org	3145731
  3052   300003  FF                 	db	255
  3053                           
  3054                           ;Config register CONFIG3L @ 0x300004
  3055                           ;	WDT Period Select bits
  3056                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3057                           ;	WDT operating mode
  3058                           ;	WDTE = OFF, WDT Disabled
  3059   300004                     	org	3145732
  3060   300004  9F                 	db	159
  3061                           
  3062                           ;Config register CONFIG3H @ 0x300005
  3063                           ;	unspecified, using default values
  3064                           ;	WDT Window Select bits
  3065                           ;	WDTCWS = 0x7, unprogrammed default
  3066                           ;	WDT input clock selector
  3067                           ;	WDTCCS = 0x7, unprogrammed default
  3068   300005                     	org	3145733
  3069   300005  FF                 	db	255
  3070                           
  3071                           ;Config register CONFIG4L @ 0x300006
  3072                           ;	unspecified, using default values
  3073                           ;	Write Protection Block 0
  3074                           ;	WRT0 = 0x1, unprogrammed default
  3075                           ;	Write Protection Block 1
  3076                           ;	WRT1 = 0x1, unprogrammed default
  3077                           ;	Write Protection Block 2
  3078                           ;	WRT2 = 0x1, unprogrammed default
  3079                           ;	Write Protection Block 3
  3080                           ;	WRT3 = 0x1, unprogrammed default
  3081                           ;	Write Protection Block 3
  3082                           ;	WRT4 = 0x1, unprogrammed default
  3083                           ;	Write Protection Block 3
  3084                           ;	WRT5 = 0x1, unprogrammed default
  3085                           ;	Write Protection Block 3
  3086                           ;	WRT6 = 0x1, unprogrammed default
  3087                           ;	Write Protection Block 3
  3088                           ;	WRT7 = 0x1, unprogrammed default
  3089   300006                     	org	3145734
  3090   300006  FF                 	db	255
  3091                           
  3092                           ;Config register CONFIG4H @ 0x300007
  3093                           ;	unspecified, using default values
  3094                           ;	Configuration Register Write Protection bit
  3095                           ;	WRTC = 0x1, unprogrammed default
  3096                           ;	Boot Block Write Protection bit
  3097                           ;	WRTB = 0x1, unprogrammed default
  3098                           ;	Data EEPROM Write Protection bit
  3099                           ;	WRTD = 0x1, unprogrammed default
  3100                           ;	Scanner Enable bit
  3101                           ;	SCANE = 0x1, unprogrammed default
  3102                           ;	Low Voltage Programming Enable bit
  3103                           ;	LVP = 0x1, unprogrammed default
  3104   300007                     	org	3145735
  3105   300007  FF                 	db	255
  3106                           
  3107                           ;Config register CONFIG5L @ 0x300008
  3108                           ;	unspecified, using default values
  3109                           ;	UserNVM Program Memory Code Protection bit
  3110                           ;	CP = 0x1, unprogrammed default
  3111                           ;	DataNVM Memory Code Protection bit
  3112                           ;	CPD = 0x1, unprogrammed default
  3113   300008                     	org	3145736
  3114   300008  FF                 	db	255
  3115                           
  3116                           ;Config register CONFIG5H @ 0x300009
  3117                           ;	unspecified, using default values
  3118   300009                     	org	3145737
  3119   300009  FF                 	db	255
  3120                           
  3121                           ;Config register CONFIG6L @ 0x30000A
  3122                           ;	unspecified, using default values
  3123                           ;	Table Read Protection Block 0
  3124                           ;	EBTR0 = 0x1, unprogrammed default
  3125                           ;	Table Read Protection Block 1
  3126                           ;	EBTR1 = 0x1, unprogrammed default
  3127                           ;	Table Read Protection Block 2
  3128                           ;	EBTR2 = 0x1, unprogrammed default
  3129                           ;	Table Read Protection Block 3
  3130                           ;	EBTR3 = 0x1, unprogrammed default
  3131                           ;	Table Read Protection Block 4
  3132                           ;	EBTR4 = 0x1, unprogrammed default
  3133                           ;	Table Read Protection Block 5
  3134                           ;	EBTR5 = 0x1, unprogrammed default
  3135                           ;	Table Read Protection Block 6
  3136                           ;	EBTR6 = 0x1, unprogrammed default
  3137                           ;	Table Read Protection Block 7
  3138                           ;	EBTR7 = 0x1, unprogrammed default
  3139   30000A                     	org	3145738
  3140   30000A  FF                 	db	255
  3141                           
  3142                           ;Config register CONFIG6H @ 0x30000B
  3143                           ;	unspecified, using default values
  3144                           ;	Boot Block Table Read Protection bit
  3145                           ;	EBTRB = 0x1, unprogrammed default
  3146   30000B                     	org	3145739
  3147   30000B  FF                 	db	255
  3148                           tosu	equ	0xFFF
  3149                           tosh	equ	0xFFE
  3150                           tosl	equ	0xFFD
  3151                           stkptr	equ	0xFFC
  3152                           pclatu	equ	0xFFB
  3153                           pclath	equ	0xFFA
  3154                           pcl	equ	0xFF9
  3155                           tblptru	equ	0xFF8
  3156                           tblptrh	equ	0xFF7
  3157                           tblptrl	equ	0xFF6
  3158                           tablat	equ	0xFF5
  3159                           prodh	equ	0xFF4
  3160                           prodl	equ	0xFF3
  3161                           indf0	equ	0xFEF
  3162                           postinc0	equ	0xFEE
  3163                           postdec0	equ	0xFED
  3164                           preinc0	equ	0xFEC
  3165                           plusw0	equ	0xFEB
  3166                           fsr0h	equ	0xFEA
  3167                           fsr0l	equ	0xFE9
  3168                           wreg	equ	0xFE8
  3169                           indf1	equ	0xFE7
  3170                           postinc1	equ	0xFE6
  3171                           postdec1	equ	0xFE5
  3172                           preinc1	equ	0xFE4
  3173                           plusw1	equ	0xFE3
  3174                           fsr1h	equ	0xFE2
  3175                           fsr1l	equ	0xFE1
  3176                           bsr	equ	0xFE0
  3177                           indf2	equ	0xFDF
  3178                           postinc2	equ	0xFDE
  3179                           postdec2	equ	0xFDD
  3180                           preinc2	equ	0xFDC
  3181                           plusw2	equ	0xFDB
  3182                           fsr2h	equ	0xFDA
  3183                           fsr2l	equ	0xFD9
  3184                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        59
    BSS         155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      66
    BANK0           160     62     121
    BANK1           256      0     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 1
		 -> main@buf(BANK0[1]), 


Critical Paths under _main in COMRAM

    _main->_readcard
    _readcard->_levels
    _levels->_color_read_Blue
    _levels->_color_read_Green
    _levels->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0    2883
                                             29 COMRAM     2     2      0
                                              0 BANK0     62    62      0
                    _Interrupts_init
                              _Light
                          _LightInit
                        _Timer0_init
                   _TxBufferedString
                   _color_click_init
                         _initUSART4
                           _readcard
 ---------------------------------------------------------------------------------
 (1) _readcard                                            14    14      0    2080
                                             21 COMRAM     8     8      0
                            ___awdiv
                             _levels
 ---------------------------------------------------------------------------------
 (2) _levels                                               4     2      2     829
                                             17 COMRAM     4     2      2
                              _Light
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              7 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _Light                                                1     1      0      88
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              8 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              7 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              7 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LightInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              4     4      0      38
                                              2 COMRAM     4     4      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Light
   _LightInit
   _Timer0_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _readcard
     ___awdiv
     _levels
       _Light
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      78       7       46.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      79       5       75.6%
BITBIGSFRhlhhll     8F      0       0      40        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      42       1       70.2%
BITBIGSFRhlhhhh     4B      0       0      34        0.0%
BITBIGSFRhlhlhl     36      0       0      44        0.0%
BITBIGSFRhlhlhl     2D      0       0      43        0.0%
BITBIGSFRhlhll      2A      0       0      46        0.0%
BITBIGSFRlll        26      0       0      51        0.0%
BITBIGSFRhlhhhh     1B      0       0      33        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRhlhlhl      C      0       0      45        0.0%
BITBIGSFRllhh        B      0       0      49        0.0%
BITBIGSFRhll         9      0       0      47        0.0%
BITBIGSFRhlhlhh      8      0       0      41        0.0%
BITBIGSFRllhl        6      0       0      50        0.0%
BITBIGSFRlh          3      0       0      48        0.0%
BITBIGSFRhlhhlh      2      0       0      39        0.0%
BITBIGSFRhlhhhl      2      0       0      36        0.0%
BITBIGSFRhlhhhl      1      0       0      35        0.0%
BITBIGSFRhlhlhl      1      0       0      42        0.0%
BITBIGSFRhlhhhl      1      0       0      37        0.0%
BITBIGSFRhlhhhl      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     133      52        0.0%
DATA                 0      0     133       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 01 23:50:02 2022

               _color_read_Red 04BE                _color_read_Blue 055E                   ___awdiv@sign 002F  
             _color_read_Green 050E              ??_Interrupts_init 002A                            l103 06E4  
                          l112 05AC                            l106 0806                            l115 055C  
                          l109 050C                            l151 05F0                            l143 0398  
                          l306 0794                            l226 04BC                            l219 087A  
                          l315 0714                            l341 0826                            l371 076A  
                          l196 086C                            l380 08A4                            l269 0844  
                          l374 07C0                            l383 0890                            l392 0674  
                          l377 07E6                            l386 089A                            l626 045C  
                          l389 0886                            u600 07E6                            u601 07E2  
                          u610 065E                            u611 0656                            u700 03EC  
                          u701 03E8                            u710 040A                            u630 0470  
                          u711 0406                            u631 046C                            u720 0426  
                          u640 0486                            u800 034A                            u721 0422  
                          u641 0482                            u801 0346                            u730 044C  
                          u650 049E                            u810 0360                            u731 0448  
                          u651 049A                            u811 035C                            u820 0714  
                          u660 04B6                            u628 0660                            u740 02C0  
                          u900 0142                            u821 0710                            u661 04B2  
                          u741 02BC                            u901 013E                            u670 077E  
                          u590 07D0                            u750 02D6                            u671 077A  
                          u591 07CC                            u751 02D2                            u911 014C  
                          u680 03AC                            u760 02EC                            u920 0166  
                          u840 00D8                            u681 03A8                            u761 02E8  
                          u921 0162                            u841 00D4                            u690 03C6  
                          u770 0302                            u691 03C2                            u771 02FE  
                          u931 0170                            u851 00E2                            u780 0318  
                          u940 018A                            u860 00FA                            u781 0314  
                          u941 0186                            u861 00F6                            u790 032E  
                          u791 032A                            u951 0194                            u871 0104  
                          u960 01AE                            u880 011E                            u961 01AA  
                          u881 011A                            u971 01B8                            u891 0128  
                          u980 01D2                            u981 01CE                            u991 01DC  
                          _red 0019                            wreg 000FE8                    main@buf_110 008A  
                  main@buf_112 0083                    main@buf_120 0060                    main@buf_114 0090  
                  main@buf_106 007C                    main@buf_108 0096                    main@buf_116 006C  
                  main@buf_118 0074                           l1500 07D0                           l1502 089C  
                         l1510 0892                           l1504 08A0                           l1512 0896  
                         l1600 039E                           l1520 063A                           l1506 087E  
                         l1610 03CE                           l1602 03AC                           l1522 0642  
                         l1514 0888                           l1508 0882                           l1620 03FC  
                         l1612 03D2                           l1604 03B4                           l1540 048C  
                         l1532 0460                           l1524 064A                           l1516 088C  
                         l1700 02AA                           l1630 0430                           l1622 040A  
                         l1614 03DA                           l1606 03B8                           l1542 049E  
                         l1534 0470                           l1526 0670                           l1518 0636  
                         l1550 0504                           l1710 0318                           l1702 02C0  
                         l1632 0436                           l1624 0410                           l1616 03EC  
                         l1608 03C6                           l1544 04A4                           l1536 0476  
                         l1528 0672                           l1560 050E                           l1704 02D6  
                         l1800 0142                           l1642 0808                           l1570 0752  
                         l1650 0828                           l1626 0426                           l1618 03F4  
                         l1634 043C                           l1546 04B6                           l1538 0486  
                         l1554 055E                           l1562 0554                           l1706 02EC  
                         l1722 0334                           l1810 019C                           l1802 0154  
                         l1644 0810                           l1572 0754                           l1660 0842  
                         l1652 0832                           l1636 044C                           l1628 042E  
                         l1556 05A4                           l1548 04BE                           l1580 05AE  
                         l1732 036C                           l1724 034A                           l1708 0302  
                         l1820 01F0                           l1812 01AE                           l1804 0166  
                         l1662 085E                           l1646 081A                           l1590 076E  
                         l1574 0756                           l1566 0742                           l1670 06D0  
                         l1654 0834                           l1638 0454                           l1582 05B4  
                         l1726 0360                           l1718 032E                           l1822 01F6  
                         l1814 01C0                           l1806 0178                           l1648 0824  
                         l1592 077E                           l1760 06EA                           l1576 0758  
                         l1568 074C                           l1672 06DA                           l1664 06B2  
                         l1656 083E                           l1584 05CC                           l1744 0384  
                         l1680 0244                           l1832 0204                           l1824 01FA  
                         l1816 01D2                           l1808 018A                           l1674 086E  
                         l1594 0782                           l1762 06F8                           l1498 07C0  
                         l1578 07EA                           l1666 06B6                           l1658 0840  
                         l1586 05D8                           l1754 0396                           l1738 0378  
                         l1690 024C                           l1682 0248                           l1834 021C  
                         l1826 01FE                           l1818 01E4                           l1596 0792  
                         l1764 06FC                           l1668 06C0                           l1588 05E4  
                         l1748 038A                           l1692 024C                           l1684 024C  
                         l1676 0238                           l1780 00BC                           l1758 06E6  
                         l1598 039A                           l1694 024C                           l1686 024C  
                         l1678 0244                           l1790 00EA                           l1782 00C0  
                         l1774 00AC                           l1696 026A                           l1688 024C  
                         l1792 00FA                           l1784 00C8                           l1776 00B4  
                         l1698 028A                           l1794 010C                           l1786 00C8  
                         l1778 00B8                           l1796 011E                           l1788 00D8  
                         l1798 0130                           u1000 0230                           u1001 022C  
                         u1107 05BE                           u1117 06C6                   _BAUD4CONbits 000EE9  
                         u1097 020E                           _blue 0017                           _main 00AC  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 0043                           prodh 000FF4  
                         prodl 000FF3                           start 00A8         __end_of_color_read_Red 050E  
              __end_of_HighISR 00A8                   ___param_bank 000000                          ?_main 0024  
              __end_of___awdiv 045E                ___awdiv@divisor 002C                          i2l204 009C  
                        i2l302 0740                          i2l309 085C                          i2l295 07BE  
              ___awdiv@counter 002E                          _TMR0H 000FD4                          _TMR0L 000FD3  
                        _Light 045E     __end_of_I2C_2_Master_Start 08A6     __end_of_I2C_2_Master_Write 0888  
                        _green 0015                          main@j 009C                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          ttemp5 0044  
                        ttemp6 0047                          ttemp7 004B                          status 000FD8  
                        wtemp8 0044        __end_of_color_read_Blue 05AE          _I2C_2_Master_RepStart 0888  
           putCharToRxBuf@byte 0024                ?_color_read_Red 002E                __initialization 05F2  
                 __end_of_main 0238             putCharToTxBuf@byte 002A                         ??_main 0041  
                __activetblptr 000000                         ?_Light 0024               ___awdiv@dividend 002A  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RD5PPS 000E6F  
                       _RD6PPS 000E70                         i2l1350 07A8                         i2l1344 0846  
                       i2l1352 07AC                         i2l1354 07BC                         i2l1348 0798  
                       i2l1840 0012                         i2l1770 072A                         i2l1850 005C  
                       i2l1842 0038                         i2l1844 0040                         i2l1852 007E  
                       i2l1766 0716                         i2l1854 008E                         i2l1846 0054  
                       i2l1768 0726                         i2l1856 0092                         i2l1848 0058  
                       i2l1858 0098                      ??_HighISR 0026       __end_of_color_click_init 06E6  
                       _RX4PPS 000E15                         _TX4REG 000EE4                  ??_Timer0_init 002A  
             _getCharFromTxBuf 0716                      ??___awdiv 002E                     _ReturnFLAG 0023  
                       _levels 05AE                         clear_0 0618                         clear_1 0624  
             __end_of_readcard 039A               ___awdiv@quotient 0030                         isa$std 000001  
            ?_TxBufferedString 002B                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 002D                    readcard@red 003F  
        __end_of_isDataInTxBuf 085E                     __accesstop 0060        __end_of__initialization 062A  
     __end_of_color_read_Green 055E         ?_I2C_2_Master_RepStart 0024                  ___rparam_used 000001  
             ?_color_read_Blue 002E                _Interrupts_init 085E                  __end_of_Light 04BE  
               __pcstackCOMRAM 0024                   __pidataBANK0 0676            __end_of_Timer0_init 0828  
            __end_of_LightInit 087C                        ??_Light 002A                     __pbssBANK1 0100  
            _color_writetoaddr 07E8             ?_color_writetoaddr 002C                        ?_levels 0035  
          ??_color_writetoaddr 002D                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      i2u26_40 085A                        i2u26_41 0854                        i2u27_40 085C  
                      i2u28_40 07A8                        i2u28_41 07A4                        i2u83_40 0726  
                      i2u83_41 0722                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
      __end_of_Interrupts_init 086E         color_writetoaddr@value 002C               ??_color_read_Red 0030  
                      _HighISR 0008                      ?_readcard 0024      __end_of_color_writetoaddr 0808  
           _I2C_2_Master_Start 089C                     _initUSART4 0828             _I2C_2_Master_Write 087C  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 0033  
                  _Timer0_init 0808                        ___awdiv 039A            ?_I2C_2_Master_Start 0024  
          ?_I2C_2_Master_Write 0024                        __pcinit 05F2                        __ramtop 0E00  
                      __ptext0 00AC                        __ptext1 0238                        __ptext2 05AE  
                      __ptext3 04BE                        __ptext4 050E                        __ptext5 055E  
                      __ptext6 0888                        __ptext7 0634                        __ptext8 045E  
                      __ptext9 039A                  _RxBufWriteCnt 0022       __end_of_getCharFromTxBuf 0742  
                      main@buf 009B           ??_I2C_2_Master_Start 002B           ??_I2C_2_Master_Write 002B  
         end_of_initialization 062A                        levels@i 0035                     ??_readcard 0039  
            ?_color_click_init 0024             ??_color_click_init 002E                   readcard@blue 0040  
                      postdec1 000FE5                        postinc0 000FEE                     main@F14600 00D4  
                   main@F14602 00CE                     main@F14610 00AA                     main@F14604 00BA  
                   main@F14612 009E                     main@F14606 00C8                     main@F14608 00B2  
                   main@F14598 00C1                      _TRISAbits 000F81                      _TRISDbits 000F84  
                    _TRISFbits 000F86                      _TRISGbits 000F87       color_writetoaddr@address 002D  
      ??_I2C_2_Master_RepStart 002B               ?_Interrupts_init 0024                   _EUSART4RXbuf 0001  
                 _EUSART4TXbuf 013C                   _EUSART4VXbuf 0100              ?_color_read_Green 002E  
                  ?_initUSART4 0024             ??_color_read_Green 0030                 __end_of_levels 05F2  
          start_initialization 05F2                      _LightInit 086E                  _TxBufWriteCnt 0020  
          color_read_Green@tmp 0033                 _putCharToRxBuf 0796                 _putCharToTxBuf 076C  
                  __pdataBANK0 009E                       ??_levels 0037                    __pbssCOMRAM 0001  
                __pcstackBANK0 0060                     ?_LightInit 0024                       ?_HighISR 0024  
                 ?_Timer0_init 0024         __end_of_putCharToRxBuf 07C0         __end_of_putCharToTxBuf 0796  
                    __pintcode 0008                       ?___awdiv 002A         TxBufferedString@string 002B  
         I2C_2_Master_Read@ack 002C                 Light@colorcode 002A           I2C_2_Master_Read@tmp 002D  
            _I2C_2_Master_Idle 07C0              _I2C_2_Master_Init 0742              _I2C_2_Master_Read 0634  
            _I2C_2_Master_Stop 0892                   _RxBufReadCnt 0021             ?_I2C_2_Master_Idle 0024  
           ?_I2C_2_Master_Init 0024             ?_I2C_2_Master_Read 0024             ?_I2C_2_Master_Stop 0024  
                _VxBufWriteCnt 001E              ?_getCharFromTxBuf 0024             ??_getCharFromTxBuf 0024  
          ??_I2C_2_Master_Idle 002A            ??_I2C_2_Master_Init 002A            ??_I2C_2_Master_Read 002B  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 002B                  _isDataInTxBuf 0846  
                     _LATDbits 000F7C                       _LATFbits 000F7E               _TxBufferedString 06E6  
                     _LATGbits 000F7F                       _PIE0bits 000E29                       _PIE4bits 000E2D  
                     i2u101_40 0024                       i2u101_41 001E                       i2u101_46 0026  
                     i2u102_40 0038                       i2u102_41 0034                       i2u103_40 0054  
                     i2u103_41 0050                       i2u104_40 006E                       i2u104_41 0066  
                     i2u106_40 008E                       i2u105_48 0070                       i2u106_41 008A  
                     _PIR4bits 000E37                ?_putCharToRxBuf 0024                ?_putCharToTxBuf 0024  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8      __end_of_I2C_2_Master_Idle 07E8  
    __end_of_I2C_2_Master_Init 076C      __end_of_I2C_2_Master_Read 0676      __end_of_I2C_2_Master_Stop 089C  
  I2C_2_Master_Write@data_byte 002B                      main@color 009D              ??_color_read_Blue 0030  
                  ??_LightInit 002A                   _TxBufReadCnt 001F                      copy_data0 0606  
               ?_isDataInTxBuf 0024  __end_of_I2C_2_Master_RepStart 0892             color_read_Blue@tmp 0033  
                 ??_initUSART4 002A                       __Hrparam 0000                       __Lrparam 0000  
                     _charFLAG 001C                     _ANSELDbits 000EA7                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6             __end_of_initUSART4 0846                   _VxBufReadCnt 001D  
                     __ptext10 0828                       __ptext11 06B2                       __ptext20 0808  
                     __ptext12 07E8                       __ptext21 086E                       __ptext13 087C  
                     __ptext22 085E                       __ptext14 0892                       __ptext15 089C  
                     __ptext24 0796                       __ptext16 07C0                       __ptext25 0846  
                     __ptext17 0742                       __ptext26 0716                       __ptext18 06E6  
                     __ptext19 076C                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     _readcard 0238                       _sendFLAG 001B                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 0043                 readcard@ratio1 003B  
               readcard@ratio2 003D                 readcard@ratio3 0039                     _INTCONbits 000FF2  
              ??_isDataInTxBuf 0024                       intlevel2 0000                     HighISR@reg 0029  
             _color_click_init 06B2       __end_of_TxBufferedString 0716                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8               ??_putCharToRxBuf 0024  
             ??_putCharToTxBuf 002A  
