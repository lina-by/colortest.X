

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 02 14:45:06 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Version 2.35
    47                           ; Generated 05/05/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F67K40 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82                           	psect	idataBANK0
    83   000B5C                     __pidataBANK0:
    84                           	callstack 0
    85                           
    86                           ;initializer for main@F14607
    87   000B5C  6C                 	db	108
    88   000B5D  69                 	db	105
    89   000B5E  67                 	db	103
    90   000B5F  68                 	db	104
    91   000B60  74                 	db	116
    92   000B61  20                 	db	32
    93   000B62  62                 	db	98
    94   000B63  6C                 	db	108
    95   000B64  75                 	db	117
    96   000B65  65                 	db	101
    97   000B66  20                 	db	32
    98   000B67  00                 	db	0
    99                           
   100                           ;initializer for main@F14605
   101   000B68  6F                 	db	111
   102   000B69  72                 	db	114
   103   000B6A  61                 	db	97
   104   000B6B  6E                 	db	110
   105   000B6C  67                 	db	103
   106   000B6D  65                 	db	101
   107   000B6E  20                 	db	32
   108   000B6F  00                 	db	0
   109                           
   110                           ;initializer for main@F14603
   111   000B70  79                 	db	121
   112   000B71  65                 	db	101
   113   000B72  6C                 	db	108
   114   000B73  6C                 	db	108
   115   000B74  6F                 	db	111
   116   000B75  77                 	db	119
   117   000B76  20                 	db	32
   118   000B77  00                 	db	0
   119                           
   120                           ;initializer for main@F14599
   121   000B78  67                 	db	103
   122   000B79  72                 	db	114
   123   000B7A  65                 	db	101
   124   000B7B  65                 	db	101
   125   000B7C  6E                 	db	110
   126   000B7D  20                 	db	32
   127   000B7E  00                 	db	0
   128                           
   129                           ;initializer for main@F14593
   130   000B7F  77                 	db	119
   131   000B80  68                 	db	104
   132   000B81  69                 	db	105
   133   000B82  74                 	db	116
   134   000B83  65                 	db	101
   135   000B84  20                 	db	32
   136   000B85  00                 	db	0
   137                           
   138                           ;initializer for main@F14601
   139   000B86  70                 	db	112
   140   000B87  69                 	db	105
   141   000B88  6E                 	db	110
   142   000B89  6B                 	db	107
   143   000B8A  20                 	db	32
   144   000B8B  00                 	db	0
   145                           
   146                           ;initializer for main@F14597
   147   000B8C  62                 	db	98
   148   000B8D  6C                 	db	108
   149   000B8E  75                 	db	117
   150   000B8F  65                 	db	101
   151   000B90  20                 	db	32
   152   000B91  00                 	db	0
   153                           
   154                           ;initializer for main@F14595
   155   000B92  72                 	db	114
   156   000B93  65                 	db	101
   157   000B94  64                 	db	100
   158   000B95  20                 	db	32
   159   000B96  00                 	db	0
   160   000000                     _RC4STAbits	set	3815
   161   000000                     _SP4BRGH	set	3814
   162   000000                     _SP4BRGL	set	3813
   163   000000                     _TX4STAbits	set	3816
   164   000000                     _BAUD4CONbits	set	3817
   165   000000                     _LATAbits	set	3961
   166   000000                     _LATDbits	set	3964
   167   000000                     _SSP2CON2bits	set	3802
   168   000000                     _RX4PPS	set	3605
   169   000000                     _PIE0bits	set	3625
   170   000000                     _PIE4bits	set	3629
   171   000000                     _LATFbits	set	3966
   172   000000                     _LATGbits	set	3967
   173   000000                     _TRISAbits	set	3969
   174   000000                     _TRISFbits	set	3974
   175   000000                     _TRISGbits	set	3975
   176   000000                     _INTCONbits	set	4082
   177   000000                     _PIR4bits	set	3639
   178   000000                     _RC0PPS	set	3682
   179   000000                     _RC4REG	set	3811
   180   000000                     _TX4REG	set	3812
   181   000000                     _TRISDbits	set	3972
   182   000000                     _RD5PPS	set	3695
   183   000000                     _ANSELDbits	set	3751
   184   000000                     _SSP2ADD	set	3798
   185   000000                     _SSP2CON1bits	set	3801
   186   000000                     _SSP2CLKPPS	set	3612
   187   000000                     _SSP2DATPPS	set	3613
   188   000000                     _SSP2CON2	set	3802
   189   000000                     _SSP2STAT	set	3800
   190   000000                     _SSP2BUF	set	3797
   191   000000                     _RD6PPS	set	3696
   192                           
   193                           ; #config settings
   194                           
   195                           	psect	cinit
   196   000AD8                     __pcinit:
   197                           	callstack 0
   198   000AD8                     start_initialization:
   199                           	callstack 0
   200   000AD8                     __initialization:
   201                           	callstack 0
   202                           
   203                           ; Initialize objects allocated to BANK0 (59 bytes)
   204                           ; load TBLPTR registers with __pidataBANK0
   205   000AD8  0E5C               	movlw	low __pidataBANK0
   206   000ADA  6EF6               	movwf	tblptrl,c
   207   000ADC  0E0B               	movlw	high __pidataBANK0
   208   000ADE  6EF7               	movwf	tblptrh,c
   209   000AE0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   210   000AE2  6EF8               	movwf	tblptru,c
   211   000AE4  EE00  F0B2         	lfsr	0,__pdataBANK0
   212   000AE8  EE10 F03B          	lfsr	1,59
   213   000AEC                     copy_data0:
   214   000AEC  0009               	tblrd		*+
   215   000AEE  CFF5 FFEE          	movff	tablat,postinc0
   216   000AF2  50E5               	movf	postdec1,w,c
   217   000AF4  50E1               	movf	fsr1l,w,c
   218   000AF6  E1FA               	bnz	copy_data0
   219                           
   220                           ; Clear objects allocated to BANK1 (160 bytes)
   221   000AF8  EE01  F000         	lfsr	0,__pbssBANK1
   222   000AFC  0EA0               	movlw	160
   223   000AFE                     clear_0:
   224   000AFE  6AEE               	clrf	postinc0,c
   225   000B00  06E8               	decf	wreg,f,c
   226   000B02  E1FD               	bnz	clear_0
   227                           
   228                           ; Clear objects allocated to COMRAM (28 bytes)
   229   000B04  EE00  F02E         	lfsr	0,__pbssCOMRAM
   230   000B08  0E1C               	movlw	28
   231   000B0A                     clear_1:
   232   000B0A  6AEE               	clrf	postinc0,c
   233   000B0C  06E8               	decf	wreg,f,c
   234   000B0E  E1FD               	bnz	clear_1
   235   000B10                     end_of_initialization:
   236                           	callstack 0
   237   000B10                     __end_of__initialization:
   238                           	callstack 0
   239   000B10  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   240   000B12  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   241   000B14  0100               	movlb	0
   242   000B16  EF05  F003         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245   00002E                     __pbssCOMRAM:
   246                           	callstack 0
   247   00002E                     _EUSART4RXbuf:
   248                           	callstack 0
   249   00002E                     	ds	20
   250   000042                     _VxBufReadCnt:
   251                           	callstack 0
   252   000042                     	ds	1
   253   000043                     _VxBufWriteCnt:
   254                           	callstack 0
   255   000043                     	ds	1
   256   000044                     _TxBufReadCnt:
   257                           	callstack 0
   258   000044                     	ds	1
   259   000045                     _TxBufWriteCnt:
   260                           	callstack 0
   261   000045                     	ds	1
   262   000046                     _RxBufReadCnt:
   263                           	callstack 0
   264   000046                     	ds	1
   265   000047                     _RxBufWriteCnt:
   266                           	callstack 0
   267   000047                     	ds	1
   268   000048                     _sendFLAG:
   269                           	callstack 0
   270   000048                     	ds	1
   271   000049                     _charFLAG:
   272                           	callstack 0
   273   000049                     	ds	1
   274                           
   275                           	psect	dataBANK0
   276   0000B2                     __pdataBANK0:
   277                           	callstack 0
   278   0000B2                     main@F14607:
   279                           	callstack 0
   280   0000B2                     	ds	12
   281   0000BE                     main@F14605:
   282                           	callstack 0
   283   0000BE                     	ds	8
   284   0000C6                     main@F14603:
   285                           	callstack 0
   286   0000C6                     	ds	8
   287   0000CE                     main@F14599:
   288                           	callstack 0
   289   0000CE                     	ds	7
   290   0000D5                     main@F14593:
   291                           	callstack 0
   292   0000D5                     	ds	7
   293   0000DC                     main@F14601:
   294                           	callstack 0
   295   0000DC                     	ds	6
   296   0000E2                     main@F14597:
   297                           	callstack 0
   298   0000E2                     	ds	6
   299   0000E8                     main@F14595:
   300                           	callstack 0
   301   0000E8                     	ds	5
   302                           
   303                           	psect	bssBANK1
   304   000100                     __pbssBANK1:
   305                           	callstack 0
   306   000100                     _EUSART4TXbuf:
   307                           	callstack 0
   308   000100                     	ds	100
   309   000164                     _EUSART4VXbuf:
   310                           	callstack 0
   311   000164                     	ds	60
   312                           
   313                           	psect	cstackBANK0
   314   000060                     __pcstackBANK0:
   315                           	callstack 0
   316   000060                     main@buf_103:
   317                           	callstack 0
   318                           
   319                           ; 12 bytes @ 0x0
   320   000060                     	ds	12
   321   00006C                     main@buf_99:
   322                           	callstack 0
   323                           
   324                           ; 8 bytes @ 0xC
   325   00006C                     	ds	8
   326   000074                     main@buf_101:
   327                           	callstack 0
   328                           
   329                           ; 8 bytes @ 0x14
   330   000074                     	ds	8
   331   00007C                     main@buf_89:
   332                           	callstack 0
   333                           
   334                           ; 7 bytes @ 0x1C
   335   00007C                     	ds	7
   336   000083                     main@buf_95:
   337                           	callstack 0
   338                           
   339                           ; 7 bytes @ 0x23
   340   000083                     	ds	7
   341   00008A                     main@buf:
   342                           	callstack 0
   343                           
   344                           ; 15 bytes @ 0x2A
   345   00008A                     	ds	15
   346   000099                     main@buf_93:
   347                           	callstack 0
   348                           
   349                           ; 6 bytes @ 0x39
   350   000099                     	ds	6
   351   00009F                     main@buf_97:
   352                           	callstack 0
   353                           
   354                           ; 6 bytes @ 0x3F
   355   00009F                     	ds	6
   356   0000A5                     main@buf_91:
   357                           	callstack 0
   358                           
   359                           ; 5 bytes @ 0x45
   360   0000A5                     	ds	5
   361   0000AA                     main@j:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x4A
   365   0000AA                     	ds	1
   366   0000AB                     main@colorL:
   367                           	callstack 0
   368                           
   369                           ; 6 bytes @ 0x4B
   370   0000AB                     	ds	6
   371   0000B1                     main@color:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x51
   375   0000B1                     	ds	1
   376                           
   377                           	psect	cstackCOMRAM
   378   000001                     __pcstackCOMRAM:
   379                           	callstack 0
   380   000001                     ??_getCharFromTxBuf:
   381   000001                     putCharToRxBuf@byte:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x0
   385   000001                     	ds	2
   386   000003                     ??_HighISR:
   387                           
   388                           ; 1 bytes @ 0x2
   389   000003                     	ds	3
   390   000006                     HighISR@reg:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x5
   394   000006                     	ds	1
   395   000007                     ??_I2C_2_Master_Idle:
   396   000007                     ?___lwdiv:
   397                           	callstack 0
   398   000007                     Light@colorcode:
   399                           	callstack 0
   400   000007                     putCharToTxBuf@byte:
   401                           	callstack 0
   402   000007                     ___lwdiv@dividend:
   403                           	callstack 0
   404   000007                     ___flge@ff1:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x6
   408   000007                     	ds	1
   409   000008                     ??_I2C_2_Master_Read:
   410   000008                     I2C_2_Master_Write@data_byte:
   411                           	callstack 0
   412   000008                     TxBufferedString@string:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x7
   416   000008                     	ds	1
   417   000009                     color_writetoaddr@value:
   418                           	callstack 0
   419   000009                     I2C_2_Master_Read@ack:
   420                           	callstack 0
   421   000009                     ___lwdiv@divisor:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x8
   425   000009                     	ds	1
   426   00000A                     color_writetoaddr@address:
   427                           	callstack 0
   428   00000A                     I2C_2_Master_Read@tmp:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x9
   432   00000A                     	ds	1
   433   00000B                     ??_color_click_init:
   434   00000B                     ?_color_read_Red:
   435                           	callstack 0
   436   00000B                     ?_color_read_Blue:
   437                           	callstack 0
   438   00000B                     ?_color_read_Green:
   439                           	callstack 0
   440   00000B                     ___lwdiv@quotient:
   441                           	callstack 0
   442   00000B                     ___flge@ff2:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0xA
   446   00000B                     	ds	2
   447   00000D                     ??_color_read_Red:
   448   00000D                     ??_color_read_Blue:
   449   00000D                     ??_color_read_Green:
   450   00000D                     ___lwdiv@counter:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0xC
   454   00000D                     	ds	1
   455   00000E                     ?___xxtofl:
   456                           	callstack 0
   457   00000E                     ___xxtofl@val:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0xD
   461   00000E                     	ds	1
   462   00000F                     ??___flge:
   463                           
   464                           ; 1 bytes @ 0xE
   465   00000F                     	ds	1
   466   000010                     color_read_Red@tmp:
   467                           	callstack 0
   468   000010                     color_read_Blue@tmp:
   469                           	callstack 0
   470   000010                     color_read_Green@tmp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xF
   474   000010                     	ds	2
   475   000012                     ??___xxtofl:
   476   000012                     levels@i:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x11
   480   000012                     	ds	2
   481   000014                     levels@colorL:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x13
   485   000014                     	ds	2
   486   000016                     ??_levels:
   487   000016                     ___xxtofl@sign:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x15
   491   000016                     	ds	1
   492   000017                     ___xxtofl@exp:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x16
   496   000017                     	ds	1
   497   000018                     ___xxtofl@arg:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x17
   501   000018                     	ds	4
   502   00001C                     readcard@colorL:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1B
   506   00001C                     	ds	2
   507   00001E                     
   508                           ; 1 bytes @ 0x1D
   509   00001E                     	ds	2
   510   000020                     readcard@ratio3:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x1F
   514   000020                     	ds	4
   515   000024                     readcard@ratio1:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x23
   519   000024                     	ds	4
   520   000028                     readcard@ratio2:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x27
   524   000028                     	ds	4
   525   00002C                     ??_main:
   526                           
   527                           ; 1 bytes @ 0x2B
   528   00002C                     	ds	2
   529                           
   530 ;;
   531 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   532 ;;
   533 ;; *************** function _main *****************
   534 ;; Defined at:
   535 ;;		line 44 in file "main.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  buf            12    0[BANK0 ] unsigned char [12]
   540 ;;  buf             8   20[BANK0 ] unsigned char [8]
   541 ;;  buf             8   12[BANK0 ] unsigned char [8]
   542 ;;  buf             6   63[BANK0 ] unsigned char [6]
   543 ;;  buf             7   35[BANK0 ] unsigned char [7]
   544 ;;  buf             6   57[BANK0 ] unsigned char [6]
   545 ;;  buf             5   69[BANK0 ] unsigned char [5]
   546 ;;  buf             7   28[BANK0 ] unsigned char [7]
   547 ;;  color           1   81[BANK0 ] unsigned char 
   548 ;;  buf            15   42[BANK0 ] unsigned char [15]
   549 ;;  colorL          6   75[BANK0 ] struct RGB_val
   550 ;;  j               1   74[BANK0 ] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   561 ;;      Locals:         0      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   563 ;;      Totals:         2      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   564 ;;Total ram usage:       84 bytes
   565 ;; Hardware stack levels required when called: 7
   566 ;; This function calls:
   567 ;;		_Interrupts_init
   568 ;;		_Light
   569 ;;		_LightInit
   570 ;;		_TxBufferedString
   571 ;;		_color_click_init
   572 ;;		_initUSART4
   573 ;;		_readcard
   574 ;; This function is called by:
   575 ;;		Startup code after reset
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text0
   580   00060A                     __ptext0:
   581                           	callstack 0
   582   00060A                     _main:
   583                           	callstack 24
   584   00060A                     
   585                           ;main.c: 45:     struct RGB_val colorL;;main.c: 47:     initUSART4();
   586   00060A  EC7B  F006         	call	_initUSART4	;wreg free
   587   00060E                     
   588                           ;main.c: 48:     Interrupts_init();
   589   00060E  EC96  F006         	call	_Interrupts_init	;wreg free
   590   000612                     
   591                           ;main.c: 49:     color_click_init();
   592   000612  ECE8  F005         	call	_color_click_init	;wreg free
   593   000616                     
   594                           ;main.c: 50:     LightInit();
   595   000616  EC9E  F006         	call	_LightInit	;wreg free
   596   00061A                     l1805:
   597                           
   598                           ;main.c: 55:     Light(0);
   599   00061A  0E00               	movlw	0
   600   00061C  ECC4  F004         	call	_Light
   601   000620                     
   602                           ;main.c: 56:         unsigned char color = readcard(&colorL);
   603   000620  0EAB               	movlw	low main@colorL
   604   000622  6E1C               	movwf	readcard@colorL^0,c
   605   000624  0E00               	movlw	high main@colorL
   606   000626  6E1D               	movwf	(readcard@colorL+1)^0,c
   607   000628  EC56  F000         	call	_readcard	;wreg free
   608   00062C  0100               	movlb	0	; () banked
   609   00062E  6FB1               	movwf	main@color& (0+255),b
   610   000630                     
   611                           ; BSR set to: 0
   612                           ;main.c: 57:         if(color==0){unsigned char buf[]="white ";}
   613   000630  51B1               	movf	main@color& (0+255),w,b
   614   000632  A4D8               	btfss	status,2,c
   615   000634  EF1E  F003         	goto	u1201
   616   000638  EF20  F003         	goto	u1200
   617   00063C                     u1201:
   618   00063C  EF29  F003         	goto	l1813
   619   000640                     u1200:
   620   000640                     
   621                           ; BSR set to: 0
   622   000640  EE20  F0D5         	lfsr	2,main@F14593
   623   000644  EE10  F07C         	lfsr	1,main@buf_89
   624   000648  0E06               	movlw	6
   625   00064A                     u1211:
   626   00064A  CFDB FFE3          	movff	plusw2,plusw1
   627   00064E  06E8               	decf	wreg,f,c
   628   000650  E2FC               	bc	u1211
   629   000652                     l1813:
   630                           
   631                           ; BSR set to: 0
   632                           ;main.c: 58:         if(color==1){unsigned char buf[]="red ";}
   633   000652  05B1               	decf	main@color& (0+255),w,b
   634   000654  A4D8               	btfss	status,2,c
   635   000656  EF2F  F003         	goto	u1221
   636   00065A  EF31  F003         	goto	u1220
   637   00065E                     u1221:
   638   00065E  EF3A  F003         	goto	l1817
   639   000662                     u1220:
   640   000662                     
   641                           ; BSR set to: 0
   642   000662  EE20  F0E8         	lfsr	2,main@F14595
   643   000666  EE10  F0A5         	lfsr	1,main@buf_91
   644   00066A  0E04               	movlw	4
   645   00066C                     u1231:
   646   00066C  CFDB FFE3          	movff	plusw2,plusw1
   647   000670  06E8               	decf	wreg,f,c
   648   000672  E2FC               	bc	u1231
   649   000674                     l1817:
   650                           
   651                           ; BSR set to: 0
   652                           ;main.c: 59:         if(color==2){unsigned char buf[]="blue ";}
   653   000674  0E02               	movlw	2
   654   000676  19B1               	xorwf	main@color& (0+255),w,b
   655   000678  A4D8               	btfss	status,2,c
   656   00067A  EF41  F003         	goto	u1241
   657   00067E  EF43  F003         	goto	u1240
   658   000682                     u1241:
   659   000682  EF4C  F003         	goto	l1821
   660   000686                     u1240:
   661   000686                     
   662                           ; BSR set to: 0
   663   000686  EE20  F0E2         	lfsr	2,main@F14597
   664   00068A  EE10  F099         	lfsr	1,main@buf_93
   665   00068E  0E05               	movlw	5
   666   000690                     u1251:
   667   000690  CFDB FFE3          	movff	plusw2,plusw1
   668   000694  06E8               	decf	wreg,f,c
   669   000696  E2FC               	bc	u1251
   670   000698                     l1821:
   671                           
   672                           ; BSR set to: 0
   673                           ;main.c: 60:         if(color==3){unsigned char buf[]="green ";}
   674   000698  0E03               	movlw	3
   675   00069A  19B1               	xorwf	main@color& (0+255),w,b
   676   00069C  A4D8               	btfss	status,2,c
   677   00069E  EF53  F003         	goto	u1261
   678   0006A2  EF55  F003         	goto	u1260
   679   0006A6                     u1261:
   680   0006A6  EF5E  F003         	goto	l1825
   681   0006AA                     u1260:
   682   0006AA                     
   683                           ; BSR set to: 0
   684   0006AA  EE20  F0CE         	lfsr	2,main@F14599
   685   0006AE  EE10  F083         	lfsr	1,main@buf_95
   686   0006B2  0E06               	movlw	6
   687   0006B4                     u1271:
   688   0006B4  CFDB FFE3          	movff	plusw2,plusw1
   689   0006B8  06E8               	decf	wreg,f,c
   690   0006BA  E2FC               	bc	u1271
   691   0006BC                     l1825:
   692                           
   693                           ; BSR set to: 0
   694                           ;main.c: 61:         if(color==4){unsigned char buf[]="pink ";}
   695   0006BC  0E04               	movlw	4
   696   0006BE  19B1               	xorwf	main@color& (0+255),w,b
   697   0006C0  A4D8               	btfss	status,2,c
   698   0006C2  EF65  F003         	goto	u1281
   699   0006C6  EF67  F003         	goto	u1280
   700   0006CA                     u1281:
   701   0006CA  EF70  F003         	goto	l1829
   702   0006CE                     u1280:
   703   0006CE                     
   704                           ; BSR set to: 0
   705   0006CE  EE20  F0DC         	lfsr	2,main@F14601
   706   0006D2  EE10  F09F         	lfsr	1,main@buf_97
   707   0006D6  0E05               	movlw	5
   708   0006D8                     u1291:
   709   0006D8  CFDB FFE3          	movff	plusw2,plusw1
   710   0006DC  06E8               	decf	wreg,f,c
   711   0006DE  E2FC               	bc	u1291
   712   0006E0                     l1829:
   713                           
   714                           ; BSR set to: 0
   715                           ;main.c: 62:         if(color==5){unsigned char buf[]="yellow ";}
   716   0006E0  0E05               	movlw	5
   717   0006E2  19B1               	xorwf	main@color& (0+255),w,b
   718   0006E4  A4D8               	btfss	status,2,c
   719   0006E6  EF77  F003         	goto	u1301
   720   0006EA  EF79  F003         	goto	u1300
   721   0006EE                     u1301:
   722   0006EE  EF82  F003         	goto	l1833
   723   0006F2                     u1300:
   724   0006F2                     
   725                           ; BSR set to: 0
   726   0006F2  EE20  F0C6         	lfsr	2,main@F14603
   727   0006F6  EE10  F06C         	lfsr	1,main@buf_99
   728   0006FA  0E07               	movlw	7
   729   0006FC                     u1311:
   730   0006FC  CFDB FFE3          	movff	plusw2,plusw1
   731   000700  06E8               	decf	wreg,f,c
   732   000702  E2FC               	bc	u1311
   733   000704                     l1833:
   734                           
   735                           ; BSR set to: 0
   736                           ;main.c: 63:         if(color==6){unsigned char buf[]="orange ";}
   737   000704  0E06               	movlw	6
   738   000706  19B1               	xorwf	main@color& (0+255),w,b
   739   000708  A4D8               	btfss	status,2,c
   740   00070A  EF89  F003         	goto	u1321
   741   00070E  EF8B  F003         	goto	u1320
   742   000712                     u1321:
   743   000712  EF94  F003         	goto	l1837
   744   000716                     u1320:
   745   000716                     
   746                           ; BSR set to: 0
   747   000716  EE20  F0BE         	lfsr	2,main@F14605
   748   00071A  EE10  F074         	lfsr	1,main@buf_101
   749   00071E  0E07               	movlw	7
   750   000720                     u1331:
   751   000720  CFDB FFE3          	movff	plusw2,plusw1
   752   000724  06E8               	decf	wreg,f,c
   753   000726  E2FC               	bc	u1331
   754   000728                     l1837:
   755                           
   756                           ; BSR set to: 0
   757                           ;main.c: 64:         if(color==7){unsigned char buf[]="light blue ";}
   758   000728  0E07               	movlw	7
   759   00072A  19B1               	xorwf	main@color& (0+255),w,b
   760   00072C  A4D8               	btfss	status,2,c
   761   00072E  EF9B  F003         	goto	u1341
   762   000732  EF9D  F003         	goto	u1340
   763   000736                     u1341:
   764   000736  EFA6  F003         	goto	l1841
   765   00073A                     u1340:
   766   00073A                     
   767                           ; BSR set to: 0
   768   00073A  EE20  F0B2         	lfsr	2,main@F14607
   769   00073E  EE10  F060         	lfsr	1,main@buf_103
   770   000742  0E0B               	movlw	11
   771   000744                     u1351:
   772   000744  CFDB FFE3          	movff	plusw2,plusw1
   773   000748  06E8               	decf	wreg,f,c
   774   00074A  E2FC               	bc	u1351
   775   00074C                     l1841:
   776                           
   777                           ; BSR set to: 0
   778                           ;main.c: 65:         TxBufferedString(&buf);
   779   00074C  0E8A               	movlw	low main@buf
   780   00074E  6E08               	movwf	TxBufferedString@string^0,c
   781   000750  0E00               	movlw	high main@buf
   782   000752  6E09               	movwf	(TxBufferedString@string+1)^0,c
   783   000754  ECCC  F005         	call	_TxBufferedString	;wreg free
   784   000758                     
   785                           ;main.c: 66:         Light(0);
   786   000758  0E00               	movlw	0
   787   00075A  ECC4  F004         	call	_Light
   788   00075E                     
   789                           ;main.c: 67:         for (j=0;j<3;j++){_delay((unsigned long)((900)*(64000000/4000.0)));
      +                          }
   790   00075E  0E00               	movlw	0
   791   000760  0100               	movlb	0	; () banked
   792   000762  6FAA               	movwf	main@j& (0+255),b
   793   000764                     l1851:
   794                           
   795                           ; BSR set to: 0
   796   000764  0E4A               	movlw	74
   797   000766  6E2D               	movwf	(??_main+1)^0,c
   798   000768  0E0E               	movlw	14
   799   00076A  6E2C               	movwf	??_main^0,c
   800   00076C  0E19               	movlw	25
   801   00076E                     u1457:
   802   00076E  2EE8               	decfsz	wreg,f,c
   803   000770  D7FE               	bra	u1457
   804   000772  2E2C               	decfsz	??_main^0,f,c
   805   000774  D7FC               	bra	u1457
   806   000776  2E2D               	decfsz	(??_main+1)^0,f,c
   807   000778  D7FA               	bra	u1457
   808   00077A  F000               	nop	
   809   00077C  0100               	movlb	0	; () banked
   810   00077E  2BAA               	incf	main@j& (0+255),f,b
   811   000780  0E02               	movlw	2
   812   000782  65AA               	cpfsgt	main@j& (0+255),b
   813   000784  EFC6  F003         	goto	u1361
   814   000788  EFC8  F003         	goto	u1360
   815   00078C                     u1361:
   816   00078C  EFB2  F003         	goto	l1851
   817   000790                     u1360:
   818   000790  EF0D  F003         	goto	l1805
   819   000794  EF54  F000         	goto	start
   820   000798                     __end_of_main:
   821                           	callstack 0
   822                           
   823 ;; *************** function _readcard *****************
   824 ;; Defined at:
   825 ;;		line 20 in file "card.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  colorL          2   27[COMRAM] PTR struct RGB_val
   828 ;;		 -> main@colorL(6), 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  ratio2          4   39[COMRAM] float 
   831 ;;  ratio1          4   35[COMRAM] float 
   832 ;;  ratio3          4   31[COMRAM] float 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      unsigned char 
   835 ;; Registers used:
   836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   843 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   845 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   846 ;;Total ram usage:       16 bytes
   847 ;; Hardware stack levels used: 1
   848 ;; Hardware stack levels required when called: 6
   849 ;; This function calls:
   850 ;;		___flge
   851 ;;		___lwdiv
   852 ;;		___xxtofl
   853 ;;		_levels
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text1
   860   0000AC                     __ptext1:
   861                           	callstack 0
   862   0000AC                     _readcard:
   863                           	callstack 24
   864   0000AC                     
   865                           ;card.c: 21:     levels(0,colorL);
   866   0000AC  0E00               	movlw	0
   867   0000AE  6E13               	movwf	(levels@i+1)^0,c
   868   0000B0  0E00               	movlw	0
   869   0000B2  6E12               	movwf	levels@i^0,c
   870   0000B4  C01C  F014         	movff	readcard@colorL,levels@colorL
   871   0000B8  C01D  F015         	movff	readcard@colorL+1,levels@colorL+1
   872   0000BC  EC4E  F004         	call	_levels	;wreg free
   873                           
   874                           ;card.c: 23:     float ratio1=colorL->R/colorL->B;
   875   0000C0  EE20 F004          	lfsr	2,4
   876   0000C4  501C               	movf	readcard@colorL^0,w,c
   877   0000C6  26D9               	addwf	fsr2l,f,c
   878   0000C8  501D               	movf	(readcard@colorL+1)^0,w,c
   879   0000CA  22DA               	addwfc	fsr2h,f,c
   880   0000CC  CFDE F009          	movff	postinc2,___lwdiv@divisor
   881   0000D0  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
   882   0000D4  C01C  FFD9         	movff	readcard@colorL,fsr2l
   883   0000D8  C01D  FFDA         	movff	readcard@colorL+1,fsr2h
   884   0000DC  CFDE F007          	movff	postinc2,___lwdiv@dividend
   885   0000E0  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
   886   0000E4  EC8A  F004         	call	___lwdiv	;wreg free
   887   0000E8  C007  F00E         	movff	?___lwdiv,___xxtofl@val
   888   0000EC  C008  F00F         	movff	?___lwdiv+1,___xxtofl@val+1
   889   0000F0  6A10               	clrf	(___xxtofl@val+2)^0,c
   890   0000F2  6A11               	clrf	(___xxtofl@val+3)^0,c
   891   0000F4  0E00               	movlw	0
   892   0000F6  EC2B  F002         	call	___xxtofl
   893   0000FA  C00E  F024         	movff	?___xxtofl,readcard@ratio1
   894   0000FE  C00F  F025         	movff	?___xxtofl+1,readcard@ratio1+1
   895   000102  C010  F026         	movff	?___xxtofl+2,readcard@ratio1+2
   896   000106  C011  F027         	movff	?___xxtofl+3,readcard@ratio1+3
   897                           
   898                           ;card.c: 24:     float ratio2=colorL->R/colorL->G;
   899   00010A  EE20 F002          	lfsr	2,2
   900   00010E  501C               	movf	readcard@colorL^0,w,c
   901   000110  26D9               	addwf	fsr2l,f,c
   902   000112  501D               	movf	(readcard@colorL+1)^0,w,c
   903   000114  22DA               	addwfc	fsr2h,f,c
   904   000116  CFDE F009          	movff	postinc2,___lwdiv@divisor
   905   00011A  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
   906   00011E  C01C  FFD9         	movff	readcard@colorL,fsr2l
   907   000122  C01D  FFDA         	movff	readcard@colorL+1,fsr2h
   908   000126  CFDE F007          	movff	postinc2,___lwdiv@dividend
   909   00012A  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
   910   00012E  EC8A  F004         	call	___lwdiv	;wreg free
   911   000132  C007  F00E         	movff	?___lwdiv,___xxtofl@val
   912   000136  C008  F00F         	movff	?___lwdiv+1,___xxtofl@val+1
   913   00013A  6A10               	clrf	(___xxtofl@val+2)^0,c
   914   00013C  6A11               	clrf	(___xxtofl@val+3)^0,c
   915   00013E  0E00               	movlw	0
   916   000140  EC2B  F002         	call	___xxtofl
   917   000144  C00E  F028         	movff	?___xxtofl,readcard@ratio2
   918   000148  C00F  F029         	movff	?___xxtofl+1,readcard@ratio2+1
   919   00014C  C010  F02A         	movff	?___xxtofl+2,readcard@ratio2+2
   920   000150  C011  F02B         	movff	?___xxtofl+3,readcard@ratio2+3
   921                           
   922                           ;card.c: 25:     float ratio3=colorL->B/colorL->G;
   923   000154  EE20 F002          	lfsr	2,2
   924   000158  501C               	movf	readcard@colorL^0,w,c
   925   00015A  26D9               	addwf	fsr2l,f,c
   926   00015C  501D               	movf	(readcard@colorL+1)^0,w,c
   927   00015E  22DA               	addwfc	fsr2h,f,c
   928   000160  CFDE F009          	movff	postinc2,___lwdiv@divisor
   929   000164  CFDD F00A          	movff	postdec2,___lwdiv@divisor+1
   930   000168  EE20 F004          	lfsr	2,4
   931   00016C  501C               	movf	readcard@colorL^0,w,c
   932   00016E  26D9               	addwf	fsr2l,f,c
   933   000170  501D               	movf	(readcard@colorL+1)^0,w,c
   934   000172  22DA               	addwfc	fsr2h,f,c
   935   000174  CFDE F007          	movff	postinc2,___lwdiv@dividend
   936   000178  CFDD F008          	movff	postdec2,___lwdiv@dividend+1
   937   00017C  EC8A  F004         	call	___lwdiv	;wreg free
   938   000180  C007  F00E         	movff	?___lwdiv,___xxtofl@val
   939   000184  C008  F00F         	movff	?___lwdiv+1,___xxtofl@val+1
   940   000188  6A10               	clrf	(___xxtofl@val+2)^0,c
   941   00018A  6A11               	clrf	(___xxtofl@val+3)^0,c
   942   00018C  0E00               	movlw	0
   943   00018E  EC2B  F002         	call	___xxtofl
   944   000192  C00E  F020         	movff	?___xxtofl,readcard@ratio3
   945   000196  C00F  F021         	movff	?___xxtofl+1,readcard@ratio3+1
   946   00019A  C010  F022         	movff	?___xxtofl+2,readcard@ratio3+2
   947   00019E  C011  F023         	movff	?___xxtofl+3,readcard@ratio3+3
   948   0001A2                     
   949                           ;card.c: 28:     if ((ratio1>0.7 & ratio1<1.4) & (ratio2>0.7 & ratio2<1.4) & (ratio3>0.7
      +                           & ratio3<1.4)){
   950   0001A2  0E33               	movlw	51
   951   0001A4  6E07               	movwf	___flge@ff1^0,c
   952   0001A6  0E33               	movlw	51
   953   0001A8  6E08               	movwf	(___flge@ff1+1)^0,c
   954   0001AA  0E33               	movlw	51
   955   0001AC  6E09               	movwf	(___flge@ff1+2)^0,c
   956   0001AE  0E3F               	movlw	63
   957   0001B0  6E0A               	movwf	(___flge@ff1+3)^0,c
   958   0001B2  C024  F00B         	movff	readcard@ratio1,___flge@ff2
   959   0001B6  C025  F00C         	movff	readcard@ratio1+1,___flge@ff2+1
   960   0001BA  C026  F00D         	movff	readcard@ratio1+2,___flge@ff2+2
   961   0001BE  C027  F00E         	movff	readcard@ratio1+3,___flge@ff2+3
   962   0001C2  ECCC  F003         	call	___flge	;wreg free
   963   0001C6  B0D8               	btfsc	status,0,c
   964   0001C8  EFE8  F000         	goto	u1051
   965   0001CC  EFEA  F000         	goto	u1050
   966   0001D0                     u1051:
   967   0001D0  EF7E  F001         	goto	l1733
   968   0001D4                     u1050:
   969   0001D4  C024  F007         	movff	readcard@ratio1,___flge@ff1
   970   0001D8  C025  F008         	movff	readcard@ratio1+1,___flge@ff1+1
   971   0001DC  C026  F009         	movff	readcard@ratio1+2,___flge@ff1+2
   972   0001E0  C027  F00A         	movff	readcard@ratio1+3,___flge@ff1+3
   973   0001E4  0E33               	movlw	51
   974   0001E6  6E0B               	movwf	___flge@ff2^0,c
   975   0001E8  0E33               	movlw	51
   976   0001EA  6E0C               	movwf	(___flge@ff2+1)^0,c
   977   0001EC  0EB3               	movlw	179
   978   0001EE  6E0D               	movwf	(___flge@ff2+2)^0,c
   979   0001F0  0E3F               	movlw	63
   980   0001F2  6E0E               	movwf	(___flge@ff2+3)^0,c
   981   0001F4  ECCC  F003         	call	___flge	;wreg free
   982   0001F8  B0D8               	btfsc	status,0,c
   983   0001FA  EF01  F001         	goto	u1061
   984   0001FE  EF03  F001         	goto	u1060
   985   000202                     u1061:
   986   000202  EF7E  F001         	goto	l1733
   987   000206                     u1060:
   988   000206  0E33               	movlw	51
   989   000208  6E07               	movwf	___flge@ff1^0,c
   990   00020A  0E33               	movlw	51
   991   00020C  6E08               	movwf	(___flge@ff1+1)^0,c
   992   00020E  0E33               	movlw	51
   993   000210  6E09               	movwf	(___flge@ff1+2)^0,c
   994   000212  0E3F               	movlw	63
   995   000214  6E0A               	movwf	(___flge@ff1+3)^0,c
   996   000216  C028  F00B         	movff	readcard@ratio2,___flge@ff2
   997   00021A  C029  F00C         	movff	readcard@ratio2+1,___flge@ff2+1
   998   00021E  C02A  F00D         	movff	readcard@ratio2+2,___flge@ff2+2
   999   000222  C02B  F00E         	movff	readcard@ratio2+3,___flge@ff2+3
  1000   000226  ECCC  F003         	call	___flge	;wreg free
  1001   00022A  B0D8               	btfsc	status,0,c
  1002   00022C  EF1A  F001         	goto	u1071
  1003   000230  EF1C  F001         	goto	u1070
  1004   000234                     u1071:
  1005   000234  EF7E  F001         	goto	l1733
  1006   000238                     u1070:
  1007   000238  C028  F007         	movff	readcard@ratio2,___flge@ff1
  1008   00023C  C029  F008         	movff	readcard@ratio2+1,___flge@ff1+1
  1009   000240  C02A  F009         	movff	readcard@ratio2+2,___flge@ff1+2
  1010   000244  C02B  F00A         	movff	readcard@ratio2+3,___flge@ff1+3
  1011   000248  0E33               	movlw	51
  1012   00024A  6E0B               	movwf	___flge@ff2^0,c
  1013   00024C  0E33               	movlw	51
  1014   00024E  6E0C               	movwf	(___flge@ff2+1)^0,c
  1015   000250  0EB3               	movlw	179
  1016   000252  6E0D               	movwf	(___flge@ff2+2)^0,c
  1017   000254  0E3F               	movlw	63
  1018   000256  6E0E               	movwf	(___flge@ff2+3)^0,c
  1019   000258  ECCC  F003         	call	___flge	;wreg free
  1020   00025C  B0D8               	btfsc	status,0,c
  1021   00025E  EF33  F001         	goto	u1081
  1022   000262  EF35  F001         	goto	u1080
  1023   000266                     u1081:
  1024   000266  EF7E  F001         	goto	l1733
  1025   00026A                     u1080:
  1026   00026A  0E33               	movlw	51
  1027   00026C  6E07               	movwf	___flge@ff1^0,c
  1028   00026E  0E33               	movlw	51
  1029   000270  6E08               	movwf	(___flge@ff1+1)^0,c
  1030   000272  0E33               	movlw	51
  1031   000274  6E09               	movwf	(___flge@ff1+2)^0,c
  1032   000276  0E3F               	movlw	63
  1033   000278  6E0A               	movwf	(___flge@ff1+3)^0,c
  1034   00027A  C020  F00B         	movff	readcard@ratio3,___flge@ff2
  1035   00027E  C021  F00C         	movff	readcard@ratio3+1,___flge@ff2+1
  1036   000282  C022  F00D         	movff	readcard@ratio3+2,___flge@ff2+2
  1037   000286  C023  F00E         	movff	readcard@ratio3+3,___flge@ff2+3
  1038   00028A  ECCC  F003         	call	___flge	;wreg free
  1039   00028E  B0D8               	btfsc	status,0,c
  1040   000290  EF4C  F001         	goto	u1091
  1041   000294  EF4E  F001         	goto	u1090
  1042   000298                     u1091:
  1043   000298  EF7E  F001         	goto	l1733
  1044   00029C                     u1090:
  1045   00029C  C020  F007         	movff	readcard@ratio3,___flge@ff1
  1046   0002A0  C021  F008         	movff	readcard@ratio3+1,___flge@ff1+1
  1047   0002A4  C022  F009         	movff	readcard@ratio3+2,___flge@ff1+2
  1048   0002A8  C023  F00A         	movff	readcard@ratio3+3,___flge@ff1+3
  1049   0002AC  0E33               	movlw	51
  1050   0002AE  6E0B               	movwf	___flge@ff2^0,c
  1051   0002B0  0E33               	movlw	51
  1052   0002B2  6E0C               	movwf	(___flge@ff2+1)^0,c
  1053   0002B4  0EB3               	movlw	179
  1054   0002B6  6E0D               	movwf	(___flge@ff2+2)^0,c
  1055   0002B8  0E3F               	movlw	63
  1056   0002BA  6E0E               	movwf	(___flge@ff2+3)^0,c
  1057   0002BC  ECCC  F003         	call	___flge	;wreg free
  1058   0002C0  B0D8               	btfsc	status,0,c
  1059   0002C2  EF65  F001         	goto	u1101
  1060   0002C6  EF67  F001         	goto	u1100
  1061   0002CA                     u1101:
  1062   0002CA  EF7E  F001         	goto	l1733
  1063   0002CE                     u1100:
  1064   0002CE                     
  1065                           ;card.c: 29:         if(colorL->B>4000){return 7;}
  1066   0002CE  EE20 F004          	lfsr	2,4
  1067   0002D2  501C               	movf	readcard@colorL^0,w,c
  1068   0002D4  26D9               	addwf	fsr2l,f,c
  1069   0002D6  501D               	movf	(readcard@colorL+1)^0,w,c
  1070   0002D8  22DA               	addwfc	fsr2h,f,c
  1071   0002DA  0EA1               	movlw	161
  1072   0002DC  5CDE               	subwf	postinc2,w,c
  1073   0002DE  0E0F               	movlw	15
  1074   0002E0  58DE               	subwfb	postinc2,w,c
  1075   0002E2  A0D8               	btfss	status,0,c
  1076   0002E4  EF76  F001         	goto	u1111
  1077   0002E8  EF78  F001         	goto	u1110
  1078   0002EC                     u1111:
  1079   0002EC  EF7B  F001         	goto	l1729
  1080   0002F0                     u1110:
  1081   0002F0  0E07               	movlw	7
  1082   0002F2  EF2A  F002         	goto	l125
  1083   0002F6                     l1729:
  1084                           
  1085                           ;card.c: 30:         return 2;
  1086   0002F6  0E02               	movlw	2
  1087   0002F8  EF2A  F002         	goto	l125
  1088   0002FC                     l1733:
  1089                           
  1090                           ;card.c: 33:     if (ratio1>1.6 & ratio2>1.6){
  1091   0002FC  0ECD               	movlw	205
  1092   0002FE  6E07               	movwf	___flge@ff1^0,c
  1093   000300  0ECC               	movlw	204
  1094   000302  6E08               	movwf	(___flge@ff1+1)^0,c
  1095   000304  0ECC               	movlw	204
  1096   000306  6E09               	movwf	(___flge@ff1+2)^0,c
  1097   000308  0E3F               	movlw	63
  1098   00030A  6E0A               	movwf	(___flge@ff1+3)^0,c
  1099   00030C  C024  F00B         	movff	readcard@ratio1,___flge@ff2
  1100   000310  C025  F00C         	movff	readcard@ratio1+1,___flge@ff2+1
  1101   000314  C026  F00D         	movff	readcard@ratio1+2,___flge@ff2+2
  1102   000318  C027  F00E         	movff	readcard@ratio1+3,___flge@ff2+3
  1103   00031C  ECCC  F003         	call	___flge	;wreg free
  1104   000320  B0D8               	btfsc	status,0,c
  1105   000322  EF95  F001         	goto	u1121
  1106   000326  EF97  F001         	goto	u1120
  1107   00032A                     u1121:
  1108   00032A  EF0D  F002         	goto	l1765
  1109   00032E                     u1120:
  1110   00032E  0ECD               	movlw	205
  1111   000330  6E07               	movwf	___flge@ff1^0,c
  1112   000332  0ECC               	movlw	204
  1113   000334  6E08               	movwf	(___flge@ff1+1)^0,c
  1114   000336  0ECC               	movlw	204
  1115   000338  6E09               	movwf	(___flge@ff1+2)^0,c
  1116   00033A  0E3F               	movlw	63
  1117   00033C  6E0A               	movwf	(___flge@ff1+3)^0,c
  1118   00033E  C028  F00B         	movff	readcard@ratio2,___flge@ff2
  1119   000342  C029  F00C         	movff	readcard@ratio2+1,___flge@ff2+1
  1120   000346  C02A  F00D         	movff	readcard@ratio2+2,___flge@ff2+2
  1121   00034A  C02B  F00E         	movff	readcard@ratio2+3,___flge@ff2+3
  1122   00034E  ECCC  F003         	call	___flge	;wreg free
  1123   000352  B0D8               	btfsc	status,0,c
  1124   000354  EFAE  F001         	goto	u1131
  1125   000358  EFB0  F001         	goto	u1130
  1126   00035C                     u1131:
  1127   00035C  EF0D  F002         	goto	l1765
  1128   000360                     u1130:
  1129   000360                     
  1130                           ;card.c: 35:         levels(2,colorL);
  1131   000360  0E00               	movlw	0
  1132   000362  6E13               	movwf	(levels@i+1)^0,c
  1133   000364  0E02               	movlw	2
  1134   000366  6E12               	movwf	levels@i^0,c
  1135   000368  C01C  F014         	movff	readcard@colorL,levels@colorL
  1136   00036C  C01D  F015         	movff	readcard@colorL+1,levels@colorL+1
  1137   000370  EC4E  F004         	call	_levels	;wreg free
  1138   000374                     
  1139                           ;card.c: 36:         if(colorL->B>1000){return 4;}
  1140   000374  EE20 F004          	lfsr	2,4
  1141   000378  501C               	movf	readcard@colorL^0,w,c
  1142   00037A  26D9               	addwf	fsr2l,f,c
  1143   00037C  501D               	movf	(readcard@colorL+1)^0,w,c
  1144   00037E  22DA               	addwfc	fsr2h,f,c
  1145   000380  0EE9               	movlw	233
  1146   000382  5CDE               	subwf	postinc2,w,c
  1147   000384  0E03               	movlw	3
  1148   000386  58DE               	subwfb	postinc2,w,c
  1149   000388  A0D8               	btfss	status,0,c
  1150   00038A  EFC9  F001         	goto	u1141
  1151   00038E  EFCB  F001         	goto	u1140
  1152   000392                     u1141:
  1153   000392  EFCE  F001         	goto	l1745
  1154   000396                     u1140:
  1155   000396  0E04               	movlw	4
  1156   000398  EF2A  F002         	goto	l125
  1157   00039C                     l1745:
  1158                           
  1159                           ;card.c: 38:         levels(3,colorL);
  1160   00039C  0E00               	movlw	0
  1161   00039E  6E13               	movwf	(levels@i+1)^0,c
  1162   0003A0  0E03               	movlw	3
  1163   0003A2  6E12               	movwf	levels@i^0,c
  1164   0003A4  C01C  F014         	movff	readcard@colorL,levels@colorL
  1165   0003A8  C01D  F015         	movff	readcard@colorL+1,levels@colorL+1
  1166   0003AC  EC4E  F004         	call	_levels	;wreg free
  1167   0003B0                     
  1168                           ;card.c: 39:         if(colorL->G>5500){return 5;}
  1169   0003B0  EE20 F002          	lfsr	2,2
  1170   0003B4  501C               	movf	readcard@colorL^0,w,c
  1171   0003B6  26D9               	addwf	fsr2l,f,c
  1172   0003B8  501D               	movf	(readcard@colorL+1)^0,w,c
  1173   0003BA  22DA               	addwfc	fsr2h,f,c
  1174   0003BC  0E7D               	movlw	125
  1175   0003BE  5CDE               	subwf	postinc2,w,c
  1176   0003C0  0E15               	movlw	21
  1177   0003C2  58DE               	subwfb	postinc2,w,c
  1178   0003C4  A0D8               	btfss	status,0,c
  1179   0003C6  EFE7  F001         	goto	u1151
  1180   0003CA  EFE9  F001         	goto	u1150
  1181   0003CE                     u1151:
  1182   0003CE  EFEC  F001         	goto	l1753
  1183   0003D2                     u1150:
  1184   0003D2  0E05               	movlw	5
  1185   0003D4  EF2A  F002         	goto	l125
  1186   0003D8                     l1753:
  1187                           
  1188                           ;card.c: 41:         levels(3,colorL);
  1189   0003D8  0E00               	movlw	0
  1190   0003DA  6E13               	movwf	(levels@i+1)^0,c
  1191   0003DC  0E03               	movlw	3
  1192   0003DE  6E12               	movwf	levels@i^0,c
  1193   0003E0  C01C  F014         	movff	readcard@colorL,levels@colorL
  1194   0003E4  C01D  F015         	movff	readcard@colorL+1,levels@colorL+1
  1195   0003E8  EC4E  F004         	call	_levels	;wreg free
  1196   0003EC                     
  1197                           ;card.c: 42:         if(colorL->G>2000){return 6;}
  1198   0003EC  EE20 F002          	lfsr	2,2
  1199   0003F0  501C               	movf	readcard@colorL^0,w,c
  1200   0003F2  26D9               	addwf	fsr2l,f,c
  1201   0003F4  501D               	movf	(readcard@colorL+1)^0,w,c
  1202   0003F6  22DA               	addwfc	fsr2h,f,c
  1203   0003F8  0ED1               	movlw	209
  1204   0003FA  5CDE               	subwf	postinc2,w,c
  1205   0003FC  0E07               	movlw	7
  1206   0003FE  58DE               	subwfb	postinc2,w,c
  1207   000400  A0D8               	btfss	status,0,c
  1208   000402  EF05  F002         	goto	u1161
  1209   000406  EF07  F002         	goto	u1160
  1210   00040A                     u1161:
  1211   00040A  EF0A  F002         	goto	l1761
  1212   00040E                     u1160:
  1213   00040E  0E06               	movlw	6
  1214   000410  EF2A  F002         	goto	l125
  1215   000414                     l1761:
  1216                           
  1217                           ;card.c: 45:         return 1;
  1218   000414  0E01               	movlw	1
  1219   000416  EF2A  F002         	goto	l125
  1220   00041A                     l1765:
  1221                           
  1222                           ;card.c: 48:     levels(1,colorL);
  1223   00041A  0E00               	movlw	0
  1224   00041C  6E13               	movwf	(levels@i+1)^0,c
  1225   00041E  0E01               	movlw	1
  1226   000420  6E12               	movwf	levels@i^0,c
  1227   000422  C01C  F014         	movff	readcard@colorL,levels@colorL
  1228   000426  C01D  F015         	movff	readcard@colorL+1,levels@colorL+1
  1229   00042A  EC4E  F004         	call	_levels	;wreg free
  1230   00042E                     
  1231                           ;card.c: 49:     if(colorL->R>1000){return 0;}
  1232   00042E  C01C  FFD9         	movff	readcard@colorL,fsr2l
  1233   000432  C01D  FFDA         	movff	readcard@colorL+1,fsr2h
  1234   000436  0EE9               	movlw	233
  1235   000438  5CDE               	subwf	postinc2,w,c
  1236   00043A  0E03               	movlw	3
  1237   00043C  58DE               	subwfb	postinc2,w,c
  1238   00043E  A0D8               	btfss	status,0,c
  1239   000440  EF24  F002         	goto	u1171
  1240   000444  EF26  F002         	goto	u1170
  1241   000448                     u1171:
  1242   000448  EF29  F002         	goto	l1773
  1243   00044C                     u1170:
  1244   00044C  0E00               	movlw	0
  1245   00044E  EF2A  F002         	goto	l125
  1246   000452                     l1773:
  1247                           
  1248                           ;card.c: 50:     return 3;
  1249   000452  0E03               	movlw	3
  1250   000454                     l125:
  1251   000454  0012               	return		;funcret
  1252   000456                     __end_of_readcard:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _levels *****************
  1256 ;; Defined at:
  1257 ;;		line 53 in file "card.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  i               2   17[COMRAM] int 
  1260 ;;  colorL          2   19[COMRAM] PTR struct RGB_val
  1261 ;;		 -> main@colorL(6), 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1276 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1277 ;;Total ram usage:        6 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 5
  1280 ;; This function calls:
  1281 ;;		_Light
  1282 ;;		_color_read_Blue
  1283 ;;		_color_read_Green
  1284 ;;		_color_read_Red
  1285 ;; This function is called by:
  1286 ;;		_readcard
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text2
  1291   00089C                     __ptext2:
  1292                           	callstack 0
  1293   00089C                     _levels:
  1294                           	callstack 24
  1295   00089C                     
  1296                           ;card.c: 54:         Light(i);
  1297   00089C  5012               	movf	levels@i^0,w,c
  1298   00089E  ECC4  F004         	call	_Light
  1299   0008A2                     
  1300                           ;card.c: 55:         _delay((unsigned long)((900)*(64000000/4000.0)));
  1301   0008A2  0E4A               	movlw	74
  1302   0008A4  6E17               	movwf	(??_levels+1)^0,c
  1303   0008A6  0E0E               	movlw	14
  1304   0008A8  6E16               	movwf	??_levels^0,c
  1305   0008AA  0E19               	movlw	25
  1306   0008AC                     u1467:
  1307   0008AC  2EE8               	decfsz	wreg,f,c
  1308   0008AE  D7FE               	bra	u1467
  1309   0008B0  2E16               	decfsz	??_levels^0,f,c
  1310   0008B2  D7FC               	bra	u1467
  1311   0008B4  2E17               	decfsz	(??_levels+1)^0,f,c
  1312   0008B6  D7FA               	bra	u1467
  1313   0008B8  F000               	nop	
  1314   0008BA                     
  1315                           ;card.c: 56:         if (i==1){LATFbits.LATF7=1;}
  1316   0008BA  0412               	decf	levels@i^0,w,c
  1317   0008BC  1013               	iorwf	(levels@i+1)^0,w,c
  1318   0008BE  A4D8               	btfss	status,2,c
  1319   0008C0  EF64  F004         	goto	u851
  1320   0008C4  EF66  F004         	goto	u850
  1321   0008C8                     u851:
  1322   0008C8  EF67  F004         	goto	l1583
  1323   0008CC                     u850:
  1324   0008CC  8E7E               	bsf	126,7,c	;volatile
  1325   0008CE                     l1583:
  1326                           
  1327                           ;card.c: 57:         colorL->R = color_read_Red();
  1328   0008CE  ECF4  F004         	call	_color_read_Red	;wreg free
  1329   0008D2  C014  FFD9         	movff	levels@colorL,fsr2l
  1330   0008D6  C015  FFDA         	movff	levels@colorL+1,fsr2h
  1331   0008DA  C00B  FFDE         	movff	?_color_read_Red,postinc2
  1332   0008DE  C00C  FFDD         	movff	?_color_read_Red+1,postdec2
  1333                           
  1334                           ;card.c: 58:         colorL->B = color_read_Blue();
  1335   0008E2  EC44  F005         	call	_color_read_Blue	;wreg free
  1336   0008E6  EE20 F004          	lfsr	2,4
  1337   0008EA  5014               	movf	levels@colorL^0,w,c
  1338   0008EC  26D9               	addwf	fsr2l,f,c
  1339   0008EE  5015               	movf	(levels@colorL+1)^0,w,c
  1340   0008F0  22DA               	addwfc	fsr2h,f,c
  1341   0008F2  C00B  FFDE         	movff	?_color_read_Blue,postinc2
  1342   0008F6  C00C  FFDD         	movff	?_color_read_Blue+1,postdec2
  1343                           
  1344                           ;card.c: 59:         colorL->G = color_read_Green();
  1345   0008FA  EC1C  F005         	call	_color_read_Green	;wreg free
  1346   0008FE  EE20 F002          	lfsr	2,2
  1347   000902  5014               	movf	levels@colorL^0,w,c
  1348   000904  26D9               	addwf	fsr2l,f,c
  1349   000906  5015               	movf	(levels@colorL+1)^0,w,c
  1350   000908  22DA               	addwfc	fsr2h,f,c
  1351   00090A  C00B  FFDE         	movff	?_color_read_Green,postinc2
  1352   00090E  C00C  FFDD         	movff	?_color_read_Green+1,postdec2
  1353   000912  0012               	return		;funcret
  1354   000914                     __end_of_levels:
  1355                           	callstack 0
  1356                           
  1357 ;; *************** function _color_read_Red *****************
  1358 ;; Defined at:
  1359 ;;		line 29 in file "color.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  tmp             2   15[COMRAM] unsigned int 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2   10[COMRAM] unsigned int 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1374 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1375 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1376 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1377 ;;Total ram usage:        7 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 4
  1380 ;; This function calls:
  1381 ;;		_I2C_2_Master_Read
  1382 ;;		_I2C_2_Master_RepStart
  1383 ;;		_I2C_2_Master_Start
  1384 ;;		_I2C_2_Master_Stop
  1385 ;;		_I2C_2_Master_Write
  1386 ;; This function is called by:
  1387 ;;		_levels
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text3
  1392   0009E8                     __ptext3:
  1393                           	callstack 0
  1394   0009E8                     _color_read_Red:
  1395                           	callstack 24
  1396   0009E8                     
  1397                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  1398   0009E8  ECB5  F006         	call	_I2C_2_Master_Start	;wreg free
  1399                           
  1400                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  1401   0009EC  0E52               	movlw	82
  1402   0009EE  ECA5  F006         	call	_I2C_2_Master_Write
  1403                           
  1404                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  1405   0009F2  0EB6               	movlw	182
  1406   0009F4  ECA5  F006         	call	_I2C_2_Master_Write
  1407                           
  1408                           ;color.c: 35:  I2C_2_Master_RepStart();
  1409   0009F8  ECAB  F006         	call	_I2C_2_Master_RepStart	;wreg free
  1410                           
  1411                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  1412   0009FC  0E53               	movlw	83
  1413   0009FE  ECA5  F006         	call	_I2C_2_Master_Write
  1414                           
  1415                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  1416   000A02  0E01               	movlw	1
  1417   000A04  EC8D  F005         	call	_I2C_2_Master_Read
  1418   000A08  6E0D               	movwf	??_color_read_Red^0,c
  1419   000A0A  500D               	movf	??_color_read_Red^0,w,c
  1420   000A0C  6E10               	movwf	color_read_Red@tmp^0,c
  1421   000A0E  6A11               	clrf	(color_read_Red@tmp+1)^0,c
  1422                           
  1423                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1424   000A10  0E00               	movlw	0
  1425   000A12  EC8D  F005         	call	_I2C_2_Master_Read
  1426   000A16  6E0D               	movwf	??_color_read_Red^0,c
  1427   000A18  500D               	movf	??_color_read_Red^0,w,c
  1428   000A1A  6E0F               	movwf	(??_color_read_Red+2)^0,c
  1429   000A1C  6A0E               	clrf	(??_color_read_Red+1)^0,c
  1430   000A1E  5010               	movf	color_read_Red@tmp^0,w,c
  1431   000A20  100E               	iorwf	(??_color_read_Red+1)^0,w,c
  1432   000A22  6E10               	movwf	color_read_Red@tmp^0,c
  1433   000A24  5011               	movf	(color_read_Red@tmp+1)^0,w,c
  1434   000A26  100F               	iorwf	(??_color_read_Red+2)^0,w,c
  1435   000A28  6E11               	movwf	(color_read_Red@tmp+1)^0,c
  1436                           
  1437                           ;color.c: 39:  I2C_2_Master_Stop();
  1438   000A2A  ECB0  F006         	call	_I2C_2_Master_Stop	;wreg free
  1439   000A2E                     
  1440                           ;color.c: 40:  return tmp;
  1441   000A2E  C010  F00B         	movff	color_read_Red@tmp,?_color_read_Red
  1442   000A32  C011  F00C         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1443   000A36  0012               	return		;funcret
  1444   000A38                     __end_of_color_read_Red:
  1445                           	callstack 0
  1446                           
  1447 ;; *************** function _color_read_Green *****************
  1448 ;; Defined at:
  1449 ;;		line 59 in file "color.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  tmp             2   15[COMRAM] unsigned int 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2   10[COMRAM] unsigned int 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1466 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1467 ;;Total ram usage:        7 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 4
  1470 ;; This function calls:
  1471 ;;		_I2C_2_Master_Read
  1472 ;;		_I2C_2_Master_RepStart
  1473 ;;		_I2C_2_Master_Start
  1474 ;;		_I2C_2_Master_Stop
  1475 ;;		_I2C_2_Master_Write
  1476 ;; This function is called by:
  1477 ;;		_levels
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text4
  1482   000A38                     __ptext4:
  1483                           	callstack 0
  1484   000A38                     _color_read_Green:
  1485                           	callstack 24
  1486   000A38                     
  1487                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  1488   000A38  ECB5  F006         	call	_I2C_2_Master_Start	;wreg free
  1489                           
  1490                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  1491   000A3C  0E52               	movlw	82
  1492   000A3E  ECA5  F006         	call	_I2C_2_Master_Write
  1493                           
  1494                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x18);
  1495   000A42  0EB8               	movlw	184
  1496   000A44  ECA5  F006         	call	_I2C_2_Master_Write
  1497                           
  1498                           ;color.c: 65:  I2C_2_Master_RepStart();
  1499   000A48  ECAB  F006         	call	_I2C_2_Master_RepStart	;wreg free
  1500                           
  1501                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  1502   000A4C  0E53               	movlw	83
  1503   000A4E  ECA5  F006         	call	_I2C_2_Master_Write
  1504                           
  1505                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  1506   000A52  0E01               	movlw	1
  1507   000A54  EC8D  F005         	call	_I2C_2_Master_Read
  1508   000A58  6E0D               	movwf	??_color_read_Green^0,c
  1509   000A5A  500D               	movf	??_color_read_Green^0,w,c
  1510   000A5C  6E10               	movwf	color_read_Green@tmp^0,c
  1511   000A5E  6A11               	clrf	(color_read_Green@tmp+1)^0,c
  1512                           
  1513                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1514   000A60  0E00               	movlw	0
  1515   000A62  EC8D  F005         	call	_I2C_2_Master_Read
  1516   000A66  6E0D               	movwf	??_color_read_Green^0,c
  1517   000A68  500D               	movf	??_color_read_Green^0,w,c
  1518   000A6A  6E0F               	movwf	(??_color_read_Green+2)^0,c
  1519   000A6C  6A0E               	clrf	(??_color_read_Green+1)^0,c
  1520   000A6E  5010               	movf	color_read_Green@tmp^0,w,c
  1521   000A70  100E               	iorwf	(??_color_read_Green+1)^0,w,c
  1522   000A72  6E10               	movwf	color_read_Green@tmp^0,c
  1523   000A74  5011               	movf	(color_read_Green@tmp+1)^0,w,c
  1524   000A76  100F               	iorwf	(??_color_read_Green+2)^0,w,c
  1525   000A78  6E11               	movwf	(color_read_Green@tmp+1)^0,c
  1526                           
  1527                           ;color.c: 69:  I2C_2_Master_Stop();
  1528   000A7A  ECB0  F006         	call	_I2C_2_Master_Stop	;wreg free
  1529   000A7E                     
  1530                           ;color.c: 70:  return tmp;
  1531   000A7E  C010  F00B         	movff	color_read_Green@tmp,?_color_read_Green
  1532   000A82  C011  F00C         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1533   000A86  0012               	return		;funcret
  1534   000A88                     __end_of_color_read_Green:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function _color_read_Blue *****************
  1538 ;; Defined at:
  1539 ;;		line 45 in file "color.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  tmp             2   15[COMRAM] unsigned int 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  2   10[COMRAM] unsigned int 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1555 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;Total ram usage:        7 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; Hardware stack levels required when called: 4
  1560 ;; This function calls:
  1561 ;;		_I2C_2_Master_Read
  1562 ;;		_I2C_2_Master_RepStart
  1563 ;;		_I2C_2_Master_Start
  1564 ;;		_I2C_2_Master_Stop
  1565 ;;		_I2C_2_Master_Write
  1566 ;; This function is called by:
  1567 ;;		_levels
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text5
  1572   000A88                     __ptext5:
  1573                           	callstack 0
  1574   000A88                     _color_read_Blue:
  1575                           	callstack 24
  1576   000A88                     
  1577                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  1578   000A88  ECB5  F006         	call	_I2C_2_Master_Start	;wreg free
  1579                           
  1580                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  1581   000A8C  0E52               	movlw	82
  1582   000A8E  ECA5  F006         	call	_I2C_2_Master_Write
  1583                           
  1584                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x1A);
  1585   000A92  0EBA               	movlw	186
  1586   000A94  ECA5  F006         	call	_I2C_2_Master_Write
  1587                           
  1588                           ;color.c: 51:  I2C_2_Master_RepStart();
  1589   000A98  ECAB  F006         	call	_I2C_2_Master_RepStart	;wreg free
  1590                           
  1591                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  1592   000A9C  0E53               	movlw	83
  1593   000A9E  ECA5  F006         	call	_I2C_2_Master_Write
  1594                           
  1595                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  1596   000AA2  0E01               	movlw	1
  1597   000AA4  EC8D  F005         	call	_I2C_2_Master_Read
  1598   000AA8  6E0D               	movwf	??_color_read_Blue^0,c
  1599   000AAA  500D               	movf	??_color_read_Blue^0,w,c
  1600   000AAC  6E10               	movwf	color_read_Blue@tmp^0,c
  1601   000AAE  6A11               	clrf	(color_read_Blue@tmp+1)^0,c
  1602                           
  1603                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1604   000AB0  0E00               	movlw	0
  1605   000AB2  EC8D  F005         	call	_I2C_2_Master_Read
  1606   000AB6  6E0D               	movwf	??_color_read_Blue^0,c
  1607   000AB8  500D               	movf	??_color_read_Blue^0,w,c
  1608   000ABA  6E0F               	movwf	(??_color_read_Blue+2)^0,c
  1609   000ABC  6A0E               	clrf	(??_color_read_Blue+1)^0,c
  1610   000ABE  5010               	movf	color_read_Blue@tmp^0,w,c
  1611   000AC0  100E               	iorwf	(??_color_read_Blue+1)^0,w,c
  1612   000AC2  6E10               	movwf	color_read_Blue@tmp^0,c
  1613   000AC4  5011               	movf	(color_read_Blue@tmp+1)^0,w,c
  1614   000AC6  100F               	iorwf	(??_color_read_Blue+2)^0,w,c
  1615   000AC8  6E11               	movwf	(color_read_Blue@tmp+1)^0,c
  1616                           
  1617                           ;color.c: 55:  I2C_2_Master_Stop();
  1618   000ACA  ECB0  F006         	call	_I2C_2_Master_Stop	;wreg free
  1619   000ACE                     
  1620                           ;color.c: 56:  return tmp;
  1621   000ACE  C010  F00B         	movff	color_read_Blue@tmp,?_color_read_Blue
  1622   000AD2  C011  F00C         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1623   000AD6  0012               	return		;funcret
  1624   000AD8                     __end_of_color_read_Blue:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function _I2C_2_Master_RepStart *****************
  1628 ;; Defined at:
  1629 ;;		line 33 in file "i2c.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 3
  1650 ;; This function calls:
  1651 ;;		_I2C_2_Master_Idle
  1652 ;; This function is called by:
  1653 ;;		_color_read_Red
  1654 ;;		_color_read_Blue
  1655 ;;		_color_read_Green
  1656 ;;		_color_read_Clear
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text6
  1661   000D56                     __ptext6:
  1662                           	callstack 0
  1663   000D56                     _I2C_2_Master_RepStart:
  1664                           	callstack 24
  1665   000D56                     
  1666                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1667   000D56  EC57  F006         	call	_I2C_2_Master_Idle	;wreg free
  1668   000D5A                     
  1669                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1670   000D5A  010E               	movlb	14	; () banked
  1671   000D5C  83DA               	bsf	218,1,b	;volatile
  1672   000D5E                     
  1673                           ; BSR set to: 14
  1674   000D5E  0012               	return		;funcret
  1675   000D60                     __end_of_I2C_2_Master_RepStart:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _I2C_2_Master_Read *****************
  1679 ;; Defined at:
  1680 ;;		line 51 in file "i2c.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  ack             1    wreg     unsigned char 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  ack             1    8[COMRAM] unsigned char 
  1685 ;;  tmp             1    9[COMRAM] unsigned char 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      unsigned char 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1698 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1699 ;;Total ram usage:        3 bytes
  1700 ;; Hardware stack levels used: 1
  1701 ;; Hardware stack levels required when called: 3
  1702 ;; This function calls:
  1703 ;;		_I2C_2_Master_Idle
  1704 ;; This function is called by:
  1705 ;;		_color_read_Red
  1706 ;;		_color_read_Blue
  1707 ;;		_color_read_Green
  1708 ;;		_color_read_Clear
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text7
  1713   000B1A                     __ptext7:
  1714                           	callstack 0
  1715   000B1A                     _I2C_2_Master_Read:
  1716                           	callstack 24
  1717                           
  1718                           ; BSR set to: 14
  1719                           ;incstack = 0
  1720                           ;I2C_2_Master_Read@ack stored from wreg
  1721   000B1A  6E09               	movwf	I2C_2_Master_Read@ack^0,c
  1722   000B1C                     
  1723                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1724   000B1C  EC57  F006         	call	_I2C_2_Master_Idle	;wreg free
  1725   000B20                     
  1726                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1727   000B20  010E               	movlb	14	; () banked
  1728   000B22  87DA               	bsf	218,3,b	;volatile
  1729                           
  1730                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1731   000B24  EC57  F006         	call	_I2C_2_Master_Idle	;wreg free
  1732   000B28                     
  1733                           ;i2c.c: 57:   tmp = SSP2BUF;
  1734   000B28  CED5 F00A          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1735                           
  1736                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1737   000B2C  EC57  F006         	call	_I2C_2_Master_Idle	;wreg free
  1738   000B30                     
  1739                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1740   000B30  5009               	movf	I2C_2_Master_Read@ack^0,w,c
  1741   000B32  B4D8               	btfsc	status,2,c
  1742   000B34  EF9E  F005         	goto	u791
  1743   000B38  EFA2  F005         	goto	u790
  1744   000B3C                     u791:
  1745   000B3C  6A08               	clrf	??_I2C_2_Master_Read^0,c
  1746   000B3E  2A08               	incf	??_I2C_2_Master_Read^0,f,c
  1747   000B40  EFA3  F005         	goto	u808
  1748   000B44                     u790:
  1749   000B44  6A08               	clrf	??_I2C_2_Master_Read^0,c
  1750   000B46                     u808:
  1751   000B46  3A08               	swapf	??_I2C_2_Master_Read^0,f,c
  1752   000B48  4608               	rlncf	??_I2C_2_Master_Read^0,f,c
  1753   000B4A  010E               	movlb	14	; () banked
  1754   000B4C  51DA               	movf	218,w,b	;volatile
  1755   000B4E  1808               	xorwf	??_I2C_2_Master_Read^0,w,c
  1756   000B50  0BDF               	andlw	-33
  1757   000B52  1808               	xorwf	??_I2C_2_Master_Read^0,w,c
  1758   000B54  6FDA               	movwf	218,b	;volatile
  1759   000B56                     
  1760                           ; BSR set to: 14
  1761                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1762   000B56  89DA               	bsf	218,4,b	;volatile
  1763   000B58                     
  1764                           ; BSR set to: 14
  1765                           ;i2c.c: 61:   return tmp;
  1766   000B58  500A               	movf	I2C_2_Master_Read@tmp^0,w,c
  1767   000B5A                     
  1768                           ; BSR set to: 14
  1769   000B5A  0012               	return		;funcret
  1770   000B5C                     __end_of_I2C_2_Master_Read:
  1771                           	callstack 0
  1772                           
  1773 ;; *************** function _Light *****************
  1774 ;; Defined at:
  1775 ;;		line 14 in file "lights.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  colorcode       1    wreg     unsigned char 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  colorcode       1    6[COMRAM] unsigned char 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;Total ram usage:        1 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 2
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;;		_levels
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text8
  1805   000988                     __ptext8:
  1806                           	callstack 0
  1807   000988                     _Light:
  1808                           	callstack 26
  1809                           
  1810                           ; BSR set to: 14
  1811                           ;incstack = 0
  1812                           ;Light@colorcode stored from wreg
  1813   000988  6E07               	movwf	Light@colorcode^0,c
  1814   00098A                     
  1815                           ;lights.c: 15:     if (colorcode==0){
  1816   00098A  5007               	movf	Light@colorcode^0,w,c
  1817   00098C  A4D8               	btfss	status,2,c
  1818   00098E  EFCB  F004         	goto	u811
  1819   000992  EFCD  F004         	goto	u810
  1820   000996                     u811:
  1821   000996  EFD0  F004         	goto	l1531
  1822   00099A                     u810:
  1823   00099A                     
  1824                           ;lights.c: 16:         LATGbits.LATG1=1;
  1825   00099A  827F               	bsf	127,1,c	;volatile
  1826                           
  1827                           ;lights.c: 17:         LATFbits.LATF7=1;
  1828   00099C  8E7E               	bsf	126,7,c	;volatile
  1829                           
  1830                           ;lights.c: 18:         LATAbits.LATA4=1;
  1831   00099E  8879               	bsf	121,4,c	;volatile
  1832   0009A0                     l1531:
  1833                           
  1834                           ;lights.c: 20:     if (colorcode==1){
  1835   0009A0  0407               	decf	Light@colorcode^0,w,c
  1836   0009A2  A4D8               	btfss	status,2,c
  1837   0009A4  EFD6  F004         	goto	u821
  1838   0009A8  EFD8  F004         	goto	u820
  1839   0009AC                     u821:
  1840   0009AC  EFDB  F004         	goto	l1535
  1841   0009B0                     u820:
  1842   0009B0                     
  1843                           ;lights.c: 21:         LATGbits.LATG1=1;
  1844   0009B0  827F               	bsf	127,1,c	;volatile
  1845                           
  1846                           ;lights.c: 22:         LATFbits.LATF7=0;
  1847   0009B2  9E7E               	bcf	126,7,c	;volatile
  1848                           
  1849                           ;lights.c: 23:         LATAbits.LATA4=0;
  1850   0009B4  9879               	bcf	121,4,c	;volatile
  1851   0009B6                     l1535:
  1852                           
  1853                           ;lights.c: 25:     if (colorcode==2){
  1854   0009B6  0E02               	movlw	2
  1855   0009B8  1807               	xorwf	Light@colorcode^0,w,c
  1856   0009BA  A4D8               	btfss	status,2,c
  1857   0009BC  EFE2  F004         	goto	u831
  1858   0009C0  EFE4  F004         	goto	u830
  1859   0009C4                     u831:
  1860   0009C4  EFE7  F004         	goto	l1539
  1861   0009C8                     u830:
  1862   0009C8                     
  1863                           ;lights.c: 26:         LATGbits.LATG1=0;
  1864   0009C8  927F               	bcf	127,1,c	;volatile
  1865                           
  1866                           ;lights.c: 27:         LATFbits.LATF7=1;
  1867   0009CA  8E7E               	bsf	126,7,c	;volatile
  1868                           
  1869                           ;lights.c: 28:         LATAbits.LATA4=0;
  1870   0009CC  9879               	bcf	121,4,c	;volatile
  1871   0009CE                     l1539:
  1872                           
  1873                           ;lights.c: 30:     if (colorcode==3){
  1874   0009CE  0E03               	movlw	3
  1875   0009D0  1807               	xorwf	Light@colorcode^0,w,c
  1876   0009D2  A4D8               	btfss	status,2,c
  1877   0009D4  EFEE  F004         	goto	u841
  1878   0009D8  EFF0  F004         	goto	u840
  1879   0009DC                     u841:
  1880   0009DC  EFF3  F004         	goto	l209
  1881   0009E0                     u840:
  1882   0009E0                     
  1883                           ;lights.c: 31:         LATGbits.LATG1=0;
  1884   0009E0  927F               	bcf	127,1,c	;volatile
  1885                           
  1886                           ;lights.c: 32:         LATFbits.LATF7=0;
  1887   0009E2  9E7E               	bcf	126,7,c	;volatile
  1888                           
  1889                           ;lights.c: 33:         LATAbits.LATA4=1;
  1890   0009E4  8879               	bsf	121,4,c	;volatile
  1891   0009E6                     l209:
  1892   0009E6  0012               	return		;funcret
  1893   0009E8                     __end_of_Light:
  1894                           	callstack 0
  1895                           
  1896 ;; *************** function ___xxtofl *****************
  1897 ;; Defined at:
  1898 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  sign            1    wreg     unsigned char 
  1901 ;;  val             4   13[COMRAM] long 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  sign            1   21[COMRAM] unsigned char 
  1904 ;;  arg             4   23[COMRAM] unsigned long 
  1905 ;;  exp             1   22[COMRAM] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  4   13[COMRAM] unsigned char 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;Total ram usage:       14 bytes
  1920 ;; Hardware stack levels used: 1
  1921 ;; Hardware stack levels required when called: 2
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_readcard
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text9
  1930   000456                     __ptext9:
  1931                           	callstack 0
  1932   000456                     ___xxtofl:
  1933                           	callstack 27
  1934                           
  1935                           ;incstack = 0
  1936                           ;___xxtofl@sign stored from wreg
  1937   000456  6E16               	movwf	___xxtofl@sign^0,c
  1938   000458  5016               	movf	___xxtofl@sign^0,w,c
  1939   00045A  B4D8               	btfsc	status,2,c
  1940   00045C  EF32  F002         	goto	u951
  1941   000460  EF34  F002         	goto	u950
  1942   000464                     u951:
  1943   000464  EF56  F002         	goto	l1023
  1944   000468                     u950:
  1945   000468  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  1946   00046A  EF3B  F002         	goto	u960
  1947   00046E  EF39  F002         	goto	u961
  1948   000472                     u961:
  1949   000472  EF56  F002         	goto	l1023
  1950   000476                     u960:
  1951   000476  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  1952   00047A  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  1953   00047E  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  1954   000482  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  1955   000486  1E12               	comf	??___xxtofl^0,f,c
  1956   000488  1E13               	comf	(??___xxtofl+1)^0,f,c
  1957   00048A  1E14               	comf	(??___xxtofl+2)^0,f,c
  1958   00048C  1E15               	comf	(??___xxtofl+3)^0,f,c
  1959   00048E  2A12               	incf	??___xxtofl^0,f,c
  1960   000490  0E00               	movlw	0
  1961   000492  2213               	addwfc	(??___xxtofl+1)^0,f,c
  1962   000494  2214               	addwfc	(??___xxtofl+2)^0,f,c
  1963   000496  2215               	addwfc	(??___xxtofl+3)^0,f,c
  1964   000498  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  1965   00049C  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  1966   0004A0  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  1967   0004A4  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  1968   0004A8  EF5E  F002         	goto	l1643
  1969   0004AC                     l1023:
  1970   0004AC  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  1971   0004B0  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1972   0004B4  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1973   0004B8  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1974   0004BC                     l1643:
  1975   0004BC  500E               	movf	___xxtofl@val^0,w,c
  1976   0004BE  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  1977   0004C0  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  1978   0004C2  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  1979   0004C4  A4D8               	btfss	status,2,c
  1980   0004C6  EF67  F002         	goto	u971
  1981   0004CA  EF69  F002         	goto	u970
  1982   0004CE                     u971:
  1983   0004CE  EF73  F002         	goto	l1649
  1984   0004D2                     u970:
  1985   0004D2  0E00               	movlw	0
  1986   0004D4  6E0E               	movwf	?___xxtofl^0,c
  1987   0004D6  0E00               	movlw	0
  1988   0004D8  6E0F               	movwf	(?___xxtofl+1)^0,c
  1989   0004DA  0E00               	movlw	0
  1990   0004DC  6E10               	movwf	(?___xxtofl+2)^0,c
  1991   0004DE  0E00               	movlw	0
  1992   0004E0  6E11               	movwf	(?___xxtofl+3)^0,c
  1993   0004E2  EF04  F003         	goto	l1026
  1994   0004E6                     l1649:
  1995   0004E6  0E96               	movlw	150
  1996   0004E8  6E17               	movwf	___xxtofl@exp^0,c
  1997   0004EA  EF7D  F002         	goto	l1653
  1998   0004EE                     l1651:
  1999   0004EE  2A17               	incf	___xxtofl@exp^0,f,c
  2000   0004F0  90D8               	bcf	status,0,c
  2001   0004F2  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  2002   0004F4  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  2003   0004F6  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  2004   0004F8  3218               	rrcf	___xxtofl@arg^0,f,c
  2005   0004FA                     l1653:
  2006   0004FA  0E00               	movlw	0
  2007   0004FC  1418               	andwf	___xxtofl@arg^0,w,c
  2008   0004FE  6E12               	movwf	??___xxtofl^0,c
  2009   000500  0E00               	movlw	0
  2010   000502  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  2011   000504  6E13               	movwf	(??___xxtofl+1)^0,c
  2012   000506  0E00               	movlw	0
  2013   000508  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  2014   00050A  6E14               	movwf	(??___xxtofl+2)^0,c
  2015   00050C  0EFE               	movlw	254
  2016   00050E  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  2017   000510  6E15               	movwf	(??___xxtofl+3)^0,c
  2018   000512  5012               	movf	??___xxtofl^0,w,c
  2019   000514  1013               	iorwf	(??___xxtofl+1)^0,w,c
  2020   000516  1014               	iorwf	(??___xxtofl+2)^0,w,c
  2021   000518  1015               	iorwf	(??___xxtofl+3)^0,w,c
  2022   00051A  A4D8               	btfss	status,2,c
  2023   00051C  EF92  F002         	goto	u981
  2024   000520  EF94  F002         	goto	u980
  2025   000524                     u981:
  2026   000524  EF77  F002         	goto	l1651
  2027   000528                     u980:
  2028   000528  EFA2  F002         	goto	l1030
  2029   00052C                     l1655:
  2030   00052C  2A17               	incf	___xxtofl@exp^0,f,c
  2031   00052E  0E01               	movlw	1
  2032   000530  2618               	addwf	___xxtofl@arg^0,f,c
  2033   000532  0E00               	movlw	0
  2034   000534  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  2035   000536  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  2036   000538  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  2037   00053A  90D8               	bcf	status,0,c
  2038   00053C  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  2039   00053E  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  2040   000540  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  2041   000542  3218               	rrcf	___xxtofl@arg^0,f,c
  2042   000544                     l1030:
  2043   000544  0E00               	movlw	0
  2044   000546  1418               	andwf	___xxtofl@arg^0,w,c
  2045   000548  6E12               	movwf	??___xxtofl^0,c
  2046   00054A  0E00               	movlw	0
  2047   00054C  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  2048   00054E  6E13               	movwf	(??___xxtofl+1)^0,c
  2049   000550  0E00               	movlw	0
  2050   000552  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  2051   000554  6E14               	movwf	(??___xxtofl+2)^0,c
  2052   000556  0EFF               	movlw	255
  2053   000558  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  2054   00055A  6E15               	movwf	(??___xxtofl+3)^0,c
  2055   00055C  5012               	movf	??___xxtofl^0,w,c
  2056   00055E  1013               	iorwf	(??___xxtofl+1)^0,w,c
  2057   000560  1014               	iorwf	(??___xxtofl+2)^0,w,c
  2058   000562  1015               	iorwf	(??___xxtofl+3)^0,w,c
  2059   000564  A4D8               	btfss	status,2,c
  2060   000566  EFB7  F002         	goto	u991
  2061   00056A  EFB9  F002         	goto	u990
  2062   00056E                     u991:
  2063   00056E  EF96  F002         	goto	l1655
  2064   000572                     u990:
  2065   000572  EFC1  F002         	goto	l1663
  2066   000576                     l1661:
  2067   000576  0617               	decf	___xxtofl@exp^0,f,c
  2068   000578  90D8               	bcf	status,0,c
  2069   00057A  3618               	rlcf	___xxtofl@arg^0,f,c
  2070   00057C  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  2071   00057E  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  2072   000580  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  2073   000582                     l1663:
  2074   000582  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  2075   000584  EFC6  F002         	goto	u1001
  2076   000588  EFC8  F002         	goto	u1000
  2077   00058C                     u1001:
  2078   00058C  EFD0  F002         	goto	l1037
  2079   000590                     u1000:
  2080   000590  0E02               	movlw	2
  2081   000592  6017               	cpfslt	___xxtofl@exp^0,c
  2082   000594  EFCE  F002         	goto	u1011
  2083   000598  EFD0  F002         	goto	u1010
  2084   00059C                     u1011:
  2085   00059C  EFBB  F002         	goto	l1661
  2086   0005A0                     u1010:
  2087   0005A0                     l1037:
  2088   0005A0  B017               	btfsc	___xxtofl@exp^0,0,c
  2089   0005A2  EFD5  F002         	goto	u1021
  2090   0005A6  EFD7  F002         	goto	u1020
  2091   0005AA                     u1021:
  2092   0005AA  EFD8  F002         	goto	l1669
  2093   0005AE                     u1020:
  2094   0005AE  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  2095   0005B0                     l1669:
  2096   0005B0  90D8               	bcf	status,0,c
  2097   0005B2  3217               	rrcf	___xxtofl@exp^0,f,c
  2098   0005B4  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  2099   0005B8  6A13               	clrf	(??___xxtofl+1)^0,c
  2100   0005BA  6A14               	clrf	(??___xxtofl+2)^0,c
  2101   0005BC  6A15               	clrf	(??___xxtofl+3)^0,c
  2102   0005BE  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  2103   0005C2  6A14               	clrf	(??___xxtofl+2)^0,c
  2104   0005C4  6A13               	clrf	(??___xxtofl+1)^0,c
  2105   0005C6  6A12               	clrf	??___xxtofl^0,c
  2106   0005C8  5012               	movf	??___xxtofl^0,w,c
  2107   0005CA  1218               	iorwf	___xxtofl@arg^0,f,c
  2108   0005CC  5013               	movf	(??___xxtofl+1)^0,w,c
  2109   0005CE  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  2110   0005D0  5014               	movf	(??___xxtofl+2)^0,w,c
  2111   0005D2  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  2112   0005D4  5015               	movf	(??___xxtofl+3)^0,w,c
  2113   0005D6  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  2114   0005D8  5016               	movf	___xxtofl@sign^0,w,c
  2115   0005DA  B4D8               	btfsc	status,2,c
  2116   0005DC  EFF2  F002         	goto	u1031
  2117   0005E0  EFF4  F002         	goto	u1030
  2118   0005E4                     u1031:
  2119   0005E4  EFFC  F002         	goto	l1679
  2120   0005E8                     u1030:
  2121   0005E8  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  2122   0005EA  EFFB  F002         	goto	u1040
  2123   0005EE  EFF9  F002         	goto	u1041
  2124   0005F2                     u1041:
  2125   0005F2  EFFC  F002         	goto	l1679
  2126   0005F6                     u1040:
  2127   0005F6  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  2128   0005F8                     l1679:
  2129   0005F8  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  2130   0005FC  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  2131   000600  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  2132   000604  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  2133   000608                     l1026:
  2134   000608  0012               	return		;funcret
  2135   00060A                     __end_of___xxtofl:
  2136                           	callstack 0
  2137                           
  2138 ;; *************** function ___lwdiv *****************
  2139 ;; Defined at:
  2140 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  dividend        2    6[COMRAM] unsigned int 
  2143 ;;  divisor         2    8[COMRAM] unsigned int 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  quotient        2   10[COMRAM] unsigned int 
  2146 ;;  counter         1   12[COMRAM] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  2    6[COMRAM] unsigned int 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2159 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2160 ;;Total ram usage:        7 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 2
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_readcard
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text10
  2171   000914                     __ptext10:
  2172                           	callstack 0
  2173   000914                     ___lwdiv:
  2174                           	callstack 27
  2175   000914  0E00               	movlw	0
  2176   000916  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2177   000918  0E00               	movlw	0
  2178   00091A  6E0B               	movwf	___lwdiv@quotient^0,c
  2179   00091C  5009               	movf	___lwdiv@divisor^0,w,c
  2180   00091E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2181   000920  B4D8               	btfsc	status,2,c
  2182   000922  EF95  F004         	goto	u921
  2183   000926  EF97  F004         	goto	u920
  2184   00092A                     u921:
  2185   00092A  EFBF  F004         	goto	l859
  2186   00092E                     u920:
  2187   00092E  0E01               	movlw	1
  2188   000930  6E0D               	movwf	___lwdiv@counter^0,c
  2189   000932  EF9F  F004         	goto	l1623
  2190   000936                     l1621:
  2191   000936  90D8               	bcf	status,0,c
  2192   000938  3609               	rlcf	___lwdiv@divisor^0,f,c
  2193   00093A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2194   00093C  2A0D               	incf	___lwdiv@counter^0,f,c
  2195   00093E                     l1623:
  2196   00093E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  2197   000940  EFA4  F004         	goto	u931
  2198   000944  EFA6  F004         	goto	u930
  2199   000948                     u931:
  2200   000948  EF9B  F004         	goto	l1621
  2201   00094C                     u930:
  2202   00094C                     l1625:
  2203   00094C  90D8               	bcf	status,0,c
  2204   00094E  360B               	rlcf	___lwdiv@quotient^0,f,c
  2205   000950  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2206   000952  5009               	movf	___lwdiv@divisor^0,w,c
  2207   000954  5C07               	subwf	___lwdiv@dividend^0,w,c
  2208   000956  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2209   000958  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2210   00095A  A0D8               	btfss	status,0,c
  2211   00095C  EFB2  F004         	goto	u941
  2212   000960  EFB4  F004         	goto	u940
  2213   000964                     u941:
  2214   000964  EFB9  F004         	goto	l1633
  2215   000968                     u940:
  2216   000968  5009               	movf	___lwdiv@divisor^0,w,c
  2217   00096A  5E07               	subwf	___lwdiv@dividend^0,f,c
  2218   00096C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2219   00096E  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2220   000970  800B               	bsf	___lwdiv@quotient^0,0,c
  2221   000972                     l1633:
  2222   000972  90D8               	bcf	status,0,c
  2223   000974  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2224   000976  3209               	rrcf	___lwdiv@divisor^0,f,c
  2225   000978  2E0D               	decfsz	___lwdiv@counter^0,f,c
  2226   00097A  EFA6  F004         	goto	l1625
  2227   00097E                     l859:
  2228   00097E  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  2229   000982  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2230   000986  0012               	return		;funcret
  2231   000988                     __end_of___lwdiv:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function ___flge *****************
  2235 ;; Defined at:
  2236 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  ff1             4    6[COMRAM] unsigned int 
  2239 ;;  ff2             4   10[COMRAM] unsigned int 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;		None               void
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2251 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2255 ;;Total ram usage:       12 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 2
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_readcard
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text11
  2266   000798                     __ptext11:
  2267                           	callstack 0
  2268   000798                     ___flge:
  2269                           	callstack 27
  2270   000798  0E00               	movlw	0
  2271   00079A  1407               	andwf	___flge@ff1^0,w,c
  2272   00079C  6E0F               	movwf	??___flge^0,c
  2273   00079E  0E00               	movlw	0
  2274   0007A0  1408               	andwf	(___flge@ff1+1)^0,w,c
  2275   0007A2  6E10               	movwf	(??___flge+1)^0,c
  2276   0007A4  0E80               	movlw	128
  2277   0007A6  1409               	andwf	(___flge@ff1+2)^0,w,c
  2278   0007A8  6E11               	movwf	(??___flge+2)^0,c
  2279   0007AA  0E7F               	movlw	127
  2280   0007AC  140A               	andwf	(___flge@ff1+3)^0,w,c
  2281   0007AE  6E12               	movwf	(??___flge+3)^0,c
  2282   0007B0  500F               	movf	??___flge^0,w,c
  2283   0007B2  1010               	iorwf	(??___flge+1)^0,w,c
  2284   0007B4  1011               	iorwf	(??___flge+2)^0,w,c
  2285   0007B6  1012               	iorwf	(??___flge+3)^0,w,c
  2286   0007B8  A4D8               	btfss	status,2,c
  2287   0007BA  EFE1  F003         	goto	u871
  2288   0007BE  EFE3  F003         	goto	u870
  2289   0007C2                     u871:
  2290   0007C2  EFEB  F003         	goto	l1597
  2291   0007C6                     u870:
  2292   0007C6  0E00               	movlw	0
  2293   0007C8  6E07               	movwf	___flge@ff1^0,c
  2294   0007CA  0E00               	movlw	0
  2295   0007CC  6E08               	movwf	(___flge@ff1+1)^0,c
  2296   0007CE  0E00               	movlw	0
  2297   0007D0  6E09               	movwf	(___flge@ff1+2)^0,c
  2298   0007D2  0E00               	movlw	0
  2299   0007D4  6E0A               	movwf	(___flge@ff1+3)^0,c
  2300   0007D6                     l1597:
  2301   0007D6  0E00               	movlw	0
  2302   0007D8  140B               	andwf	___flge@ff2^0,w,c
  2303   0007DA  6E0F               	movwf	??___flge^0,c
  2304   0007DC  0E00               	movlw	0
  2305   0007DE  140C               	andwf	(___flge@ff2+1)^0,w,c
  2306   0007E0  6E10               	movwf	(??___flge+1)^0,c
  2307   0007E2  0E80               	movlw	128
  2308   0007E4  140D               	andwf	(___flge@ff2+2)^0,w,c
  2309   0007E6  6E11               	movwf	(??___flge+2)^0,c
  2310   0007E8  0E7F               	movlw	127
  2311   0007EA  140E               	andwf	(___flge@ff2+3)^0,w,c
  2312   0007EC  6E12               	movwf	(??___flge+3)^0,c
  2313   0007EE  500F               	movf	??___flge^0,w,c
  2314   0007F0  1010               	iorwf	(??___flge+1)^0,w,c
  2315   0007F2  1011               	iorwf	(??___flge+2)^0,w,c
  2316   0007F4  1012               	iorwf	(??___flge+3)^0,w,c
  2317   0007F6  A4D8               	btfss	status,2,c
  2318   0007F8  EF00  F004         	goto	u881
  2319   0007FC  EF02  F004         	goto	u880
  2320   000800                     u881:
  2321   000800  EF0A  F004         	goto	l1601
  2322   000804                     u880:
  2323   000804  0E00               	movlw	0
  2324   000806  6E0B               	movwf	___flge@ff2^0,c
  2325   000808  0E00               	movlw	0
  2326   00080A  6E0C               	movwf	(___flge@ff2+1)^0,c
  2327   00080C  0E00               	movlw	0
  2328   00080E  6E0D               	movwf	(___flge@ff2+2)^0,c
  2329   000810  0E00               	movlw	0
  2330   000812  6E0E               	movwf	(___flge@ff2+3)^0,c
  2331   000814                     l1601:
  2332   000814  AE0A               	btfss	(___flge@ff1+3)^0,7,c
  2333   000816  EF0F  F004         	goto	u891
  2334   00081A  EF11  F004         	goto	u890
  2335   00081E                     u891:
  2336   00081E  EF1A  F004         	goto	l1605
  2337   000822                     u890:
  2338   000822  6C07               	negf	___flge@ff1^0,c
  2339   000824  1E08               	comf	(___flge@ff1+1)^0,f,c
  2340   000826  B0D8               	btfsc	status,0,c
  2341   000828  2A08               	incf	(___flge@ff1+1)^0,f,c
  2342   00082A  1E09               	comf	(___flge@ff1+2)^0,f,c
  2343   00082C  B0D8               	btfsc	status,0,c
  2344   00082E  2A09               	incf	(___flge@ff1+2)^0,f,c
  2345   000830  0E80               	movlw	128
  2346   000832  560A               	subfwb	(___flge@ff1+3)^0,f,c
  2347   000834                     l1605:
  2348   000834  AE0E               	btfss	(___flge@ff2+3)^0,7,c
  2349   000836  EF1F  F004         	goto	u901
  2350   00083A  EF21  F004         	goto	u900
  2351   00083E                     u901:
  2352   00083E  EF2A  F004         	goto	l633
  2353   000842                     u900:
  2354   000842  6C0B               	negf	___flge@ff2^0,c
  2355   000844  1E0C               	comf	(___flge@ff2+1)^0,f,c
  2356   000846  B0D8               	btfsc	status,0,c
  2357   000848  2A0C               	incf	(___flge@ff2+1)^0,f,c
  2358   00084A  1E0D               	comf	(___flge@ff2+2)^0,f,c
  2359   00084C  B0D8               	btfsc	status,0,c
  2360   00084E  2A0D               	incf	(___flge@ff2+2)^0,f,c
  2361   000850  0E80               	movlw	128
  2362   000852  560E               	subfwb	(___flge@ff2+3)^0,f,c
  2363   000854                     l633:
  2364   000854  0E00               	movlw	0
  2365   000856  1A07               	xorwf	___flge@ff1^0,f,c
  2366   000858  0E00               	movlw	0
  2367   00085A  1A08               	xorwf	(___flge@ff1+1)^0,f,c
  2368   00085C  0E00               	movlw	0
  2369   00085E  1A09               	xorwf	(___flge@ff1+2)^0,f,c
  2370   000860  0E80               	movlw	128
  2371   000862  1A0A               	xorwf	(___flge@ff1+3)^0,f,c
  2372   000864  0E00               	movlw	0
  2373   000866  1A0B               	xorwf	___flge@ff2^0,f,c
  2374   000868  0E00               	movlw	0
  2375   00086A  1A0C               	xorwf	(___flge@ff2+1)^0,f,c
  2376   00086C  0E00               	movlw	0
  2377   00086E  1A0D               	xorwf	(___flge@ff2+2)^0,f,c
  2378   000870  0E80               	movlw	128
  2379   000872  1A0E               	xorwf	(___flge@ff2+3)^0,f,c
  2380   000874  500B               	movf	___flge@ff2^0,w,c
  2381   000876  5C07               	subwf	___flge@ff1^0,w,c
  2382   000878  500C               	movf	(___flge@ff2+1)^0,w,c
  2383   00087A  5808               	subwfb	(___flge@ff1+1)^0,w,c
  2384   00087C  500D               	movf	(___flge@ff2+2)^0,w,c
  2385   00087E  5809               	subwfb	(___flge@ff1+2)^0,w,c
  2386   000880  500E               	movf	(___flge@ff2+3)^0,w,c
  2387   000882  580A               	subwfb	(___flge@ff1+3)^0,w,c
  2388   000884  B0D8               	btfsc	status,0,c
  2389   000886  EF47  F004         	goto	u911
  2390   00088A  EF49  F004         	goto	u910
  2391   00088E                     u911:
  2392   00088E  EF4C  F004         	goto	l1611
  2393   000892                     u910:
  2394   000892  90D8               	bcf	status,0,c
  2395   000894  EF4D  F004         	goto	l638
  2396   000898                     l1611:
  2397   000898  80D8               	bsf	status,0,c
  2398   00089A                     l638:
  2399   00089A  0012               	return		;funcret
  2400   00089C                     __end_of___flge:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _initUSART4 *****************
  2404 ;; Defined at:
  2405 ;;		line 5 in file "serial.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;Total ram usage:        0 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 2
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text12
  2434   000CF6                     __ptext12:
  2435                           	callstack 0
  2436   000CF6                     _initUSART4:
  2437                           	callstack 28
  2438   000CF6                     
  2439                           ;serial.c: 6:     RC0PPS = 0x12;
  2440   000CF6  0E12               	movlw	18
  2441   000CF8  010E               	movlb	14	; () banked
  2442   000CFA  6F62               	movwf	98,b	;volatile
  2443                           
  2444                           ;serial.c: 7:     RX4PPS = 0x11;
  2445   000CFC  0E11               	movlw	17
  2446   000CFE  6F15               	movwf	21,b	;volatile
  2447   000D00                     
  2448                           ; BSR set to: 14
  2449                           ;serial.c: 9:     BAUD4CONbits.BRG16 = 0;
  2450   000D00  97E9               	bcf	233,3,b	;volatile
  2451   000D02                     
  2452                           ; BSR set to: 14
  2453                           ;serial.c: 10:     TX4STAbits.BRGH = 0;
  2454   000D02  95E8               	bcf	232,2,b	;volatile
  2455                           
  2456                           ;serial.c: 11:     SP4BRGL = 51;
  2457   000D04  0E33               	movlw	51
  2458   000D06  6FE5               	movwf	229,b	;volatile
  2459                           
  2460                           ;serial.c: 12:     SP4BRGH = 0;
  2461   000D08  0E00               	movlw	0
  2462   000D0A  6FE6               	movwf	230,b	;volatile
  2463   000D0C                     
  2464                           ; BSR set to: 14
  2465                           ;serial.c: 14:     RC4STAbits.CREN = 1;
  2466   000D0C  89E7               	bsf	231,4,b	;volatile
  2467   000D0E                     
  2468                           ; BSR set to: 14
  2469                           ;serial.c: 15:     TX4STAbits.TXEN = 1;
  2470   000D0E  8BE8               	bsf	232,5,b	;volatile
  2471   000D10                     
  2472                           ; BSR set to: 14
  2473                           ;serial.c: 16:     RC4STAbits.SPEN = 1;
  2474   000D10  8FE7               	bsf	231,7,b	;volatile
  2475   000D12                     
  2476                           ; BSR set to: 14
  2477   000D12  0012               	return		;funcret
  2478   000D14                     __end_of_initUSART4:
  2479                           	callstack 0
  2480                           
  2481 ;; *************** function _color_click_init *****************
  2482 ;; Defined at:
  2483 ;;		line 5 in file "color.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2501 ;;Total ram usage:        1 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 5
  2504 ;; This function calls:
  2505 ;;		_I2C_2_Master_Init
  2506 ;;		_color_writetoaddr
  2507 ;; This function is called by:
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text13
  2513   000BD0                     __ptext13:
  2514                           	callstack 0
  2515   000BD0                     _color_click_init:
  2516                           	callstack 25
  2517   000BD0                     
  2518                           ;color.c: 8:     I2C_2_Master_Init();
  2519   000BD0  EC18  F006         	call	_I2C_2_Master_Init	;wreg free
  2520   000BD4                     
  2521                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2522   000BD4  0E01               	movlw	1
  2523   000BD6  6E09               	movwf	color_writetoaddr@value^0,c
  2524   000BD8  0E00               	movlw	0
  2525   000BDA  EC6B  F006         	call	_color_writetoaddr
  2526   000BDE                     
  2527                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2528   000BDE  0E3F               	movlw	63
  2529   000BE0  6E0B               	movwf	??_color_click_init^0,c
  2530   000BE2  0E55               	movlw	85
  2531   000BE4                     u1477:
  2532   000BE4  2EE8               	decfsz	wreg,f,c
  2533   000BE6  D7FE               	bra	u1477
  2534   000BE8  2E0B               	decfsz	??_color_click_init^0,f,c
  2535   000BEA  D7FC               	bra	u1477
  2536   000BEC  F000               	nop	
  2537   000BEE                     
  2538                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2539   000BEE  0E03               	movlw	3
  2540   000BF0  6E09               	movwf	color_writetoaddr@value^0,c
  2541   000BF2  0E00               	movlw	0
  2542   000BF4  EC6B  F006         	call	_color_writetoaddr
  2543   000BF8                     
  2544                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2545   000BF8  0ED5               	movlw	213
  2546   000BFA  6E09               	movwf	color_writetoaddr@value^0,c
  2547   000BFC  0E01               	movlw	1
  2548   000BFE  EC6B  F006         	call	_color_writetoaddr
  2549   000C02  0012               	return		;funcret
  2550   000C04                     __end_of_color_click_init:
  2551                           	callstack 0
  2552                           
  2553 ;; *************** function _color_writetoaddr *****************
  2554 ;; Defined at:
  2555 ;;		line 21 in file "color.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  address         1    wreg     unsigned char 
  2558 ;;  value           1    8[COMRAM] unsigned char 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  address         1    9[COMRAM] unsigned char 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2570 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;Total ram usage:        2 bytes
  2575 ;; Hardware stack levels used: 1
  2576 ;; Hardware stack levels required when called: 4
  2577 ;; This function calls:
  2578 ;;		_I2C_2_Master_Start
  2579 ;;		_I2C_2_Master_Stop
  2580 ;;		_I2C_2_Master_Write
  2581 ;; This function is called by:
  2582 ;;		_color_click_init
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text14
  2587   000CD6                     __ptext14:
  2588                           	callstack 0
  2589   000CD6                     _color_writetoaddr:
  2590                           	callstack 25
  2591                           
  2592                           ;incstack = 0
  2593                           ;color_writetoaddr@address stored from wreg
  2594   000CD6  6E0A               	movwf	color_writetoaddr@address^0,c
  2595   000CD8                     
  2596                           ;color.c: 22:     I2C_2_Master_Start();
  2597   000CD8  ECB5  F006         	call	_I2C_2_Master_Start	;wreg free
  2598                           
  2599                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2600   000CDC  0E52               	movlw	82
  2601   000CDE  ECA5  F006         	call	_I2C_2_Master_Write
  2602                           
  2603                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2604   000CE2  500A               	movf	color_writetoaddr@address^0,w,c
  2605   000CE4  0980               	iorlw	128
  2606   000CE6  ECA5  F006         	call	_I2C_2_Master_Write
  2607                           
  2608                           ;color.c: 25:     I2C_2_Master_Write(value);
  2609   000CEA  5009               	movf	color_writetoaddr@value^0,w,c
  2610   000CEC  ECA5  F006         	call	_I2C_2_Master_Write
  2611                           
  2612                           ;color.c: 26:     I2C_2_Master_Stop();
  2613   000CF0  ECB0  F006         	call	_I2C_2_Master_Stop	;wreg free
  2614   000CF4  0012               	return		;funcret
  2615   000CF6                     __end_of_color_writetoaddr:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _I2C_2_Master_Write *****************
  2619 ;; Defined at:
  2620 ;;		line 45 in file "i2c.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  data_byte       1    wreg     unsigned char 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  data_byte       1    7[COMRAM] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2638 ;;Total ram usage:        1 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 3
  2641 ;; This function calls:
  2642 ;;		_I2C_2_Master_Idle
  2643 ;; This function is called by:
  2644 ;;		_color_writetoaddr
  2645 ;;		_color_read_Red
  2646 ;;		_color_read_Blue
  2647 ;;		_color_read_Green
  2648 ;;		_color_read_Clear
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text15
  2653   000D4A                     __ptext15:
  2654                           	callstack 0
  2655   000D4A                     _I2C_2_Master_Write:
  2656                           	callstack 24
  2657                           
  2658                           ;incstack = 0
  2659                           ;I2C_2_Master_Write@data_byte stored from wreg
  2660   000D4A  6E08               	movwf	I2C_2_Master_Write@data_byte^0,c
  2661   000D4C                     
  2662                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2663   000D4C  EC57  F006         	call	_I2C_2_Master_Idle	;wreg free
  2664   000D50                     
  2665                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2666   000D50  C008  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2667   000D54  0012               	return		;funcret
  2668   000D56                     __end_of_I2C_2_Master_Write:
  2669                           	callstack 0
  2670                           
  2671 ;; *************** function _I2C_2_Master_Stop *****************
  2672 ;; Defined at:
  2673 ;;		line 39 in file "i2c.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;Total ram usage:        0 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 3
  2694 ;; This function calls:
  2695 ;;		_I2C_2_Master_Idle
  2696 ;; This function is called by:
  2697 ;;		_color_writetoaddr
  2698 ;;		_color_read_Red
  2699 ;;		_color_read_Blue
  2700 ;;		_color_read_Green
  2701 ;;		_color_read_Clear
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text16
  2706   000D60                     __ptext16:
  2707                           	callstack 0
  2708   000D60                     _I2C_2_Master_Stop:
  2709                           	callstack 24
  2710   000D60                     
  2711                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2712   000D60  EC57  F006         	call	_I2C_2_Master_Idle	;wreg free
  2713   000D64                     
  2714                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2715   000D64  010E               	movlb	14	; () banked
  2716   000D66  85DA               	bsf	218,2,b	;volatile
  2717   000D68                     
  2718                           ; BSR set to: 14
  2719   000D68  0012               	return		;funcret
  2720   000D6A                     __end_of_I2C_2_Master_Stop:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _I2C_2_Master_Start *****************
  2724 ;; Defined at:
  2725 ;;		line 27 in file "i2c.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; Hardware stack levels required when called: 3
  2746 ;; This function calls:
  2747 ;;		_I2C_2_Master_Idle
  2748 ;; This function is called by:
  2749 ;;		_color_writetoaddr
  2750 ;;		_color_read_Red
  2751 ;;		_color_read_Blue
  2752 ;;		_color_read_Green
  2753 ;;		_color_read_Clear
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text17
  2758   000D6A                     __ptext17:
  2759                           	callstack 0
  2760   000D6A                     _I2C_2_Master_Start:
  2761                           	callstack 24
  2762   000D6A                     
  2763                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2764   000D6A  EC57  F006         	call	_I2C_2_Master_Idle	;wreg free
  2765   000D6E                     
  2766                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2767   000D6E  010E               	movlb	14	; () banked
  2768   000D70  81DA               	bsf	218,0,b	;volatile
  2769   000D72                     
  2770                           ; BSR set to: 14
  2771   000D72  0012               	return		;funcret
  2772   000D74                     __end_of_I2C_2_Master_Start:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _I2C_2_Master_Idle *****************
  2776 ;; Defined at:
  2777 ;;		line 22 in file "i2c.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2795 ;;Total ram usage:        1 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; Hardware stack levels required when called: 2
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_I2C_2_Master_Start
  2802 ;;		_I2C_2_Master_RepStart
  2803 ;;		_I2C_2_Master_Stop
  2804 ;;		_I2C_2_Master_Write
  2805 ;;		_I2C_2_Master_Read
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text18
  2810   000CAE                     __ptext18:
  2811                           	callstack 0
  2812   000CAE                     _I2C_2_Master_Idle:
  2813                           	callstack 24
  2814   000CAE                     l347:
  2815   000CAE  010E               	movlb	14	; () banked
  2816   000CB0  B5D8               	btfsc	216,2,b	;volatile
  2817   000CB2  EF5D  F006         	goto	u771
  2818   000CB6  EF5F  F006         	goto	u770
  2819   000CBA                     u771:
  2820   000CBA  EF57  F006         	goto	l347
  2821   000CBE                     u770:
  2822   000CBE                     
  2823                           ; BSR set to: 14
  2824   000CBE  CEDA F007          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2825   000CC2  0E1F               	movlw	31
  2826   000CC4  1607               	andwf	??_I2C_2_Master_Idle^0,f,c
  2827   000CC6  A4D8               	btfss	status,2,c
  2828   000CC8  EF68  F006         	goto	u781
  2829   000CCC  EF6A  F006         	goto	u780
  2830   000CD0                     u781:
  2831   000CD0  EF57  F006         	goto	l347
  2832   000CD4                     u780:
  2833   000CD4                     
  2834                           ; BSR set to: 14
  2835   000CD4  0012               	return		;funcret
  2836   000CD6                     __end_of_I2C_2_Master_Idle:
  2837                           	callstack 0
  2838                           
  2839 ;; *************** function _I2C_2_Master_Init *****************
  2840 ;; Defined at:
  2841 ;;		line 4 in file "i2c.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;Total ram usage:        0 bytes
  2860 ;; Hardware stack levels used: 1
  2861 ;; Hardware stack levels required when called: 2
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_color_click_init
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text19
  2870   000C30                     __ptext19:
  2871                           	callstack 0
  2872   000C30                     _I2C_2_Master_Init:
  2873                           	callstack 27
  2874   000C30                     
  2875                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2876   000C30  010E               	movlb	14	; () banked
  2877   000C32  51D9               	movf	217,w,b	;volatile
  2878   000C34  0BF0               	andlw	-16
  2879   000C36  0908               	iorlw	8
  2880   000C38  6FD9               	movwf	217,b	;volatile
  2881   000C3A                     
  2882                           ; BSR set to: 14
  2883                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2884   000C3A  8BD9               	bsf	217,5,b	;volatile
  2885                           
  2886                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2887   000C3C  0E9F               	movlw	159
  2888   000C3E  6FD6               	movwf	214,b	;volatile
  2889   000C40                     
  2890                           ; BSR set to: 14
  2891                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2892   000C40  8A84               	bsf	132,5,c	;volatile
  2893   000C42                     
  2894                           ; BSR set to: 14
  2895                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2896   000C42  8C84               	bsf	132,6,c	;volatile
  2897   000C44                     
  2898                           ; BSR set to: 14
  2899                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2900   000C44  9BA7               	bcf	167,5,b	;volatile
  2901   000C46                     
  2902                           ; BSR set to: 14
  2903                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2904   000C46  9DA7               	bcf	167,6,b	;volatile
  2905                           
  2906                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2907   000C48  0E1D               	movlw	29
  2908   000C4A  6F1D               	movwf	29,b	;volatile
  2909                           
  2910                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2911   000C4C  0E1E               	movlw	30
  2912   000C4E  6F1C               	movwf	28,b	;volatile
  2913                           
  2914                           ;i2c.c: 18:   RD5PPS=0x1C;
  2915   000C50  0E1C               	movlw	28
  2916   000C52  6F6F               	movwf	111,b	;volatile
  2917                           
  2918                           ;i2c.c: 19:   RD6PPS=0x1B;
  2919   000C54  0E1B               	movlw	27
  2920   000C56  6F70               	movwf	112,b	;volatile
  2921   000C58                     
  2922                           ; BSR set to: 14
  2923   000C58  0012               	return		;funcret
  2924   000C5A                     __end_of_I2C_2_Master_Init:
  2925                           	callstack 0
  2926                           
  2927 ;; *************** function _TxBufferedString *****************
  2928 ;; Defined at:
  2929 ;;		line 84 in file "serial.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  string          2    7[COMRAM] PTR unsigned char 
  2932 ;;		 -> main@buf(15), 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2948 ;;Total ram usage:        2 bytes
  2949 ;; Hardware stack levels used: 1
  2950 ;; Hardware stack levels required when called: 3
  2951 ;; This function calls:
  2952 ;;		_putCharToTxBuf
  2953 ;; This function is called by:
  2954 ;;		_main
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text20
  2959   000B98                     __ptext20:
  2960                           	callstack 0
  2961   000B98                     _TxBufferedString:
  2962                           	callstack 27
  2963   000B98                     
  2964                           ;serial.c: 86:     while(*string != 0){
  2965   000B98  EFD7  F005         	goto	l1783
  2966   000B9C                     l1779:
  2967                           
  2968                           ;serial.c: 87:   putCharToTxBuf(*string++);
  2969   000B9C  C008  FFD9         	movff	TxBufferedString@string,fsr2l
  2970   000BA0  C009  FFDA         	movff	TxBufferedString@string+1,fsr2h
  2971   000BA4  50DF               	movf	indf2,w,c
  2972   000BA6  EC2D  F006         	call	_putCharToTxBuf
  2973   000BAA  4A08               	infsnz	TxBufferedString@string^0,f,c
  2974   000BAC  2A09               	incf	(TxBufferedString@string+1)^0,f,c
  2975   000BAE                     l1783:
  2976                           
  2977                           ;serial.c: 86:     while(*string != 0){
  2978   000BAE  C008  FFD9         	movff	TxBufferedString@string,fsr2l
  2979   000BB2  C009  FFDA         	movff	TxBufferedString@string+1,fsr2h
  2980   000BB6  50DF               	movf	indf2,w,c
  2981   000BB8  A4D8               	btfss	status,2,c
  2982   000BBA  EFE1  F005         	goto	u1181
  2983   000BBE  EFE3  F005         	goto	u1180
  2984   000BC2                     u1181:
  2985   000BC2  EFCE  F005         	goto	l1779
  2986   000BC6                     u1180:
  2987   000BC6                     
  2988                           ;serial.c: 89:     sendFLAG=1;
  2989   000BC6  0E01               	movlw	1
  2990   000BC8  6E48               	movwf	_sendFLAG^0,c
  2991   000BCA                     
  2992                           ;serial.c: 90:     PIE4bits.TX4IE=1;
  2993   000BCA  010E               	movlb	14	; () banked
  2994   000BCC  852D               	bsf	45,2,b	;volatile
  2995   000BCE                     
  2996                           ; BSR set to: 14
  2997   000BCE  0012               	return		;funcret
  2998   000BD0                     __end_of_TxBufferedString:
  2999                           	callstack 0
  3000                           
  3001 ;; *************** function _putCharToTxBuf *****************
  3002 ;; Defined at:
  3003 ;;		line 71 in file "serial.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  byte            1    wreg     unsigned char 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  byte            1    6[COMRAM] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3021 ;;Total ram usage:        1 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 2
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_TxBufferedString
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text21
  3032   000C5A                     __ptext21:
  3033                           	callstack 0
  3034   000C5A                     _putCharToTxBuf:
  3035                           	callstack 27
  3036                           
  3037                           ; BSR set to: 14
  3038                           ;incstack = 0
  3039                           ;putCharToTxBuf@byte stored from wreg
  3040   000C5A  6E07               	movwf	putCharToTxBuf@byte^0,c
  3041   000C5C                     
  3042                           ;serial.c: 72:     if (TxBufWriteCnt>=100) {TxBufWriteCnt=0;}
  3043   000C5C  0E63               	movlw	99
  3044   000C5E  6445               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3045   000C60  EF34  F006         	goto	u861
  3046   000C64  EF36  F006         	goto	u860
  3047   000C68                     u861:
  3048   000C68  EF38  F006         	goto	l1589
  3049   000C6C                     u860:
  3050   000C6C  0E00               	movlw	0
  3051   000C6E  6E45               	movwf	_TxBufWriteCnt^0,c	;volatile
  3052   000C70                     l1589:
  3053                           
  3054                           ;serial.c: 73:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3055   000C70  0E00               	movlw	low _EUSART4TXbuf
  3056   000C72  2445               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  3057   000C74  6ED9               	movwf	fsr2l,c
  3058   000C76  6ADA               	clrf	fsr2h,c
  3059   000C78  0E01               	movlw	high _EUSART4TXbuf
  3060   000C7A  22DA               	addwfc	fsr2h,f,c
  3061   000C7C  C007  FFDF         	movff	putCharToTxBuf@byte,indf2
  3062   000C80  2A45               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3063   000C82  0012               	return		;funcret
  3064   000C84                     __end_of_putCharToTxBuf:
  3065                           	callstack 0
  3066                           
  3067 ;; *************** function _LightInit *****************
  3068 ;; Defined at:
  3069 ;;		line 4 in file "lights.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		None
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;Total ram usage:        0 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; Hardware stack levels required when called: 2
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text22
  3098   000D3C                     __ptext22:
  3099                           	callstack 0
  3100   000D3C                     _LightInit:
  3101                           	callstack 28
  3102   000D3C                     
  3103                           ;lights.c: 5:     TRISGbits.TRISG1=0;
  3104   000D3C  9287               	bcf	135,1,c	;volatile
  3105                           
  3106                           ;lights.c: 6:     TRISFbits.TRISF7=0;
  3107   000D3E  9E86               	bcf	134,7,c	;volatile
  3108                           
  3109                           ;lights.c: 7:     TRISAbits.TRISA4=0;
  3110   000D40  9881               	bcf	129,4,c	;volatile
  3111                           
  3112                           ;lights.c: 8:     LATGbits.LATG1=0;
  3113   000D42  927F               	bcf	127,1,c	;volatile
  3114                           
  3115                           ;lights.c: 9:     LATFbits.LATF7=0;
  3116   000D44  9E7E               	bcf	126,7,c	;volatile
  3117                           
  3118                           ;lights.c: 10:     LATAbits.LATA4=0;
  3119   000D46  9879               	bcf	121,4,c	;volatile
  3120   000D48  0012               	return		;funcret
  3121   000D4A                     __end_of_LightInit:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _Interrupts_init *****************
  3125 ;; Defined at:
  3126 ;;		line 9 in file "interrupts.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		None
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 2
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_main
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           	psect	text23
  3155   000D2C                     __ptext23:
  3156                           	callstack 0
  3157   000D2C                     _Interrupts_init:
  3158                           	callstack 28
  3159   000D2C                     
  3160                           ;interrupts.c: 11:     INTCONbits.PEIE=1;
  3161   000D2C  8CF2               	bsf	242,6,c	;volatile
  3162                           
  3163                           ;interrupts.c: 12:     INTCONbits.IPEN=1;
  3164   000D2E  8AF2               	bsf	242,5,c	;volatile
  3165                           
  3166                           ;interrupts.c: 13:     PIE4bits.RC4IE=1;
  3167   000D30  010E               	movlb	14	; () banked
  3168   000D32  872D               	bsf	45,3,b	;volatile
  3169                           
  3170                           ;interrupts.c: 14:     PIE4bits.TX4IE=0;
  3171   000D34  952D               	bcf	45,2,b	;volatile
  3172                           
  3173                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  3174   000D36  8B29               	bsf	41,5,b	;volatile
  3175                           
  3176                           ;interrupts.c: 16:     INTCONbits.GIE=1;
  3177   000D38  8EF2               	bsf	242,7,c	;volatile
  3178   000D3A                     
  3179                           ; BSR set to: 14
  3180   000D3A  0012               	return		;funcret
  3181   000D3C                     __end_of_Interrupts_init:
  3182                           	callstack 0
  3183                           
  3184 ;; *************** function _HighISR *****************
  3185 ;; Defined at:
  3186 ;;		line 25 in file "interrupts.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  reg             1    5[COMRAM] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3204 ;;Total ram usage:        4 bytes
  3205 ;; Hardware stack levels used: 1
  3206 ;; Hardware stack levels required when called: 1
  3207 ;; This function calls:
  3208 ;;		_getCharFromTxBuf
  3209 ;;		_isDataInTxBuf
  3210 ;;		_putCharToRxBuf
  3211 ;; This function is called by:
  3212 ;;		Interrupt level 2
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	intcode
  3217   000008                     __pintcode:
  3218                           	callstack 0
  3219   000008                     _HighISR:
  3220                           	callstack 24
  3221                           
  3222                           ; BSR set to: 14
  3223                           ;incstack = 0
  3224   000008  824A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3225   00000A  CFD9 F004          	movff	fsr2l,??_HighISR+1
  3226   00000E  CFDA F005          	movff	fsr2h,??_HighISR+2
  3227   000012                     
  3228                           ;interrupts.c: 28:  if(PIR4bits.TX4IF & sendFLAG){
  3229   000012  010E               	movlb	14	; () banked
  3230   000014  B537               	btfsc	55,2,b	;volatile
  3231   000016  EF0F  F000         	goto	i2u137_41
  3232   00001A  EF12  F000         	goto	i2u137_40
  3233   00001E                     i2u137_41:
  3234   00001E  0E01               	movlw	1
  3235   000020  EF13  F000         	goto	i2u137_46
  3236   000024                     i2u137_40:
  3237   000024  0E00               	movlw	0
  3238   000026                     i2u137_46:
  3239   000026  1448               	andwf	_sendFLAG^0,w,c
  3240   000028  0900               	iorlw	0
  3241   00002A  B4D8               	btfsc	status,2,c
  3242   00002C  EF1A  F000         	goto	i2u138_41
  3243   000030  EF1C  F000         	goto	i2u138_40
  3244   000034                     i2u138_41:
  3245   000034  EF3F  F000         	goto	i2l1871
  3246   000038                     i2u138_40:
  3247   000038                     
  3248                           ; BSR set to: 14
  3249                           ;interrupts.c: 29:         TX4REG = getCharFromTxBuf();
  3250   000038  EC02  F006         	call	_getCharFromTxBuf	;wreg free
  3251   00003C  010E               	movlb	14	; () banked
  3252   00003E  6FE4               	movwf	228,b	;volatile
  3253   000040                     
  3254                           ; BSR set to: 14
  3255                           ;interrupts.c: 30:         if (!isDataInTxBuf()){
  3256   000040  EC8A  F006         	call	_isDataInTxBuf	;wreg free
  3257   000044  0900               	iorlw	0
  3258   000046  A4D8               	btfss	status,2,c
  3259   000048  EF28  F000         	goto	i2u139_41
  3260   00004C  EF2A  F000         	goto	i2u139_40
  3261   000050                     i2u139_41:
  3262   000050  EF2E  F000         	goto	i2l1869
  3263   000054                     i2u139_40:
  3264   000054                     
  3265                           ;interrupts.c: 31:             PIE4bits.TX4IE=0;
  3266   000054  010E               	movlb	14	; () banked
  3267   000056  952D               	bcf	45,2,b	;volatile
  3268   000058                     
  3269                           ; BSR set to: 14
  3270                           ;interrupts.c: 32:             sendFLAG=0;
  3271   000058  0E00               	movlw	0
  3272   00005A  6E48               	movwf	_sendFLAG^0,c
  3273   00005C                     i2l1869:
  3274                           
  3275                           ;interrupts.c: 34:         LATDbits.LATD7=!LATDbits.LATD7;
  3276   00005C  AE7C               	btfss	124,7,c	;volatile
  3277   00005E  EF33  F000         	goto	i2u140_41
  3278   000062  EF37  F000         	goto	i2u140_40
  3279   000066                     i2u140_41:
  3280   000066  6A03               	clrf	??_HighISR^0,c
  3281   000068  2A03               	incf	??_HighISR^0,f,c
  3282   00006A  EF38  F000         	goto	i2u141_48
  3283   00006E                     i2u140_40:
  3284   00006E  6A03               	clrf	??_HighISR^0,c
  3285   000070                     i2u141_48:
  3286   000070  3203               	rrcf	??_HighISR^0,f,c
  3287   000072  3203               	rrcf	??_HighISR^0,f,c
  3288   000074  507C               	movf	124,w,c	;volatile
  3289   000076  1803               	xorwf	??_HighISR^0,w,c
  3290   000078  0B7F               	andlw	-129
  3291   00007A  1803               	xorwf	??_HighISR^0,w,c
  3292   00007C  6E7C               	movwf	124,c	;volatile
  3293   00007E                     i2l1871:
  3294                           
  3295                           ;interrupts.c: 37:     if(PIR4bits.RC4IF){
  3296   00007E  010E               	movlb	14	; () banked
  3297   000080  A737               	btfss	55,3,b	;volatile
  3298   000082  EF45  F000         	goto	i2u142_41
  3299   000086  EF47  F000         	goto	i2u142_40
  3300   00008A                     i2u142_41:
  3301   00008A  EF4E  F000         	goto	i2l187
  3302   00008E                     i2u142_40:
  3303   00008E                     
  3304                           ; BSR set to: 14
  3305                           ;interrupts.c: 38:         char reg = RC4REG;
  3306   00008E  CEE3 F006          	movff	3811,HighISR@reg	;volatile
  3307   000092                     
  3308                           ; BSR set to: 14
  3309                           ;interrupts.c: 39:         putCharToRxBuf(reg);
  3310   000092  5006               	movf	HighISR@reg^0,w,c
  3311   000094  EC42  F006         	call	_putCharToRxBuf
  3312   000098                     
  3313                           ;interrupts.c: 40:         charFLAG=1;
  3314   000098  0E01               	movlw	1
  3315   00009A  6E49               	movwf	_charFLAG^0,c
  3316   00009C                     i2l187:
  3317   00009C  C005  FFDA         	movff	??_HighISR+2,fsr2h
  3318   0000A0  C004  FFD9         	movff	??_HighISR+1,fsr2l
  3319   0000A4  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3320   0000A6  0011               	retfie		f
  3321   0000A8                     __end_of_HighISR:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _putCharToRxBuf *****************
  3325 ;; Defined at:
  3326 ;;		line 51 in file "serial.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  byte            1    wreg     unsigned char 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  byte            1    0[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;Total ram usage:        1 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_HighISR
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text25
  3354   000C84                     __ptext25:
  3355                           	callstack 0
  3356   000C84                     _putCharToRxBuf:
  3357                           	callstack 24
  3358                           
  3359                           ;incstack = 0
  3360                           ;putCharToRxBuf@byte stored from wreg
  3361   000C84  6E01               	movwf	putCharToRxBuf@byte^0,c
  3362   000C86                     
  3363                           ;serial.c: 52:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3364   000C86  0E13               	movlw	19
  3365   000C88  6447               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3366   000C8A  EF49  F006         	goto	i2u46_41
  3367   000C8E  EF4B  F006         	goto	i2u46_40
  3368   000C92                     i2u46_41:
  3369   000C92  EF4D  F006         	goto	i2l1353
  3370   000C96                     i2u46_40:
  3371   000C96  0E00               	movlw	0
  3372   000C98  6E47               	movwf	_RxBufWriteCnt^0,c	;volatile
  3373   000C9A                     i2l1353:
  3374                           
  3375                           ;serial.c: 53:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3376   000C9A  0E2E               	movlw	low _EUSART4RXbuf
  3377   000C9C  2447               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3378   000C9E  6ED9               	movwf	fsr2l,c
  3379   000CA0  6ADA               	clrf	fsr2h,c
  3380   000CA2  0E00               	movlw	high _EUSART4RXbuf
  3381   000CA4  22DA               	addwfc	fsr2h,f,c
  3382   000CA6  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3383   000CAA  2A47               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3384   000CAC  0012               	return		;funcret
  3385   000CAE                     __end_of_putCharToRxBuf:
  3386                           	callstack 0
  3387                           
  3388 ;; *************** function _isDataInTxBuf *****************
  3389 ;; Defined at:
  3390 ;;		line 79 in file "serial.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      unsigned char 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2, status,0
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_HighISR
  3414 ;;		_sendTxBuf
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text26
  3419   000D14                     __ptext26:
  3420                           	callstack 0
  3421   000D14                     _isDataInTxBuf:
  3422                           	callstack 24
  3423   000D14                     
  3424                           ;serial.c: 80:     return (TxBufWriteCnt!=TxBufReadCnt);
  3425   000D14  5044               	movf	_TxBufReadCnt^0,w,c	;volatile
  3426   000D16  1845               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3427   000D18  A4D8               	btfss	status,2,c
  3428   000D1A  EF91  F006         	goto	i2u44_41
  3429   000D1E  EF94  F006         	goto	i2u44_40
  3430   000D22                     i2u44_41:
  3431   000D22  0E01               	movlw	1
  3432   000D24  EF95  F006         	goto	i2u45_40
  3433   000D28                     i2u44_40:
  3434   000D28  0E00               	movlw	0
  3435   000D2A                     i2u45_40:
  3436   000D2A  0012               	return		;funcret
  3437   000D2C                     __end_of_isDataInTxBuf:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _getCharFromTxBuf *****************
  3441 ;; Defined at:
  3442 ;;		line 65 in file "serial.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      unsigned char 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_HighISR
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text27
  3470   000C04                     __ptext27:
  3471                           	callstack 0
  3472   000C04                     _getCharFromTxBuf:
  3473                           	callstack 24
  3474   000C04                     
  3475                           ;serial.c: 66:     if (TxBufReadCnt>=100) {TxBufReadCnt=0;}
  3476   000C04  0E63               	movlw	99
  3477   000C06  6444               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  3478   000C08  EF08  F006         	goto	i2u119_41
  3479   000C0C  EF0A  F006         	goto	i2u119_40
  3480   000C10                     i2u119_41:
  3481   000C10  EF0C  F006         	goto	i2l1793
  3482   000C14                     i2u119_40:
  3483   000C14  0E00               	movlw	0
  3484   000C16  6E44               	movwf	_TxBufReadCnt^0,c	;volatile
  3485   000C18                     i2l1793:
  3486                           
  3487                           ;serial.c: 67:     return EUSART4TXbuf[TxBufReadCnt++];
  3488   000C18  2A44               	incf	_TxBufReadCnt^0,f,c	;volatile
  3489   000C1A  0444               	decf	_TxBufReadCnt^0,w,c	;volatile
  3490   000C1C  6E01               	movwf	??_getCharFromTxBuf^0,c
  3491   000C1E  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  3492   000C20  0E00               	movlw	low _EUSART4TXbuf
  3493   000C22  2401               	addwf	??_getCharFromTxBuf^0,w,c
  3494   000C24  6ED9               	movwf	fsr2l,c
  3495   000C26  0E01               	movlw	high _EUSART4TXbuf
  3496   000C28  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  3497   000C2A  6EDA               	movwf	fsr2h,c
  3498   000C2C  50DF               	movf	indf2,w,c
  3499   000C2E  0012               	return		;funcret
  3500   000C30                     __end_of_getCharFromTxBuf:
  3501                           	callstack 0
  3502   000000                     
  3503                           	psect	rparam
  3504   000000                     
  3505                           	psect	temp
  3506   00004A                     btemp:
  3507                           	callstack 0
  3508   00004A                     	ds	1
  3509   000000                     int$flags	set	btemp
  3510   000000                     wtemp8	set	btemp+1
  3511   000000                     ttemp5	set	btemp+1
  3512   000000                     ttemp6	set	btemp+4
  3513   000000                     ttemp7	set	btemp+8
  3514                           
  3515                           	psect	idloc
  3516                           
  3517                           ;Config register IDLOC0 @ 0x200000
  3518                           ;	unspecified, using default values
  3519   200000                     	org	2097152
  3520   200000  0FFF               	dw	4095
  3521                           
  3522                           ;Config register IDLOC1 @ 0x200002
  3523                           ;	unspecified, using default values
  3524   200002                     	org	2097154
  3525   200002  0FFF               	dw	4095
  3526                           
  3527                           ;Config register IDLOC2 @ 0x200004
  3528                           ;	unspecified, using default values
  3529   200004                     	org	2097156
  3530   200004  0FFF               	dw	4095
  3531                           
  3532                           ;Config register IDLOC3 @ 0x200006
  3533                           ;	unspecified, using default values
  3534   200006                     	org	2097158
  3535   200006  0FFF               	dw	4095
  3536                           
  3537                           ;Config register IDLOC4 @ 0x200008
  3538                           ;	unspecified, using default values
  3539   200008                     	org	2097160
  3540   200008  0FFF               	dw	4095
  3541                           
  3542                           ;Config register IDLOC5 @ 0x20000A
  3543                           ;	unspecified, using default values
  3544   20000A                     	org	2097162
  3545   20000A  0FFF               	dw	4095
  3546                           
  3547                           ;Config register IDLOC6 @ 0x20000C
  3548                           ;	unspecified, using default values
  3549   20000C                     	org	2097164
  3550   20000C  0FFF               	dw	4095
  3551                           
  3552                           ;Config register IDLOC7 @ 0x20000E
  3553                           ;	unspecified, using default values
  3554   20000E                     	org	2097166
  3555   20000E  0FFF               	dw	4095
  3556                           
  3557                           	psect	config
  3558                           
  3559                           ;Config register CONFIG1L @ 0x300000
  3560                           ;	External Oscillator mode Selection bits
  3561                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3562                           ;	Power-up default value for COSC bits
  3563                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3564   300000                     	org	3145728
  3565   300000  AA                 	db	170
  3566                           
  3567                           ;Config register CONFIG1H @ 0x300001
  3568                           ;	unspecified, using default values
  3569                           ;	Clock Out Enable bit
  3570                           ;	CLKOUTEN = 0x1, unprogrammed default
  3571                           ;	Clock Switch Enable bit
  3572                           ;	CSWEN = 0x1, unprogrammed default
  3573                           ;	Fail-Safe Clock Monitor Enable bit
  3574                           ;	FCMEN = 0x1, unprogrammed default
  3575   300001                     	org	3145729
  3576   300001  FF                 	db	255
  3577                           
  3578                           ;Config register CONFIG2L @ 0x300002
  3579                           ;	unspecified, using default values
  3580                           ;	Master Clear Enable bit
  3581                           ;	MCLRE = 0x1, unprogrammed default
  3582                           ;	Power-up Timer Enable bit
  3583                           ;	PWRTE = 0x1, unprogrammed default
  3584                           ;	Low-power BOR enable bit
  3585                           ;	LPBOREN = 0x1, unprogrammed default
  3586                           ;	Brown-out Reset Enable bits
  3587                           ;	BOREN = 0x3, unprogrammed default
  3588   300002                     	org	3145730
  3589   300002  FF                 	db	255
  3590                           
  3591                           ;Config register CONFIG2H @ 0x300003
  3592                           ;	unspecified, using default values
  3593                           ;	Brown Out Reset Voltage selection bits
  3594                           ;	BORV = 0x3, unprogrammed default
  3595                           ;	ZCD Disable bit
  3596                           ;	ZCD = 0x1, unprogrammed default
  3597                           ;	PPSLOCK bit One-Way Set Enable bit
  3598                           ;	PPS1WAY = 0x1, unprogrammed default
  3599                           ;	Stack Full/Underflow Reset Enable bit
  3600                           ;	STVREN = 0x1, unprogrammed default
  3601                           ;	Debugger Enable bit
  3602                           ;	DEBUG = 0x1, unprogrammed default
  3603                           ;	Extended Instruction Set Enable bit
  3604                           ;	XINST = 0x1, unprogrammed default
  3605   300003                     	org	3145731
  3606   300003  FF                 	db	255
  3607                           
  3608                           ;Config register CONFIG3L @ 0x300004
  3609                           ;	WDT Period Select bits
  3610                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3611                           ;	WDT operating mode
  3612                           ;	WDTE = OFF, WDT Disabled
  3613   300004                     	org	3145732
  3614   300004  9F                 	db	159
  3615                           
  3616                           ;Config register CONFIG3H @ 0x300005
  3617                           ;	unspecified, using default values
  3618                           ;	WDT Window Select bits
  3619                           ;	WDTCWS = 0x7, unprogrammed default
  3620                           ;	WDT input clock selector
  3621                           ;	WDTCCS = 0x7, unprogrammed default
  3622   300005                     	org	3145733
  3623   300005  FF                 	db	255
  3624                           
  3625                           ;Config register CONFIG4L @ 0x300006
  3626                           ;	unspecified, using default values
  3627                           ;	Write Protection Block 0
  3628                           ;	WRT0 = 0x1, unprogrammed default
  3629                           ;	Write Protection Block 1
  3630                           ;	WRT1 = 0x1, unprogrammed default
  3631                           ;	Write Protection Block 2
  3632                           ;	WRT2 = 0x1, unprogrammed default
  3633                           ;	Write Protection Block 3
  3634                           ;	WRT3 = 0x1, unprogrammed default
  3635                           ;	Write Protection Block 3
  3636                           ;	WRT4 = 0x1, unprogrammed default
  3637                           ;	Write Protection Block 3
  3638                           ;	WRT5 = 0x1, unprogrammed default
  3639                           ;	Write Protection Block 3
  3640                           ;	WRT6 = 0x1, unprogrammed default
  3641                           ;	Write Protection Block 3
  3642                           ;	WRT7 = 0x1, unprogrammed default
  3643   300006                     	org	3145734
  3644   300006  FF                 	db	255
  3645                           
  3646                           ;Config register CONFIG4H @ 0x300007
  3647                           ;	unspecified, using default values
  3648                           ;	Configuration Register Write Protection bit
  3649                           ;	WRTC = 0x1, unprogrammed default
  3650                           ;	Boot Block Write Protection bit
  3651                           ;	WRTB = 0x1, unprogrammed default
  3652                           ;	Data EEPROM Write Protection bit
  3653                           ;	WRTD = 0x1, unprogrammed default
  3654                           ;	Scanner Enable bit
  3655                           ;	SCANE = 0x1, unprogrammed default
  3656                           ;	Low Voltage Programming Enable bit
  3657                           ;	LVP = 0x1, unprogrammed default
  3658   300007                     	org	3145735
  3659   300007  FF                 	db	255
  3660                           
  3661                           ;Config register CONFIG5L @ 0x300008
  3662                           ;	unspecified, using default values
  3663                           ;	UserNVM Program Memory Code Protection bit
  3664                           ;	CP = 0x1, unprogrammed default
  3665                           ;	DataNVM Memory Code Protection bit
  3666                           ;	CPD = 0x1, unprogrammed default
  3667   300008                     	org	3145736
  3668   300008  FF                 	db	255
  3669                           
  3670                           ;Config register CONFIG5H @ 0x300009
  3671                           ;	unspecified, using default values
  3672   300009                     	org	3145737
  3673   300009  FF                 	db	255
  3674                           
  3675                           ;Config register CONFIG6L @ 0x30000A
  3676                           ;	unspecified, using default values
  3677                           ;	Table Read Protection Block 0
  3678                           ;	EBTR0 = 0x1, unprogrammed default
  3679                           ;	Table Read Protection Block 1
  3680                           ;	EBTR1 = 0x1, unprogrammed default
  3681                           ;	Table Read Protection Block 2
  3682                           ;	EBTR2 = 0x1, unprogrammed default
  3683                           ;	Table Read Protection Block 3
  3684                           ;	EBTR3 = 0x1, unprogrammed default
  3685                           ;	Table Read Protection Block 4
  3686                           ;	EBTR4 = 0x1, unprogrammed default
  3687                           ;	Table Read Protection Block 5
  3688                           ;	EBTR5 = 0x1, unprogrammed default
  3689                           ;	Table Read Protection Block 6
  3690                           ;	EBTR6 = 0x1, unprogrammed default
  3691                           ;	Table Read Protection Block 7
  3692                           ;	EBTR7 = 0x1, unprogrammed default
  3693   30000A                     	org	3145738
  3694   30000A  FF                 	db	255
  3695                           
  3696                           ;Config register CONFIG6H @ 0x30000B
  3697                           ;	unspecified, using default values
  3698                           ;	Boot Block Table Read Protection bit
  3699                           ;	EBTRB = 0x1, unprogrammed default
  3700   30000B                     	org	3145739
  3701   30000B  FF                 	db	255
  3702                           tosu	equ	0xFFF
  3703                           tosh	equ	0xFFE
  3704                           tosl	equ	0xFFD
  3705                           stkptr	equ	0xFFC
  3706                           pclatu	equ	0xFFB
  3707                           pclath	equ	0xFFA
  3708                           pcl	equ	0xFF9
  3709                           tblptru	equ	0xFF8
  3710                           tblptrh	equ	0xFF7
  3711                           tblptrl	equ	0xFF6
  3712                           tablat	equ	0xFF5
  3713                           prodh	equ	0xFF4
  3714                           prodl	equ	0xFF3
  3715                           indf0	equ	0xFEF
  3716                           postinc0	equ	0xFEE
  3717                           postdec0	equ	0xFED
  3718                           preinc0	equ	0xFEC
  3719                           plusw0	equ	0xFEB
  3720                           fsr0h	equ	0xFEA
  3721                           fsr0l	equ	0xFE9
  3722                           wreg	equ	0xFE8
  3723                           indf1	equ	0xFE7
  3724                           postinc1	equ	0xFE6
  3725                           postdec1	equ	0xFE5
  3726                           preinc1	equ	0xFE4
  3727                           plusw1	equ	0xFE3
  3728                           fsr1h	equ	0xFE2
  3729                           fsr1l	equ	0xFE1
  3730                           bsr	equ	0xFE0
  3731                           indf2	equ	0xFDF
  3732                           postinc2	equ	0xFDE
  3733                           postdec2	equ	0xFDD
  3734                           preinc2	equ	0xFDC
  3735                           plusw2	equ	0xFDB
  3736                           fsr2h	equ	0xFDA
  3737                           fsr2l	equ	0xFD9
  3738                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        59
    BSS         188
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      73
    BANK0           160     82     141
    BANK1           256      0     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 15
		 -> main@buf(BANK0[15]), 

    levels@colorL	PTR struct RGB_val size(2) Largest target is 6
		 -> main@colorL(BANK0[6]), 

    readcard@colorL	PTR struct RGB_val size(2) Largest target is 6
		 -> main@colorL(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_readcard
    _readcard->___xxtofl
    _levels->_color_read_Blue
    _levels->_color_read_Green
    _levels->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->___lwdiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                84    84      0    5046
                                             43 COMRAM     2     2      0
                                              0 BANK0     82    82      0
                    _Interrupts_init
                              _Light
                          _LightInit
                   _TxBufferedString
                   _color_click_init
                         _initUSART4
                           _readcard
 ---------------------------------------------------------------------------------
 (1) _readcard                                            16    14      2    4227
                                             27 COMRAM    16    14      2
                             ___flge
                            ___lwdiv
                           ___xxtofl
                             _levels
 ---------------------------------------------------------------------------------
 (2) _levels                                               6     2      4    1297
                                             17 COMRAM     6     2      4
                              _Light
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                             10 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              7 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _Light                                                1     1      0      88
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     469
                                             13 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     456
                                              6 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1398
                                              6 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              8 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              7 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              7 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LightInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              4     4      0      38
                                              2 COMRAM     4     4      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Light
   _LightInit
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _readcard
     ___flge
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _levels
       _Light
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A0       7       62.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      8D       5       88.1%
BITBIGSFRlhhhll     8F      0       0      39        0.0%
BITBIGSFRhlh        6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      49       1       77.7%
BITBIGSFRlhhlhl     36      0       0      43        0.0%
BITBIGSFRlhhlhl     2D      0       0      42        0.0%
BITBIGSFRlhhll      2A      0       0      45        0.0%
BITBIGSFRllll       26      0       0      50        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRlhhlhl      C      0       0      44        0.0%
BITBIGSFRlllhh       B      0       0      48        0.0%
BITBIGSFRlhl         9      0       0      46        0.0%
BITBIGSFRlhhlhh      8      0       0      40        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRllh         3      0       0      47        0.0%
BITBIGSFRlhhhlh      2      0       0      38        0.0%
BITBIGSFRhllhl       2      0       0      35        0.0%
BITBIGSFRhllhh       1      0       0      34        0.0%
BITBIGSFRlhhlhl      1      0       0      41        0.0%
BITBIGSFRlhhhh       1      0       0      37        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     176      51        0.0%
DATA                 0      0     176       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 02 14:45:06 2022

               _color_read_Red 09E8                _color_read_Blue 0A88                             l91 0C02  
                           l94 0CF4                             l97 0A36               _color_read_Green 0A38  
            ??_Interrupts_init 0007                            l100 0AD6                            l103 0A86  
                          l202 0D48                            l125 0454                            l302 0BCE  
                          l134 0912                            l209 09E6                            l350 0CD4  
                          l344 0C58                            l256 0D12                            l353 0D72  
                          l362 0D54                            l179 0D3A                            l347 0CAE  
                          l356 0D5E                            l293 0C82                            l365 0B5A  
                          l359 0D68                            l633 0854                            l638 089A  
                          l866 0986                            l859 097E                            u810 099A  
                          u811 0996                            u900 0842                            u820 09B0  
                          u901 083E                            u821 09AC                            u910 0892  
                          u830 09C8                            u911 088E                            u831 09C4  
                          u920 092E                            u840 09E0                            u808 0B46  
                          u921 092A                            u841 09DC                            u770 0CBE  
                          u930 094C                            u850 08CC                            u771 0CBA  
                          u931 0948                            u851 08C8                            u860 0C6C  
                          u780 0CD4                            u940 0968                            u861 0C68  
                          u781 0CD0                            u941 0964                            u870 07C6  
                          u950 0468                            u790 0B44                            u871 07C2  
                          u951 0464                            u791 0B3C                            u880 0804  
                          u960 0476                            u881 0800                            u961 0472  
                          u890 0822                            u970 04D2                            u891 081E  
                          u971 04CE                            u980 0528                            u981 0524  
                          u990 0572                            u991 056E                            wreg 000FE8  
                  main@buf_101 0074                    main@buf_103 0060                           l1030 0544  
                         l1023 04AC                           l1026 0608                           l1037 05A0  
                         l1501 0D4C                           l1503 0D50                           l1511 0D5A  
                         l1505 0D60                           l1601 0814                           l1521 0B56  
                         l1513 0B1C                           l1507 0D64                           l1611 0898  
                         l1603 0822                           l1531 09A0                           l1523 0B58  
                         l1515 0B20                           l1701 0BDE                           l1605 0834  
                         l1621 0936                           l1541 09E0                           l1533 09B0  
                         l1517 0B28                           l1509 0D56                           l1703 0BEE  
                         l1607 0842                           l1631 0970                           l1623 093E  
                         l1615 0914                           l1535 09B6                           l1527 098A  
                         l1519 0B30                           l1551 0ACE                           l1543 09E8  
                         l1711 01A2                           l1561 0C30                           l1705 0BF8  
                         l1609 0892                           l1633 0972                           l1625 094C  
                         l1617 091C                           l1641 0476                           l1537 09C8  
                         l1529 099A                           l1545 0A2E                           l1721 029C  
                         l1713 01D4                           l1801 0612                           l1707 0D3C  
                         l1571 0C46                           l1563 0C3A                           l1635 0978  
                         l1627 0952                           l1619 092E                           l1651 04EE  
                         l1643 04BC                           l1539 09CE                           l1555 0A38  
                         l1723 02CE                           l1715 0206                           l1811 0640  
                         l1803 0616                           l1565 0C40                           l1493 0CAE  
                         l1573 0CD8                           l1629 0968                           l1661 0576  
                         l1653 04FA                           l1645 04D2                           l1637 0458  
                         l1549 0A88                           l1557 0A7E                           l1581 08CC  
                         l1741 0396                           l1725 02F0                           l1717 0238  
                         l1733 02FC                           l1709 00AC                           l1821 0698  
                         l1813 0652                           l1805 061A                           l1591 0C80  
                         l1567 0C42                           l1495 0CBE                           l1671 05B4  
                         l1663 0582                           l1655 052C                           l1639 0468  
                         l1583 08CE                           l1575 089C                           l1735 032E  
                         l1719 026A                           l1831 06F2                           l1823 06AA  
                         l1815 0662                           l1807 0620                           l1585 0C5C  
                         l1569 0C44                           l1497 0D6A                           l1593 0798  
                         l1673 05D8                           l1665 0590                           l1657 052E  
                         l1649 04E6                           l1577 08A2                           l1761 0414  
                         l1753 03D8                           l1745 039C                           l1737 0360  
                         l1729 02F6                           l1841 074C                           l1833 0704  
                         l1825 06BC                           l1817 0674                           l1809 0630  
                         l1587 0C6C                           l1499 0D6E                           l1691 0D0E  
                         l1683 0CF6                           l1595 07C6                           l1675 05E8  
                         l1667 05AE                           l1659 053A                           l1579 08BA  
                         l1755 03EC                           l1747 03B0                           l1739 0374  
                         l1851 0764                           l1843 0758                           l1835 0716  
                         l1827 06CE                           l1819 0686                           l1589 0C70  
                         l1781 0BAA                           l1693 0D10                           l1685 0D00  
                         l1597 07D6                           l1677 05F6                           l1669 05B0  
                         l1773 0452                           l1757 040E                           l1749 03D2  
                         l1765 041A                           l1853 077C                           l1845 075E  
                         l1837 0728                           l1829 06E0                           l1695 0D2C  
                         l1783 0BAE                           l1687 0D02                           l1599 0804  
                         l1679 05F8                           l1767 042E                           l1839 073A  
                         l1785 0BC6                           l1777 0B98                           l1697 0BD0  
                         l1689 0D0C                           l1769 044C                           l1787 0BCA  
                         l1779 0B9C                           l1699 0BD4                           l1797 060A  
                         l1799 060E                           u1000 0590                           u1001 058C  
                         u1010 05A0                           u1011 059C                           u1020 05AE  
                         u1100 02CE                           u1021 05AA                           u1101 02CA  
                         u1030 05E8                           u1110 02F0                           u1031 05E4  
                         u1111 02EC                           u1040 05F6                           u1120 032E  
                         u1200 0640                           u1041 05F2                           u1121 032A  
                         u1201 063C                           u1130 0360                           u1050 01D4  
                         u1131 035C                           u1051 01D0                           u1211 064A  
                         u1140 0396                           u1060 0206                           u1300 06F2  
                         u1220 0662                           u1141 0392                           u1061 0202  
                         u1301 06EE                           u1221 065E                           u1150 03D2  
                         u1070 0238                           u1151 03CE                           u1071 0234  
                         u1311 06FC                           u1231 066C                           u1160 040E  
                         u1080 026A                           u1320 0716                           u1240 0686  
                         u1161 040A                           u1081 0266                           u1321 0712  
                         u1241 0682                           u1170 044C                           u1090 029C  
                         u1171 0448                           u1091 0298                           u1331 0720  
                         u1251 0690                           u1180 0BC6                           u1340 073A  
                         u1260 06AA                           u1181 0BC2                           u1341 0736  
                         u1261 06A6                           u1351 0744                           u1271 06B4  
                         u1360 0790                           u1280 06CE                   _BAUD4CONbits 000EE9  
                         u1361 078C                           u1281 06CA                           u1291 06D8  
                         u1457 076E                           u1467 08AC                           u1477 0BE4  
                         _main 060A                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 004A  
                         start 00A8         __end_of_color_read_Red 0A38                __end_of_HighISR 00A8  
                 ___param_bank 000000                          ?_main 0001                __end_of___lwdiv 0988  
                        i2l282 0CAC                          i2l187 009C                          i2l296 0D2A  
                        i2l289 0C2E                          _Light 0988     __end_of_I2C_2_Master_Start 0D74  
   __end_of_I2C_2_Master_Write 0D56                          main@j 00AA                          tablat 000FF5  
                        plusw1 000FE3                          plusw2 000FDB                          ttemp5 004B  
                        ttemp6 004E                          ttemp7 0052                          status 000FD8  
                        wtemp8 004B        __end_of_color_read_Blue 0AD8          _I2C_2_Master_RepStart 0D56  
           putCharToRxBuf@byte 0001                ?_color_read_Red 000B                __initialization 0AD8  
                 __end_of_main 0798             putCharToTxBuf@byte 0007                         ??_main 002C  
                __activetblptr 000000                         ?_Light 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RD5PPS 000E6F                         _RD6PPS 000E70  
                       i2l1351 0C96                         i2l1345 0D14                         i2l1353 0C9A  
                       i2l1355 0CAA                         i2l1349 0C86                         i2l1861 0038  
                       i2l1791 0C14                         i2l1863 0040                         i2l1871 007E  
                       i2l1793 0C18                         i2l1873 008E                         i2l1865 0054  
                       i2l1875 0092                         i2l1867 0058                         i2l1859 0012  
                       i2l1789 0C04                         i2l1877 0098                         i2l1869 005C  
                    ??_HighISR 0003       __end_of_color_click_init 0C04                         _RX4PPS 000E15  
                       _TX4REG 000EE4               __end_of___xxtofl 060A                         ___flge 0798  
             _getCharFromTxBuf 0C04                      ??___lwdiv 000B                         _levels 089C  
                       clear_0 0AFE                         clear_1 0B0A               __end_of_readcard 0456  
                       isa$std 000001              ?_TxBufferedString 0008                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             ??_TxBufferedString 000A  
                   ___flge@ff1 0007                     ___flge@ff2 000B                   ___xxtofl@arg 0018  
                 ___xxtofl@exp 0017                   ___xxtofl@val 000E          __end_of_isDataInTxBuf 0D2C  
                   __accesstop 0060        __end_of__initialization 0B10       __end_of_color_read_Green 0A88  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 000B  
              _Interrupts_init 0D2C                  __end_of_Light 09E8                 __pcstackCOMRAM 0001  
                 __pidataBANK0 0B5C              __end_of_LightInit 0D4A                        ??_Light 0007  
                   __pbssBANK1 0100              _color_writetoaddr 0CD6                        ?___flge 0007  
           ?_color_writetoaddr 0009                        ?_levels 0012            ??_color_writetoaddr 000A  
                    ?___xxtofl 000E                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      i2u44_40 0D28                        i2u44_41 0D22                        i2u45_40 0D2A  
                      i2u46_40 0C96                        i2u46_41 0C92                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 0D3C         color_writetoaddr@value 0009  
             ??_color_read_Red 000D                        _HighISR 0008                      ?_readcard 001C  
    __end_of_color_writetoaddr 0CF6             _I2C_2_Master_Start 0D6A                     _initUSART4 0CF6  
           _I2C_2_Master_Write 0D4A                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 0010            ?_I2C_2_Master_Start 0001                        ___lwdiv 0914  
          ?_I2C_2_Master_Write 0001                        __pcinit 0AD8                        __ramtop 0E00  
                      __ptext0 060A                        __ptext1 00AC                        __ptext2 089C  
                      __ptext3 09E8                        __ptext4 0A38                        __ptext5 0A88  
                      __ptext6 0D56                        __ptext7 0B1A                        __ptext8 0988  
                      __ptext9 0456                     ??___xxtofl 0012                  _RxBufWriteCnt 0047  
     __end_of_getCharFromTxBuf 0C30                        main@buf 008A           ??_I2C_2_Master_Start 0008  
         ??_I2C_2_Master_Write 0008           end_of_initialization 0B10                        levels@i 0012  
                   ??_readcard 001E              ?_color_click_init 0001             ??_color_click_init 000B  
                 levels@colorL 0014                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                     main@F14601 00DC  
                   main@F14603 00C6                     main@F14605 00BE                     main@F14607 00B2  
                   main@F14593 00D5                     main@F14595 00E8                     main@F14597 00E2  
                   main@F14599 00CE                  ___xxtofl@sign 0016                      _TRISAbits 000F81  
                    _TRISDbits 000F84                      _TRISFbits 000F86                      _TRISGbits 000F87  
     color_writetoaddr@address 000A        ??_I2C_2_Master_RepStart 0008               ?_Interrupts_init 0001  
                   main@buf_91 00A5                     main@buf_93 0099                     main@buf_95 0083  
                   main@buf_97 009F                     main@buf_89 007C                     main@buf_99 006C  
                   main@colorL 00AB                   _EUSART4RXbuf 002E                   _EUSART4TXbuf 0100  
                 _EUSART4VXbuf 0164              ?_color_read_Green 000B                    ?_initUSART4 0001  
           ??_color_read_Green 000D                 __end_of___flge 089C                 __end_of_levels 0914  
          start_initialization 0AD8                      _LightInit 0D3C                  _TxBufWriteCnt 0045  
          color_read_Green@tmp 0010                       ??___flge 000F                 _putCharToRxBuf 0C84  
               _putCharToTxBuf 0C5A                    __pdataBANK0 00B2                       ??_levels 0016  
                  __pbssCOMRAM 002E                  __pcstackBANK0 0060                     ?_LightInit 0001  
                     ?_HighISR 0001               ___lwdiv@dividend 0007         __end_of_putCharToRxBuf 0CAE  
       __end_of_putCharToTxBuf 0C84                      __pintcode 0008                       ?___lwdiv 0007  
       TxBufferedString@string 0008           I2C_2_Master_Read@ack 0009                 Light@colorcode 0007  
         I2C_2_Master_Read@tmp 000A              _I2C_2_Master_Idle 0CAE              _I2C_2_Master_Init 0C30  
            _I2C_2_Master_Read 0B1A              _I2C_2_Master_Stop 0D60                   _RxBufReadCnt 0046  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B                  _VxBufWriteCnt 0043  
            ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 0007  
          ??_I2C_2_Master_Init 0007            ??_I2C_2_Master_Read 0008                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0008                  _isDataInTxBuf 0D14                       _LATDbits 000F7C  
                     _LATFbits 000F7E               _TxBufferedString 0B98                       _LATGbits 000F7F  
                     _PIE0bits 000E29                       _PIE4bits 000E2D                       i2u140_40 006E  
                     i2u140_41 0066                       i2u142_40 008E                       i2u141_48 0070  
                     i2u142_41 008A                       i2u119_40 0C14                       i2u119_41 0C10  
                     i2u137_40 0024                       i2u137_41 001E                       i2u137_46 0026  
                     i2u138_40 0038                       i2u138_41 0034                       i2u139_40 0054  
                     i2u139_41 0050                       _PIR4bits 000E37                ?_putCharToRxBuf 0001  
              ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA                       _SSP2STAT 000ED8  
    __end_of_I2C_2_Master_Idle 0CD6      __end_of_I2C_2_Master_Init 0C5A      __end_of_I2C_2_Master_Read 0B5C  
    __end_of_I2C_2_Master_Stop 0D6A    I2C_2_Master_Write@data_byte 0008                      main@color 00B1  
            ??_color_read_Blue 000D                    ??_LightInit 0007                   _TxBufReadCnt 0044  
                    copy_data0 0AEC                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 0D60  
           color_read_Blue@tmp 0010                   ??_initUSART4 0007                       __Hrparam 0000  
                     __Lrparam 0000                       _charFLAG 0049                     _ANSELDbits 000EA7  
                     ___xxtofl 0456                ___lwdiv@divisor 0009             __end_of_initUSART4 0D14  
                 _VxBufReadCnt 0042                ___lwdiv@counter 000D                       __ptext10 0914  
                     __ptext11 0798                       __ptext20 0B98                       __ptext12 0CF6  
                     __ptext21 0C5A                       __ptext13 0BD0                       __ptext22 0D3C  
                     __ptext14 0CD6                       __ptext23 0D2C                       __ptext15 0D4A  
                     __ptext16 0D60                       __ptext25 0C84                       __ptext17 0D6A  
                     __ptext26 0D14                       __ptext18 0CAE                       __ptext27 0C04  
                     __ptext19 0C30                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     _readcard 00AC                       _sendFLAG 0048                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 004A                 readcard@colorL 001C  
               readcard@ratio1 0024                 readcard@ratio2 0028                 readcard@ratio3 0020  
                   _INTCONbits 000FF2                ??_isDataInTxBuf 0001                       intlevel2 0000  
                   HighISR@reg 0006               _color_click_init 0BD0       __end_of_TxBufferedString 0BD0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
             ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0007  
