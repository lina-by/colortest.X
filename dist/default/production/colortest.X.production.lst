

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 04 15:00:07 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Version 2.35
    49                           ; Generated 05/05/2021 GMT
    50                           ; 
    51                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F67K40 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     
    84                           	psect	idataBANK0
    85   001266                     __pidataBANK0:
    86                           	callstack 0
    87                           
    88                           ;initializer for main@F14591
    89   001266  30                 	db	48
    90   001267  0A                 	db	10
    91   001268  00                 	db	0
    92   000000                     _RC4STAbits	set	3815
    93   000000                     _SP4BRGH	set	3814
    94   000000                     _SP4BRGL	set	3813
    95   000000                     _TX4STAbits	set	3816
    96   000000                     _BAUD4CONbits	set	3817
    97   000000                     _LATAbits	set	3961
    98   000000                     _SSP2CON2bits	set	3802
    99   000000                     _RX4PPS	set	3605
   100   000000                     _PIE0bits	set	3625
   101   000000                     _PIE4bits	set	3629
   102   000000                     _LATFbits	set	3966
   103   000000                     _LATGbits	set	3967
   104   000000                     _TRISAbits	set	3969
   105   000000                     _TRISFbits	set	3974
   106   000000                     _TRISGbits	set	3975
   107   000000                     _INTCONbits	set	4082
   108   000000                     _PIR4bits	set	3639
   109   000000                     _RC0PPS	set	3682
   110   000000                     _RC4REG	set	3811
   111   000000                     _TX4REG	set	3812
   112   000000                     _TRISDbits	set	3972
   113   000000                     _RD5PPS	set	3695
   114   000000                     _ANSELDbits	set	3751
   115   000000                     _SSP2ADD	set	3798
   116   000000                     _SSP2CON1bits	set	3801
   117   000000                     _SSP2CLKPPS	set	3612
   118   000000                     _SSP2DATPPS	set	3613
   119   000000                     _SSP2CON2	set	3802
   120   000000                     _SSP2STAT	set	3800
   121   000000                     _SSP2BUF	set	3797
   122   000000                     _RD6PPS	set	3696
   123                           
   124                           ; #config settings
   125                           
   126                           	psect	cinit
   127   000FFC                     __pcinit:
   128                           	callstack 0
   129   000FFC                     start_initialization:
   130                           	callstack 0
   131   000FFC                     __initialization:
   132                           	callstack 0
   133                           
   134                           ; Initialize objects allocated to BANK0 (3 bytes)
   135                           ; load TBLPTR registers with __pidataBANK0
   136   000FFC  0E66               	movlw	low __pidataBANK0
   137   000FFE  6EF6               	movwf	tblptrl,c
   138   001000  0E12               	movlw	high __pidataBANK0
   139   001002  6EF7               	movwf	tblptrh,c
   140   001004  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   141   001006  6EF8               	movwf	tblptru,c
   142   001008  0009               	tblrd		*+	;fetch initializer
   143   00100A  CFF5 F0BD          	movff	tablat,__pdataBANK0
   144   00100E  0009               	tblrd		*+	;fetch initializer
   145   001010  CFF5 F0BE          	movff	tablat,__pdataBANK0+1
   146   001014  0009               	tblrd		*+	;fetch initializer
   147   001016  CFF5 F0BF          	movff	tablat,__pdataBANK0+2
   148                           
   149                           ; Clear objects allocated to BANK1 (100 bytes)
   150   00101A  EE01  F000         	lfsr	0,__pbssBANK1
   151   00101E  0E64               	movlw	100
   152   001020                     clear_0:
   153   001020  6AEE               	clrf	postinc0,c
   154   001022  06E8               	decf	wreg,f,c
   155   001024  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to BANK0 (80 bytes)
   158   001026  EE00  F060         	lfsr	0,__pbssBANK0
   159   00102A  0E50               	movlw	80
   160   00102C                     clear_1:
   161   00102C  6AEE               	clrf	postinc0,c
   162   00102E  06E8               	decf	wreg,f,c
   163   001030  E1FD               	bnz	clear_1
   164                           
   165                           ; Clear objects allocated to COMRAM (8 bytes)
   166   001032  EE00  F052         	lfsr	0,__pbssCOMRAM
   167   001036  0E08               	movlw	8
   168   001038                     clear_2:
   169   001038  6AEE               	clrf	postinc0,c
   170   00103A  06E8               	decf	wreg,f,c
   171   00103C  E1FD               	bnz	clear_2
   172   00103E                     end_of_initialization:
   173                           	callstack 0
   174   00103E                     __end_of__initialization:
   175                           	callstack 0
   176   00103E  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   177   001040  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   178   001042  0100               	movlb	0
   179   001044  EFC9  F005         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssCOMRAM
   182   000052                     __pbssCOMRAM:
   183                           	callstack 0
   184   000052                     _VxBufReadCnt:
   185                           	callstack 0
   186   000052                     	ds	1
   187   000053                     _VxBufWriteCnt:
   188                           	callstack 0
   189   000053                     	ds	1
   190   000054                     _TxBufReadCnt:
   191                           	callstack 0
   192   000054                     	ds	1
   193   000055                     _TxBufWriteCnt:
   194                           	callstack 0
   195   000055                     	ds	1
   196   000056                     _RxBufReadCnt:
   197                           	callstack 0
   198   000056                     	ds	1
   199   000057                     _RxBufWriteCnt:
   200                           	callstack 0
   201   000057                     	ds	1
   202   000058                     _sendFLAG:
   203                           	callstack 0
   204   000058                     	ds	1
   205   000059                     _charFLAG:
   206                           	callstack 0
   207   000059                     	ds	1
   208                           
   209                           	psect	bssBANK0
   210   000060                     __pbssBANK0:
   211                           	callstack 0
   212   000060                     _EUSART4VXbuf:
   213                           	callstack 0
   214   000060                     	ds	60
   215   00009C                     _EUSART4RXbuf:
   216                           	callstack 0
   217   00009C                     	ds	20
   218                           
   219                           	psect	dataBANK0
   220   0000BD                     __pdataBANK0:
   221                           	callstack 0
   222   0000BD                     main@F14591:
   223                           	callstack 0
   224   0000BD                     	ds	3
   225                           
   226                           	psect	bssBANK1
   227   000100                     __pbssBANK1:
   228                           	callstack 0
   229   000100                     _EUSART4TXbuf:
   230                           	callstack 0
   231   000100                     	ds	100
   232                           
   233                           	psect	cstackBANK0
   234   0000B0                     __pcstackBANK0:
   235                           	callstack 0
   236   0000B0                     ??_main:
   237                           
   238                           ; 1 bytes @ 0x0
   239   0000B0                     	ds	2
   240   0000B2                     main@buf:
   241                           	callstack 0
   242                           
   243                           ; 3 bytes @ 0x2
   244   0000B2                     	ds	3
   245   0000B5                     main@j:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x5
   249   0000B5                     	ds	1
   250   0000B6                     main@colorL:
   251                           	callstack 0
   252                           
   253                           ; 6 bytes @ 0x6
   254   0000B6                     	ds	6
   255   0000BC                     main@color:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0xC
   259   0000BC                     	ds	1
   260                           
   261                           	psect	cstackCOMRAM
   262   000001                     __pcstackCOMRAM:
   263                           	callstack 0
   264   000001                     ??_getCharFromTxBuf:
   265   000001                     putCharToRxBuf@byte:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x0
   269   000001                     	ds	2
   270   000003                     ??_HighISR:
   271                           
   272                           ; 1 bytes @ 0x2
   273   000003                     	ds	2
   274   000005                     HighISR@reg:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x4
   278   000005                     	ds	1
   279   000006                     ??_I2C_2_Master_Idle:
   280   000006                     ?___lwdiv:
   281                           	callstack 0
   282   000006                     Light@colorcode:
   283                           	callstack 0
   284   000006                     putCharToTxBuf@byte:
   285                           	callstack 0
   286   000006                     ___lwdiv@dividend:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x5
   290   000006                     	ds	1
   291   000007                     ??_I2C_2_Master_Read:
   292   000007                     I2C_2_Master_Write@data_byte:
   293                           	callstack 0
   294   000007                     TxBufferedString@string:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x6
   298   000007                     	ds	1
   299   000008                     color_writetoaddr@value:
   300                           	callstack 0
   301   000008                     I2C_2_Master_Read@ack:
   302                           	callstack 0
   303   000008                     ___lwdiv@divisor:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x7
   307   000008                     	ds	1
   308   000009                     color_writetoaddr@address:
   309                           	callstack 0
   310   000009                     I2C_2_Master_Read@tmp:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x8
   314   000009                     	ds	1
   315   00000A                     ??_color_click_init:
   316   00000A                     ?_color_read_Red:
   317                           	callstack 0
   318   00000A                     ?_color_read_Blue:
   319                           	callstack 0
   320   00000A                     ?_color_read_Green:
   321                           	callstack 0
   322   00000A                     ___lwdiv@quotient:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x9
   326   00000A                     	ds	2
   327   00000C                     ??_color_read_Red:
   328   00000C                     ??_color_read_Blue:
   329   00000C                     ??_color_read_Green:
   330   00000C                     ___lwdiv@counter:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0xB
   334   00000C                     	ds	1
   335   00000D                     ?___xxtofl:
   336                           	callstack 0
   337   00000D                     ___xxtofl@val:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0xC
   341   00000D                     	ds	2
   342   00000F                     color_read_Red@tmp:
   343                           	callstack 0
   344   00000F                     color_read_Blue@tmp:
   345                           	callstack 0
   346   00000F                     color_read_Green@tmp:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xE
   350   00000F                     	ds	2
   351   000011                     ??___xxtofl:
   352   000011                     levels@i:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x10
   356   000011                     	ds	2
   357   000013                     levels@colorL:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x12
   361   000013                     	ds	2
   362   000015                     ??_levels:
   363   000015                     ___xxtofl@sign:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0x14
   367   000015                     	ds	1
   368   000016                     ___xxtofl@exp:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x15
   372   000016                     	ds	1
   373   000017                     ___xxtofl@arg:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x16
   377   000017                     	ds	4
   378   00001B                     ?___flmul:
   379                           	callstack 0
   380   00001B                     ___flmul@b:
   381                           	callstack 0
   382                           
   383                           ; 4 bytes @ 0x1A
   384   00001B                     	ds	4
   385   00001F                     ___flmul@a:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0x1E
   389   00001F                     	ds	4
   390   000023                     ??___flmul:
   391                           
   392                           ; 1 bytes @ 0x22
   393   000023                     	ds	4
   394   000027                     ___flmul@sign:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x26
   398   000027                     	ds	1
   399   000028                     ___flmul@grs:
   400                           	callstack 0
   401                           
   402                           ; 4 bytes @ 0x27
   403   000028                     	ds	4
   404   00002C                     ___flmul@aexp:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x2B
   408   00002C                     	ds	1
   409   00002D                     ___flmul@bexp:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x2C
   413   00002D                     	ds	1
   414   00002E                     ___flmul@prod:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0x2D
   418   00002E                     	ds	4
   419   000032                     ___flmul@temp:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x31
   423   000032                     	ds	2
   424   000034                     ___flge@ff1:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x33
   428   000034                     	ds	4
   429   000038                     ___flge@ff2:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0x37
   433   000038                     	ds	4
   434   00003C                     ??___flge:
   435                           
   436                           ; 1 bytes @ 0x3B
   437   00003C                     	ds	4
   438   000040                     readcard@colorL:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x3F
   442   000040                     	ds	2
   443   000042                     ??_readcard:
   444                           
   445                           ; 1 bytes @ 0x41
   446   000042                     	ds	4
   447   000046                     readcard@ratio1:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x45
   451   000046                     	ds	4
   452   00004A                     readcard@ratio2:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x49
   456   00004A                     	ds	4
   457   00004E                     readcard@ratio3:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x4D
   461   00004E                     	ds	4
   462                           
   463 ;;
   464 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   465 ;;
   466 ;; *************** function _main *****************
   467 ;; Defined at:
   468 ;;		line 44 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  color           1   12[BANK0 ] unsigned char 
   473 ;;  colorL          6    6[BANK0 ] struct RGB_val
   474 ;;  buf             3    2[BANK0 ] unsigned char [3]
   475 ;;  j               1    5[BANK0 ] unsigned char 
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   486 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   487 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   488 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   489 ;;Total ram usage:       13 bytes
   490 ;; Hardware stack levels required when called: 7
   491 ;; This function calls:
   492 ;;		_Interrupts_init
   493 ;;		_Light
   494 ;;		_LightInit
   495 ;;		_TxBufferedString
   496 ;;		_color_click_init
   497 ;;		_initUSART4
   498 ;;		_readcard
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text0
   505   000B92                     __ptext0:
   506                           	callstack 0
   507   000B92                     _main:
   508                           	callstack 24
   509   000B92                     
   510                           ;main.c: 45:     struct RGB_val colorL;;main.c: 47:     initUSART4();
   511   000B92  ECF4  F008         	call	_initUSART4	;wreg free
   512   000B96                     
   513                           ;main.c: 48:     Interrupts_init();
   514   000B96  EC0F  F009         	call	_Interrupts_init	;wreg free
   515   000B9A                     
   516                           ;main.c: 49:     color_click_init();
   517   000B9A  EC61  F008         	call	_color_click_init	;wreg free
   518   000B9E                     
   519                           ;main.c: 50:     LightInit();
   520   000B9E  EC17  F009         	call	_LightInit	;wreg free
   521   000BA2                     
   522                           ;main.c: 52:     char j;;main.c: 53:     unsigned char buf[]="0\n";
   523   000BA2  C0BD  F0B2         	movff	main@F14591,main@buf
   524   000BA6  C0BE  F0B3         	movff	main@F14591+1,main@buf+1
   525   000BAA  C0BF  F0B4         	movff	main@F14591+2,main@buf+2
   526   000BAE                     l2170:
   527                           
   528                           ;main.c: 55:     Light(0);
   529   000BAE  0E00               	movlw	0
   530   000BB0  EC56  F007         	call	_Light
   531   000BB4                     
   532                           ;main.c: 56:         unsigned char color = readcard(&colorL);
   533   000BB4  0EB6               	movlw	low main@colorL
   534   000BB6  6E40               	movwf	readcard@colorL^0,c
   535   000BB8  0E00               	movlw	high main@colorL
   536   000BBA  6E41               	movwf	(readcard@colorL+1)^0,c
   537   000BBC  EC4F  F000         	call	_readcard	;wreg free
   538   000BC0  0100               	movlb	0	; () banked
   539   000BC2  6FBC               	movwf	main@color& (0+255),b
   540   000BC4                     
   541                           ; BSR set to: 0
   542                           ;main.c: 57:         if(color==0){buf[0]='w';}
   543   000BC4  51BC               	movf	main@color& (0+255),w,b
   544   000BC6  A4D8               	btfss	status,2,c
   545   000BC8  EFE8  F005         	goto	u1671
   546   000BCC  EFEA  F005         	goto	u1670
   547   000BD0                     u1671:
   548   000BD0  EFEC  F005         	goto	l2178
   549   000BD4                     u1670:
   550   000BD4                     
   551                           ; BSR set to: 0
   552   000BD4  0E77               	movlw	119
   553   000BD6  6FB2               	movwf	main@buf& (0+255),b
   554   000BD8                     l2178:
   555                           
   556                           ; BSR set to: 0
   557                           ;main.c: 58:         if(color==1){buf[0]='r';}
   558   000BD8  05BC               	decf	main@color& (0+255),w,b
   559   000BDA  A4D8               	btfss	status,2,c
   560   000BDC  EFF2  F005         	goto	u1681
   561   000BE0  EFF4  F005         	goto	u1680
   562   000BE4                     u1681:
   563   000BE4  EFF6  F005         	goto	l2182
   564   000BE8                     u1680:
   565   000BE8                     
   566                           ; BSR set to: 0
   567   000BE8  0E72               	movlw	114
   568   000BEA  6FB2               	movwf	main@buf& (0+255),b
   569   000BEC                     l2182:
   570                           
   571                           ; BSR set to: 0
   572                           ;main.c: 59:         if(color==2){buf[0]='b';}
   573   000BEC  0E02               	movlw	2
   574   000BEE  19BC               	xorwf	main@color& (0+255),w,b
   575   000BF0  A4D8               	btfss	status,2,c
   576   000BF2  EFFD  F005         	goto	u1691
   577   000BF6  EFFF  F005         	goto	u1690
   578   000BFA                     u1691:
   579   000BFA  EF01  F006         	goto	l2186
   580   000BFE                     u1690:
   581   000BFE                     
   582                           ; BSR set to: 0
   583   000BFE  0E62               	movlw	98
   584   000C00  6FB2               	movwf	main@buf& (0+255),b
   585   000C02                     l2186:
   586                           
   587                           ; BSR set to: 0
   588                           ;main.c: 60:         if(color==3){buf[0]='g';}
   589   000C02  0E03               	movlw	3
   590   000C04  19BC               	xorwf	main@color& (0+255),w,b
   591   000C06  A4D8               	btfss	status,2,c
   592   000C08  EF08  F006         	goto	u1701
   593   000C0C  EF0A  F006         	goto	u1700
   594   000C10                     u1701:
   595   000C10  EF0C  F006         	goto	l2190
   596   000C14                     u1700:
   597   000C14                     
   598                           ; BSR set to: 0
   599   000C14  0E67               	movlw	103
   600   000C16  6FB2               	movwf	main@buf& (0+255),b
   601   000C18                     l2190:
   602                           
   603                           ; BSR set to: 0
   604                           ;main.c: 61:         if(color==4){buf[0]='p';}
   605   000C18  0E04               	movlw	4
   606   000C1A  19BC               	xorwf	main@color& (0+255),w,b
   607   000C1C  A4D8               	btfss	status,2,c
   608   000C1E  EF13  F006         	goto	u1711
   609   000C22  EF15  F006         	goto	u1710
   610   000C26                     u1711:
   611   000C26  EF17  F006         	goto	l2194
   612   000C2A                     u1710:
   613   000C2A                     
   614                           ; BSR set to: 0
   615   000C2A  0E70               	movlw	112
   616   000C2C  6FB2               	movwf	main@buf& (0+255),b
   617   000C2E                     l2194:
   618                           
   619                           ; BSR set to: 0
   620                           ;main.c: 62:         if(color==5){buf[0]='y';}
   621   000C2E  0E05               	movlw	5
   622   000C30  19BC               	xorwf	main@color& (0+255),w,b
   623   000C32  A4D8               	btfss	status,2,c
   624   000C34  EF1E  F006         	goto	u1721
   625   000C38  EF20  F006         	goto	u1720
   626   000C3C                     u1721:
   627   000C3C  EF22  F006         	goto	l2198
   628   000C40                     u1720:
   629   000C40                     
   630                           ; BSR set to: 0
   631   000C40  0E79               	movlw	121
   632   000C42  6FB2               	movwf	main@buf& (0+255),b
   633   000C44                     l2198:
   634                           
   635                           ; BSR set to: 0
   636                           ;main.c: 63:         if(color==6){buf[0]='o';}
   637   000C44  0E06               	movlw	6
   638   000C46  19BC               	xorwf	main@color& (0+255),w,b
   639   000C48  A4D8               	btfss	status,2,c
   640   000C4A  EF29  F006         	goto	u1731
   641   000C4E  EF2B  F006         	goto	u1730
   642   000C52                     u1731:
   643   000C52  EF2D  F006         	goto	l2202
   644   000C56                     u1730:
   645   000C56                     
   646                           ; BSR set to: 0
   647   000C56  0E6F               	movlw	111
   648   000C58  6FB2               	movwf	main@buf& (0+255),b
   649   000C5A                     l2202:
   650                           
   651                           ; BSR set to: 0
   652                           ;main.c: 64:         if(color==7){buf[0]='l';}
   653   000C5A  0E07               	movlw	7
   654   000C5C  19BC               	xorwf	main@color& (0+255),w,b
   655   000C5E  A4D8               	btfss	status,2,c
   656   000C60  EF34  F006         	goto	u1741
   657   000C64  EF36  F006         	goto	u1740
   658   000C68                     u1741:
   659   000C68  EF38  F006         	goto	l2206
   660   000C6C                     u1740:
   661   000C6C                     
   662                           ; BSR set to: 0
   663   000C6C  0E6C               	movlw	108
   664   000C6E  6FB2               	movwf	main@buf& (0+255),b
   665   000C70                     l2206:
   666                           
   667                           ; BSR set to: 0
   668                           ;main.c: 65:         TxBufferedString(&buf);
   669   000C70  0EB2               	movlw	low main@buf
   670   000C72  6E07               	movwf	TxBufferedString@string^0,c
   671   000C74  0E00               	movlw	high main@buf
   672   000C76  6E08               	movwf	(TxBufferedString@string+1)^0,c
   673   000C78  EC45  F008         	call	_TxBufferedString	;wreg free
   674   000C7C                     
   675                           ;main.c: 66:         Light(0);
   676   000C7C  0E00               	movlw	0
   677   000C7E  EC56  F007         	call	_Light
   678   000C82                     
   679                           ;main.c: 67:         for (j=0;j<3;j++){_delay((unsigned long)((900)*(64000000/4000.0)));
      +                          }
   680   000C82  0E00               	movlw	0
   681   000C84  0100               	movlb	0	; () banked
   682   000C86  6FB5               	movwf	main@j& (0+255),b
   683   000C88                     l2216:
   684                           
   685                           ; BSR set to: 0
   686   000C88  0E4A               	movlw	74
   687   000C8A  0100               	movlb	0	; () banked
   688   000C8C  6FB1               	movwf	(??_main+1)& (0+255),b
   689   000C8E  0E0E               	movlw	14
   690   000C90  6FB0               	movwf	??_main& (0+255),b
   691   000C92  0E19               	movlw	25
   692   000C94                     u1767:
   693   000C94  2EE8               	decfsz	wreg,f,c
   694   000C96  D7FE               	bra	u1767
   695   000C98  2FB0               	decfsz	??_main& (0+255),f,b
   696   000C9A  D7FC               	bra	u1767
   697   000C9C  2FB1               	decfsz	(??_main+1)& (0+255),f,b
   698   000C9E  D7FA               	bra	u1767
   699   000CA0  0100               	movlb	0	; () banked
   700   000CA2  2BB5               	incf	main@j& (0+255),f,b
   701   000CA4  0E02               	movlw	2
   702   000CA6  65B5               	cpfsgt	main@j& (0+255),b
   703   000CA8  EF58  F006         	goto	u1751
   704   000CAC  EF5A  F006         	goto	u1750
   705   000CB0                     u1751:
   706   000CB0  EF44  F006         	goto	l2216
   707   000CB4                     u1750:
   708   000CB4  EFD7  F005         	goto	l2170
   709   000CB8  EF4D  F000         	goto	start
   710   000CBC                     __end_of_main:
   711                           	callstack 0
   712                           
   713 ;; *************** function _readcard *****************
   714 ;; Defined at:
   715 ;;		line 21 in file "card.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  colorL          2   63[COMRAM] PTR struct RGB_val
   718 ;;		 -> main@colorL(6), 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  ratio3          4   77[COMRAM] float 
   721 ;;  ratio2          4   73[COMRAM] float 
   722 ;;  ratio1          4   69[COMRAM] float 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      unsigned char 
   725 ;; Registers used:
   726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   733 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   734 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   735 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   736 ;;Total ram usage:       18 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 6
   739 ;; This function calls:
   740 ;;		___flge
   741 ;;		___flmul
   742 ;;		___lwdiv
   743 ;;		___xxtofl
   744 ;;		_levels
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text1
   751   00009E                     __ptext1:
   752                           	callstack 0
   753   00009E                     _readcard:
   754                           	callstack 24
   755   00009E                     
   756                           ;card.c: 22:     levels(0,colorL);
   757   00009E  0E00               	movlw	0
   758   0000A0  6E12               	movwf	(levels@i+1)^0,c
   759   0000A2  0E00               	movlw	0
   760   0000A4  6E11               	movwf	levels@i^0,c
   761   0000A6  C040  F013         	movff	readcard@colorL,levels@colorL
   762   0000AA  C041  F014         	movff	readcard@colorL+1,levels@colorL+1
   763   0000AE  ECE0  F006         	call	_levels	;wreg free
   764                           
   765                           ;card.c: 24:     float ratio1=colorL->R/colorL->B;
   766   0000B2  EE20 F004          	lfsr	2,4
   767   0000B6  5040               	movf	readcard@colorL^0,w,c
   768   0000B8  26D9               	addwf	fsr2l,f,c
   769   0000BA  5041               	movf	(readcard@colorL+1)^0,w,c
   770   0000BC  22DA               	addwfc	fsr2h,f,c
   771   0000BE  CFDE F008          	movff	postinc2,___lwdiv@divisor
   772   0000C2  CFDD F009          	movff	postdec2,___lwdiv@divisor+1
   773   0000C6  C040  FFD9         	movff	readcard@colorL,fsr2l
   774   0000CA  C041  FFDA         	movff	readcard@colorL+1,fsr2h
   775   0000CE  CFDE F006          	movff	postinc2,___lwdiv@dividend
   776   0000D2  CFDD F007          	movff	postdec2,___lwdiv@dividend+1
   777   0000D6  EC1C  F007         	call	___lwdiv	;wreg free
   778   0000DA  C006  F00D         	movff	?___lwdiv,___xxtofl@val
   779   0000DE  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
   780   0000E2  6A0F               	clrf	(___xxtofl@val+2)^0,c
   781   0000E4  6A10               	clrf	(___xxtofl@val+3)^0,c
   782   0000E6  0E00               	movlw	0
   783   0000E8  ECEF  F004         	call	___xxtofl
   784   0000EC  C00D  F046         	movff	?___xxtofl,readcard@ratio1
   785   0000F0  C00E  F047         	movff	?___xxtofl+1,readcard@ratio1+1
   786   0000F4  C00F  F048         	movff	?___xxtofl+2,readcard@ratio1+2
   787   0000F8  C010  F049         	movff	?___xxtofl+3,readcard@ratio1+3
   788                           
   789                           ;card.c: 25:     float ratio2=colorL->R/colorL->G;
   790   0000FC  EE20 F002          	lfsr	2,2
   791   000100  5040               	movf	readcard@colorL^0,w,c
   792   000102  26D9               	addwf	fsr2l,f,c
   793   000104  5041               	movf	(readcard@colorL+1)^0,w,c
   794   000106  22DA               	addwfc	fsr2h,f,c
   795   000108  CFDE F008          	movff	postinc2,___lwdiv@divisor
   796   00010C  CFDD F009          	movff	postdec2,___lwdiv@divisor+1
   797   000110  C040  FFD9         	movff	readcard@colorL,fsr2l
   798   000114  C041  FFDA         	movff	readcard@colorL+1,fsr2h
   799   000118  CFDE F006          	movff	postinc2,___lwdiv@dividend
   800   00011C  CFDD F007          	movff	postdec2,___lwdiv@dividend+1
   801   000120  EC1C  F007         	call	___lwdiv	;wreg free
   802   000124  C006  F00D         	movff	?___lwdiv,___xxtofl@val
   803   000128  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
   804   00012C  6A0F               	clrf	(___xxtofl@val+2)^0,c
   805   00012E  6A10               	clrf	(___xxtofl@val+3)^0,c
   806   000130  0E00               	movlw	0
   807   000132  ECEF  F004         	call	___xxtofl
   808   000136  C00D  F04A         	movff	?___xxtofl,readcard@ratio2
   809   00013A  C00E  F04B         	movff	?___xxtofl+1,readcard@ratio2+1
   810   00013E  C00F  F04C         	movff	?___xxtofl+2,readcard@ratio2+2
   811   000142  C010  F04D         	movff	?___xxtofl+3,readcard@ratio2+3
   812                           
   813                           ;card.c: 26:     float ratio3=colorL->B/colorL->G;
   814   000146  EE20 F002          	lfsr	2,2
   815   00014A  5040               	movf	readcard@colorL^0,w,c
   816   00014C  26D9               	addwf	fsr2l,f,c
   817   00014E  5041               	movf	(readcard@colorL+1)^0,w,c
   818   000150  22DA               	addwfc	fsr2h,f,c
   819   000152  CFDE F008          	movff	postinc2,___lwdiv@divisor
   820   000156  CFDD F009          	movff	postdec2,___lwdiv@divisor+1
   821   00015A  EE20 F004          	lfsr	2,4
   822   00015E  5040               	movf	readcard@colorL^0,w,c
   823   000160  26D9               	addwf	fsr2l,f,c
   824   000162  5041               	movf	(readcard@colorL+1)^0,w,c
   825   000164  22DA               	addwfc	fsr2h,f,c
   826   000166  CFDE F006          	movff	postinc2,___lwdiv@dividend
   827   00016A  CFDD F007          	movff	postdec2,___lwdiv@dividend+1
   828   00016E  EC1C  F007         	call	___lwdiv	;wreg free
   829   000172  C006  F00D         	movff	?___lwdiv,___xxtofl@val
   830   000176  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
   831   00017A  6A0F               	clrf	(___xxtofl@val+2)^0,c
   832   00017C  6A10               	clrf	(___xxtofl@val+3)^0,c
   833   00017E  0E00               	movlw	0
   834   000180  ECEF  F004         	call	___xxtofl
   835   000184  C00D  F04E         	movff	?___xxtofl,readcard@ratio3
   836   000188  C00E  F04F         	movff	?___xxtofl+1,readcard@ratio3+1
   837   00018C  C00F  F050         	movff	?___xxtofl+2,readcard@ratio3+2
   838   000190  C010  F051         	movff	?___xxtofl+3,readcard@ratio3+3
   839   000194                     
   840                           ;card.c: 29:     if ((ratio1>80 & ratio1<125) & (ratio2>80 & ratio2<125) & (ratio3>80 & 
      +                          ratio3<125)){
   841   000194  0E00               	movlw	0
   842   000196  6E34               	movwf	___flge@ff1^0,c
   843   000198  0E00               	movlw	0
   844   00019A  6E35               	movwf	(___flge@ff1+1)^0,c
   845   00019C  0EA0               	movlw	160
   846   00019E  6E36               	movwf	(___flge@ff1+2)^0,c
   847   0001A0  0E42               	movlw	66
   848   0001A2  6E37               	movwf	(___flge@ff1+3)^0,c
   849   0001A4  C046  F038         	movff	readcard@ratio1,___flge@ff2
   850   0001A8  C047  F039         	movff	readcard@ratio1+1,___flge@ff2+1
   851   0001AC  C048  F03A         	movff	readcard@ratio1+2,___flge@ff2+2
   852   0001B0  C049  F03B         	movff	readcard@ratio1+3,___flge@ff2+3
   853   0001B4  EC5E  F006         	call	___flge	;wreg free
   854   0001B8  B0D8               	btfsc	status,0,c
   855   0001BA  EFE1  F000         	goto	u1341
   856   0001BE  EFE3  F000         	goto	u1340
   857   0001C2                     u1341:
   858   0001C2  EF77  F001         	goto	l1978
   859   0001C6                     u1340:
   860   0001C6  C046  F034         	movff	readcard@ratio1,___flge@ff1
   861   0001CA  C047  F035         	movff	readcard@ratio1+1,___flge@ff1+1
   862   0001CE  C048  F036         	movff	readcard@ratio1+2,___flge@ff1+2
   863   0001D2  C049  F037         	movff	readcard@ratio1+3,___flge@ff1+3
   864   0001D6  0E00               	movlw	0
   865   0001D8  6E38               	movwf	___flge@ff2^0,c
   866   0001DA  0E00               	movlw	0
   867   0001DC  6E39               	movwf	(___flge@ff2+1)^0,c
   868   0001DE  0EFA               	movlw	250
   869   0001E0  6E3A               	movwf	(___flge@ff2+2)^0,c
   870   0001E2  0E42               	movlw	66
   871   0001E4  6E3B               	movwf	(___flge@ff2+3)^0,c
   872   0001E6  EC5E  F006         	call	___flge	;wreg free
   873   0001EA  B0D8               	btfsc	status,0,c
   874   0001EC  EFFA  F000         	goto	u1351
   875   0001F0  EFFC  F000         	goto	u1350
   876   0001F4                     u1351:
   877   0001F4  EF77  F001         	goto	l1978
   878   0001F8                     u1350:
   879   0001F8  0E00               	movlw	0
   880   0001FA  6E34               	movwf	___flge@ff1^0,c
   881   0001FC  0E00               	movlw	0
   882   0001FE  6E35               	movwf	(___flge@ff1+1)^0,c
   883   000200  0EA0               	movlw	160
   884   000202  6E36               	movwf	(___flge@ff1+2)^0,c
   885   000204  0E42               	movlw	66
   886   000206  6E37               	movwf	(___flge@ff1+3)^0,c
   887   000208  C04A  F038         	movff	readcard@ratio2,___flge@ff2
   888   00020C  C04B  F039         	movff	readcard@ratio2+1,___flge@ff2+1
   889   000210  C04C  F03A         	movff	readcard@ratio2+2,___flge@ff2+2
   890   000214  C04D  F03B         	movff	readcard@ratio2+3,___flge@ff2+3
   891   000218  EC5E  F006         	call	___flge	;wreg free
   892   00021C  B0D8               	btfsc	status,0,c
   893   00021E  EF13  F001         	goto	u1361
   894   000222  EF15  F001         	goto	u1360
   895   000226                     u1361:
   896   000226  EF77  F001         	goto	l1978
   897   00022A                     u1360:
   898   00022A  C04A  F034         	movff	readcard@ratio2,___flge@ff1
   899   00022E  C04B  F035         	movff	readcard@ratio2+1,___flge@ff1+1
   900   000232  C04C  F036         	movff	readcard@ratio2+2,___flge@ff1+2
   901   000236  C04D  F037         	movff	readcard@ratio2+3,___flge@ff1+3
   902   00023A  0E00               	movlw	0
   903   00023C  6E38               	movwf	___flge@ff2^0,c
   904   00023E  0E00               	movlw	0
   905   000240  6E39               	movwf	(___flge@ff2+1)^0,c
   906   000242  0EFA               	movlw	250
   907   000244  6E3A               	movwf	(___flge@ff2+2)^0,c
   908   000246  0E42               	movlw	66
   909   000248  6E3B               	movwf	(___flge@ff2+3)^0,c
   910   00024A  EC5E  F006         	call	___flge	;wreg free
   911   00024E  B0D8               	btfsc	status,0,c
   912   000250  EF2C  F001         	goto	u1371
   913   000254  EF2E  F001         	goto	u1370
   914   000258                     u1371:
   915   000258  EF77  F001         	goto	l1978
   916   00025C                     u1370:
   917   00025C  0E00               	movlw	0
   918   00025E  6E34               	movwf	___flge@ff1^0,c
   919   000260  0E00               	movlw	0
   920   000262  6E35               	movwf	(___flge@ff1+1)^0,c
   921   000264  0EA0               	movlw	160
   922   000266  6E36               	movwf	(___flge@ff1+2)^0,c
   923   000268  0E42               	movlw	66
   924   00026A  6E37               	movwf	(___flge@ff1+3)^0,c
   925   00026C  C04E  F038         	movff	readcard@ratio3,___flge@ff2
   926   000270  C04F  F039         	movff	readcard@ratio3+1,___flge@ff2+1
   927   000274  C050  F03A         	movff	readcard@ratio3+2,___flge@ff2+2
   928   000278  C051  F03B         	movff	readcard@ratio3+3,___flge@ff2+3
   929   00027C  EC5E  F006         	call	___flge	;wreg free
   930   000280  B0D8               	btfsc	status,0,c
   931   000282  EF45  F001         	goto	u1381
   932   000286  EF47  F001         	goto	u1380
   933   00028A                     u1381:
   934   00028A  EF77  F001         	goto	l1978
   935   00028E                     u1380:
   936   00028E  C04E  F034         	movff	readcard@ratio3,___flge@ff1
   937   000292  C04F  F035         	movff	readcard@ratio3+1,___flge@ff1+1
   938   000296  C050  F036         	movff	readcard@ratio3+2,___flge@ff1+2
   939   00029A  C051  F037         	movff	readcard@ratio3+3,___flge@ff1+3
   940   00029E  0E00               	movlw	0
   941   0002A0  6E38               	movwf	___flge@ff2^0,c
   942   0002A2  0E00               	movlw	0
   943   0002A4  6E39               	movwf	(___flge@ff2+1)^0,c
   944   0002A6  0EFA               	movlw	250
   945   0002A8  6E3A               	movwf	(___flge@ff2+2)^0,c
   946   0002AA  0E42               	movlw	66
   947   0002AC  6E3B               	movwf	(___flge@ff2+3)^0,c
   948   0002AE  EC5E  F006         	call	___flge	;wreg free
   949   0002B2  B0D8               	btfsc	status,0,c
   950   0002B4  EF5E  F001         	goto	u1391
   951   0002B8  EF60  F001         	goto	u1390
   952   0002BC                     u1391:
   953   0002BC  EF77  F001         	goto	l1978
   954   0002C0                     u1390:
   955   0002C0                     
   956                           ;card.c: 30:         if(colorL->B>4000){return 7;}
   957   0002C0  EE20 F004          	lfsr	2,4
   958   0002C4  5040               	movf	readcard@colorL^0,w,c
   959   0002C6  26D9               	addwf	fsr2l,f,c
   960   0002C8  5041               	movf	(readcard@colorL+1)^0,w,c
   961   0002CA  22DA               	addwfc	fsr2h,f,c
   962   0002CC  0EA1               	movlw	161
   963   0002CE  5CDE               	subwf	postinc2,w,c
   964   0002D0  0E0F               	movlw	15
   965   0002D2  58DE               	subwfb	postinc2,w,c
   966   0002D4  A0D8               	btfss	status,0,c
   967   0002D6  EF6F  F001         	goto	u1401
   968   0002DA  EF71  F001         	goto	u1400
   969   0002DE                     u1401:
   970   0002DE  EF74  F001         	goto	l1974
   971   0002E2                     u1400:
   972   0002E2  0E07               	movlw	7
   973   0002E4  EFD9  F002         	goto	l111
   974   0002E8                     l1974:
   975                           
   976                           ;card.c: 31:         return 2;
   977   0002E8  0E02               	movlw	2
   978   0002EA  EFD9  F002         	goto	l111
   979   0002EE                     l1978:
   980                           
   981                           ;card.c: 34:     if (colorL->R>colorL->B*1.6 & colorL->R>colorL->G*1.6){
   982   0002EE  0ECD               	movlw	205
   983   0002F0  6E1F               	movwf	___flmul@a^0,c
   984   0002F2  0ECC               	movlw	204
   985   0002F4  6E20               	movwf	(___flmul@a+1)^0,c
   986   0002F6  0ECC               	movlw	204
   987   0002F8  6E21               	movwf	(___flmul@a+2)^0,c
   988   0002FA  0E3F               	movlw	63
   989   0002FC  6E22               	movwf	(___flmul@a+3)^0,c
   990   0002FE  EE20 F004          	lfsr	2,4
   991   000302  5040               	movf	readcard@colorL^0,w,c
   992   000304  26D9               	addwf	fsr2l,f,c
   993   000306  5041               	movf	(readcard@colorL+1)^0,w,c
   994   000308  22DA               	addwfc	fsr2h,f,c
   995   00030A  CFDE F042          	movff	postinc2,??_readcard
   996   00030E  CFDD F043          	movff	postdec2,??_readcard+1
   997   000312  C042  F00D         	movff	??_readcard,___xxtofl@val
   998   000316  C043  F00E         	movff	??_readcard+1,___xxtofl@val+1
   999   00031A  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1000   00031C  6A10               	clrf	(___xxtofl@val+3)^0,c
  1001   00031E  0E00               	movlw	0
  1002   000320  ECEF  F004         	call	___xxtofl
  1003   000324  C00D  F01B         	movff	?___xxtofl,___flmul@b
  1004   000328  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  1005   00032C  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  1006   000330  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  1007   000334  ECDA  F002         	call	___flmul	;wreg free
  1008   000338  C01B  F034         	movff	?___flmul,___flge@ff1
  1009   00033C  C01C  F035         	movff	?___flmul+1,___flge@ff1+1
  1010   000340  C01D  F036         	movff	?___flmul+2,___flge@ff1+2
  1011   000344  C01E  F037         	movff	?___flmul+3,___flge@ff1+3
  1012   000348  C040  FFD9         	movff	readcard@colorL,fsr2l
  1013   00034C  C041  FFDA         	movff	readcard@colorL+1,fsr2h
  1014   000350  CFDE F044          	movff	postinc2,??_readcard+2
  1015   000354  CFDD F045          	movff	postdec2,??_readcard+3
  1016   000358  C044  F00D         	movff	??_readcard+2,___xxtofl@val
  1017   00035C  C045  F00E         	movff	??_readcard+3,___xxtofl@val+1
  1018   000360  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1019   000362  6A10               	clrf	(___xxtofl@val+3)^0,c
  1020   000364  0E00               	movlw	0
  1021   000366  ECEF  F004         	call	___xxtofl
  1022   00036A  C00D  F038         	movff	?___xxtofl,___flge@ff2
  1023   00036E  C00E  F039         	movff	?___xxtofl+1,___flge@ff2+1
  1024   000372  C00F  F03A         	movff	?___xxtofl+2,___flge@ff2+2
  1025   000376  C010  F03B         	movff	?___xxtofl+3,___flge@ff2+3
  1026   00037A  EC5E  F006         	call	___flge	;wreg free
  1027   00037E  B0D8               	btfsc	status,0,c
  1028   000380  EFC4  F001         	goto	u1411
  1029   000384  EFC6  F001         	goto	u1410
  1030   000388                     u1411:
  1031   000388  EFBC  F002         	goto	l2008
  1032   00038C                     u1410:
  1033   00038C  0ECD               	movlw	205
  1034   00038E  6E1F               	movwf	___flmul@a^0,c
  1035   000390  0ECC               	movlw	204
  1036   000392  6E20               	movwf	(___flmul@a+1)^0,c
  1037   000394  0ECC               	movlw	204
  1038   000396  6E21               	movwf	(___flmul@a+2)^0,c
  1039   000398  0E3F               	movlw	63
  1040   00039A  6E22               	movwf	(___flmul@a+3)^0,c
  1041   00039C  EE20 F002          	lfsr	2,2
  1042   0003A0  5040               	movf	readcard@colorL^0,w,c
  1043   0003A2  26D9               	addwf	fsr2l,f,c
  1044   0003A4  5041               	movf	(readcard@colorL+1)^0,w,c
  1045   0003A6  22DA               	addwfc	fsr2h,f,c
  1046   0003A8  CFDE F042          	movff	postinc2,??_readcard
  1047   0003AC  CFDD F043          	movff	postdec2,??_readcard+1
  1048   0003B0  C042  F00D         	movff	??_readcard,___xxtofl@val
  1049   0003B4  C043  F00E         	movff	??_readcard+1,___xxtofl@val+1
  1050   0003B8  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1051   0003BA  6A10               	clrf	(___xxtofl@val+3)^0,c
  1052   0003BC  0E00               	movlw	0
  1053   0003BE  ECEF  F004         	call	___xxtofl
  1054   0003C2  C00D  F01B         	movff	?___xxtofl,___flmul@b
  1055   0003C6  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  1056   0003CA  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  1057   0003CE  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  1058   0003D2  ECDA  F002         	call	___flmul	;wreg free
  1059   0003D6  C01B  F034         	movff	?___flmul,___flge@ff1
  1060   0003DA  C01C  F035         	movff	?___flmul+1,___flge@ff1+1
  1061   0003DE  C01D  F036         	movff	?___flmul+2,___flge@ff1+2
  1062   0003E2  C01E  F037         	movff	?___flmul+3,___flge@ff1+3
  1063   0003E6  C040  FFD9         	movff	readcard@colorL,fsr2l
  1064   0003EA  C041  FFDA         	movff	readcard@colorL+1,fsr2h
  1065   0003EE  CFDE F044          	movff	postinc2,??_readcard+2
  1066   0003F2  CFDD F045          	movff	postdec2,??_readcard+3
  1067   0003F6  C044  F00D         	movff	??_readcard+2,___xxtofl@val
  1068   0003FA  C045  F00E         	movff	??_readcard+3,___xxtofl@val+1
  1069   0003FE  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1070   000400  6A10               	clrf	(___xxtofl@val+3)^0,c
  1071   000402  0E00               	movlw	0
  1072   000404  ECEF  F004         	call	___xxtofl
  1073   000408  C00D  F038         	movff	?___xxtofl,___flge@ff2
  1074   00040C  C00E  F039         	movff	?___xxtofl+1,___flge@ff2+1
  1075   000410  C00F  F03A         	movff	?___xxtofl+2,___flge@ff2+2
  1076   000414  C010  F03B         	movff	?___xxtofl+3,___flge@ff2+3
  1077   000418  EC5E  F006         	call	___flge	;wreg free
  1078   00041C  B0D8               	btfsc	status,0,c
  1079   00041E  EF13  F002         	goto	u1421
  1080   000422  EF15  F002         	goto	u1420
  1081   000426                     u1421:
  1082   000426  EFBC  F002         	goto	l2008
  1083   00042A                     u1420:
  1084   00042A                     
  1085                           ;card.c: 36:         levels(2,colorL);
  1086   00042A  0E00               	movlw	0
  1087   00042C  6E12               	movwf	(levels@i+1)^0,c
  1088   00042E  0E02               	movlw	2
  1089   000430  6E11               	movwf	levels@i^0,c
  1090   000432  C040  F013         	movff	readcard@colorL,levels@colorL
  1091   000436  C041  F014         	movff	readcard@colorL+1,levels@colorL+1
  1092   00043A  ECE0  F006         	call	_levels	;wreg free
  1093   00043E                     
  1094                           ;card.c: 37:         if(colorL->B>2*colorL->R){return 4;}
  1095   00043E  EE20 F004          	lfsr	2,4
  1096   000442  5040               	movf	readcard@colorL^0,w,c
  1097   000444  26D9               	addwf	fsr2l,f,c
  1098   000446  5041               	movf	(readcard@colorL+1)^0,w,c
  1099   000448  22DA               	addwfc	fsr2h,f,c
  1100   00044A  C040  FFE1         	movff	readcard@colorL,fsr1l
  1101   00044E  C041  FFE2         	movff	readcard@colorL+1,fsr1h
  1102   000452  CFE6 F044          	movff	postinc1,??_readcard+2
  1103   000456  CFE5 F045          	movff	postdec1,??_readcard+3
  1104   00045A  90D8               	bcf	status,0,c
  1105   00045C  3644               	rlcf	(??_readcard+2)^0,f,c
  1106   00045E  3645               	rlcf	(??_readcard+3)^0,f,c
  1107   000460  50DE               	movf	postinc2,w,c
  1108   000462  5C44               	subwf	(??_readcard+2)^0,w,c
  1109   000464  50DE               	movf	postinc2,w,c
  1110   000466  5845               	subwfb	(??_readcard+3)^0,w,c
  1111   000468  B0D8               	btfsc	status,0,c
  1112   00046A  EF39  F002         	goto	u1431
  1113   00046E  EF3B  F002         	goto	u1430
  1114   000472                     u1431:
  1115   000472  EF3E  F002         	goto	l1990
  1116   000476                     u1430:
  1117   000476  0E04               	movlw	4
  1118   000478  EFD9  F002         	goto	l111
  1119   00047C                     l1990:
  1120                           
  1121                           ;card.c: 39:         levels(3,colorL);
  1122   00047C  0E00               	movlw	0
  1123   00047E  6E12               	movwf	(levels@i+1)^0,c
  1124   000480  0E03               	movlw	3
  1125   000482  6E11               	movwf	levels@i^0,c
  1126   000484  C040  F013         	movff	readcard@colorL,levels@colorL
  1127   000488  C041  F014         	movff	readcard@colorL+1,levels@colorL+1
  1128   00048C  ECE0  F006         	call	_levels	;wreg free
  1129   000490                     
  1130                           ;card.c: 40:         if(colorL->G>3.8*colorL->R){return 5;}
  1131   000490  0E33               	movlw	51
  1132   000492  6E1F               	movwf	___flmul@a^0,c
  1133   000494  0E33               	movlw	51
  1134   000496  6E20               	movwf	(___flmul@a+1)^0,c
  1135   000498  0E73               	movlw	115
  1136   00049A  6E21               	movwf	(___flmul@a+2)^0,c
  1137   00049C  0E40               	movlw	64
  1138   00049E  6E22               	movwf	(___flmul@a+3)^0,c
  1139   0004A0  C040  FFD9         	movff	readcard@colorL,fsr2l
  1140   0004A4  C041  FFDA         	movff	readcard@colorL+1,fsr2h
  1141   0004A8  CFDE F042          	movff	postinc2,??_readcard
  1142   0004AC  CFDD F043          	movff	postdec2,??_readcard+1
  1143   0004B0  C042  F00D         	movff	??_readcard,___xxtofl@val
  1144   0004B4  C043  F00E         	movff	??_readcard+1,___xxtofl@val+1
  1145   0004B8  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1146   0004BA  6A10               	clrf	(___xxtofl@val+3)^0,c
  1147   0004BC  0E00               	movlw	0
  1148   0004BE  ECEF  F004         	call	___xxtofl
  1149   0004C2  C00D  F01B         	movff	?___xxtofl,___flmul@b
  1150   0004C6  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  1151   0004CA  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  1152   0004CE  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  1153   0004D2  ECDA  F002         	call	___flmul	;wreg free
  1154   0004D6  C01B  F034         	movff	?___flmul,___flge@ff1
  1155   0004DA  C01C  F035         	movff	?___flmul+1,___flge@ff1+1
  1156   0004DE  C01D  F036         	movff	?___flmul+2,___flge@ff1+2
  1157   0004E2  C01E  F037         	movff	?___flmul+3,___flge@ff1+3
  1158   0004E6  EE20 F002          	lfsr	2,2
  1159   0004EA  5040               	movf	readcard@colorL^0,w,c
  1160   0004EC  26D9               	addwf	fsr2l,f,c
  1161   0004EE  5041               	movf	(readcard@colorL+1)^0,w,c
  1162   0004F0  22DA               	addwfc	fsr2h,f,c
  1163   0004F2  CFDE F044          	movff	postinc2,??_readcard+2
  1164   0004F6  CFDD F045          	movff	postdec2,??_readcard+3
  1165   0004FA  C044  F00D         	movff	??_readcard+2,___xxtofl@val
  1166   0004FE  C045  F00E         	movff	??_readcard+3,___xxtofl@val+1
  1167   000502  6A0F               	clrf	(___xxtofl@val+2)^0,c
  1168   000504  6A10               	clrf	(___xxtofl@val+3)^0,c
  1169   000506  0E00               	movlw	0
  1170   000508  ECEF  F004         	call	___xxtofl
  1171   00050C  C00D  F038         	movff	?___xxtofl,___flge@ff2
  1172   000510  C00E  F039         	movff	?___xxtofl+1,___flge@ff2+1
  1173   000514  C00F  F03A         	movff	?___xxtofl+2,___flge@ff2+2
  1174   000518  C010  F03B         	movff	?___xxtofl+3,___flge@ff2+3
  1175   00051C  EC5E  F006         	call	___flge	;wreg free
  1176   000520  B0D8               	btfsc	status,0,c
  1177   000522  EF95  F002         	goto	u1441
  1178   000526  EF97  F002         	goto	u1440
  1179   00052A                     u1441:
  1180   00052A  EF9A  F002         	goto	l1998
  1181   00052E                     u1440:
  1182   00052E  0E05               	movlw	5
  1183   000530  EFD9  F002         	goto	l111
  1184   000534                     l1998:
  1185                           
  1186                           ;card.c: 42:         if(colorL->G>2*colorL->R){return 6;}
  1187   000534  EE20 F002          	lfsr	2,2
  1188   000538  5040               	movf	readcard@colorL^0,w,c
  1189   00053A  26D9               	addwf	fsr2l,f,c
  1190   00053C  5041               	movf	(readcard@colorL+1)^0,w,c
  1191   00053E  22DA               	addwfc	fsr2h,f,c
  1192   000540  C040  FFE1         	movff	readcard@colorL,fsr1l
  1193   000544  C041  FFE2         	movff	readcard@colorL+1,fsr1h
  1194   000548  CFE6 F044          	movff	postinc1,??_readcard+2
  1195   00054C  CFE5 F045          	movff	postdec1,??_readcard+3
  1196   000550  90D8               	bcf	status,0,c
  1197   000552  3644               	rlcf	(??_readcard+2)^0,f,c
  1198   000554  3645               	rlcf	(??_readcard+3)^0,f,c
  1199   000556  50DE               	movf	postinc2,w,c
  1200   000558  5C44               	subwf	(??_readcard+2)^0,w,c
  1201   00055A  50DE               	movf	postinc2,w,c
  1202   00055C  5845               	subwfb	(??_readcard+3)^0,w,c
  1203   00055E  B0D8               	btfsc	status,0,c
  1204   000560  EFB4  F002         	goto	u1451
  1205   000564  EFB6  F002         	goto	u1450
  1206   000568                     u1451:
  1207   000568  EFB9  F002         	goto	l2004
  1208   00056C                     u1450:
  1209   00056C  0E06               	movlw	6
  1210   00056E  EFD9  F002         	goto	l111
  1211   000572                     l2004:
  1212                           
  1213                           ;card.c: 45:         return 1;
  1214   000572  0E01               	movlw	1
  1215   000574  EFD9  F002         	goto	l111
  1216   000578                     l2008:
  1217                           
  1218                           ;card.c: 48:     levels(1,colorL);
  1219   000578  0E00               	movlw	0
  1220   00057A  6E12               	movwf	(levels@i+1)^0,c
  1221   00057C  0E01               	movlw	1
  1222   00057E  6E11               	movwf	levels@i^0,c
  1223   000580  C040  F013         	movff	readcard@colorL,levels@colorL
  1224   000584  C041  F014         	movff	readcard@colorL+1,levels@colorL+1
  1225   000588  ECE0  F006         	call	_levels	;wreg free
  1226   00058C                     
  1227                           ;card.c: 49:     if(colorL->R>1000){return 0;}
  1228   00058C  C040  FFD9         	movff	readcard@colorL,fsr2l
  1229   000590  C041  FFDA         	movff	readcard@colorL+1,fsr2h
  1230   000594  0EE9               	movlw	233
  1231   000596  5CDE               	subwf	postinc2,w,c
  1232   000598  0E03               	movlw	3
  1233   00059A  58DE               	subwfb	postinc2,w,c
  1234   00059C  A0D8               	btfss	status,0,c
  1235   00059E  EFD3  F002         	goto	u1461
  1236   0005A2  EFD5  F002         	goto	u1460
  1237   0005A6                     u1461:
  1238   0005A6  EFD8  F002         	goto	l2016
  1239   0005AA                     u1460:
  1240   0005AA  0E00               	movlw	0
  1241   0005AC  EFD9  F002         	goto	l111
  1242   0005B0                     l2016:
  1243                           
  1244                           ;card.c: 50:     return 3;
  1245   0005B0  0E03               	movlw	3
  1246   0005B2                     l111:
  1247   0005B2  0012               	return		;funcret
  1248   0005B4                     __end_of_readcard:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _levels *****************
  1252 ;; Defined at:
  1253 ;;		line 53 in file "card.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  i               2   16[COMRAM] int 
  1256 ;;  colorL          2   18[COMRAM] PTR struct RGB_val
  1257 ;;		 -> main@colorL(6), 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1269 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;Total ram usage:        6 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 5
  1276 ;; This function calls:
  1277 ;;		_Light
  1278 ;;		_color_read_Blue
  1279 ;;		_color_read_Green
  1280 ;;		_color_read_Red
  1281 ;; This function is called by:
  1282 ;;		_readcard
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text2
  1287   000DC0                     __ptext2:
  1288                           	callstack 0
  1289   000DC0                     _levels:
  1290                           	callstack 24
  1291   000DC0                     
  1292                           ;card.c: 54:         Light(i);
  1293   000DC0  5011               	movf	levels@i^0,w,c
  1294   000DC2  EC56  F007         	call	_Light
  1295   000DC6                     
  1296                           ;card.c: 55:         _delay((unsigned long)((900)*(64000000/4000.0)));
  1297   000DC6  0E4A               	movlw	74
  1298   000DC8  6E16               	movwf	(??_levels+1)^0,c
  1299   000DCA  0E0E               	movlw	14
  1300   000DCC  6E15               	movwf	??_levels^0,c
  1301   000DCE  0E19               	movlw	25
  1302   000DD0                     u1777:
  1303   000DD0  2EE8               	decfsz	wreg,f,c
  1304   000DD2  D7FE               	bra	u1777
  1305   000DD4  2E15               	decfsz	??_levels^0,f,c
  1306   000DD6  D7FC               	bra	u1777
  1307   000DD8  2E16               	decfsz	(??_levels+1)^0,f,c
  1308   000DDA  D7FA               	bra	u1777
  1309   000DDC  F000               	nop	
  1310   000DDE                     
  1311                           ;card.c: 56:         if (i==1){LATFbits.LATF7=1;}
  1312   000DDE  0411               	decf	levels@i^0,w,c
  1313   000DE0  1012               	iorwf	(levels@i+1)^0,w,c
  1314   000DE2  A4D8               	btfss	status,2,c
  1315   000DE4  EFF6  F006         	goto	u951
  1316   000DE8  EFF8  F006         	goto	u950
  1317   000DEC                     u951:
  1318   000DEC  EFF9  F006         	goto	l1698
  1319   000DF0                     u950:
  1320   000DF0  8E7E               	bsf	126,7,c	;volatile
  1321   000DF2                     l1698:
  1322                           
  1323                           ;card.c: 57:         colorL->R = color_read_Red();
  1324   000DF2  EC86  F007         	call	_color_read_Red	;wreg free
  1325   000DF6  C013  FFD9         	movff	levels@colorL,fsr2l
  1326   000DFA  C014  FFDA         	movff	levels@colorL+1,fsr2h
  1327   000DFE  C00A  FFDE         	movff	?_color_read_Red,postinc2
  1328   000E02  C00B  FFDD         	movff	?_color_read_Red+1,postdec2
  1329                           
  1330                           ;card.c: 58:         colorL->B = color_read_Blue();
  1331   000E06  ECD6  F007         	call	_color_read_Blue	;wreg free
  1332   000E0A  EE20 F004          	lfsr	2,4
  1333   000E0E  5013               	movf	levels@colorL^0,w,c
  1334   000E10  26D9               	addwf	fsr2l,f,c
  1335   000E12  5014               	movf	(levels@colorL+1)^0,w,c
  1336   000E14  22DA               	addwfc	fsr2h,f,c
  1337   000E16  C00A  FFDE         	movff	?_color_read_Blue,postinc2
  1338   000E1A  C00B  FFDD         	movff	?_color_read_Blue+1,postdec2
  1339                           
  1340                           ;card.c: 59:         colorL->G = color_read_Green();
  1341   000E1E  ECAE  F007         	call	_color_read_Green	;wreg free
  1342   000E22  EE20 F002          	lfsr	2,2
  1343   000E26  5013               	movf	levels@colorL^0,w,c
  1344   000E28  26D9               	addwf	fsr2l,f,c
  1345   000E2A  5014               	movf	(levels@colorL+1)^0,w,c
  1346   000E2C  22DA               	addwfc	fsr2h,f,c
  1347   000E2E  C00A  FFDE         	movff	?_color_read_Green,postinc2
  1348   000E32  C00B  FFDD         	movff	?_color_read_Green+1,postdec2
  1349   000E36  0012               	return		;funcret
  1350   000E38                     __end_of_levels:
  1351                           	callstack 0
  1352                           
  1353 ;; *************** function _color_read_Red *****************
  1354 ;; Defined at:
  1355 ;;		line 29 in file "color.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  tmp             2   14[COMRAM] unsigned int 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  2    9[COMRAM] unsigned int 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1371 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1372 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1373 ;;Total ram usage:        7 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 4
  1376 ;; This function calls:
  1377 ;;		_I2C_2_Master_Read
  1378 ;;		_I2C_2_Master_RepStart
  1379 ;;		_I2C_2_Master_Start
  1380 ;;		_I2C_2_Master_Stop
  1381 ;;		_I2C_2_Master_Write
  1382 ;; This function is called by:
  1383 ;;		_levels
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text3
  1388   000F0C                     __ptext3:
  1389                           	callstack 0
  1390   000F0C                     _color_read_Red:
  1391                           	callstack 24
  1392   000F0C                     
  1393                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  1394   000F0C  EC2E  F009         	call	_I2C_2_Master_Start	;wreg free
  1395                           
  1396                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  1397   000F10  0E52               	movlw	82
  1398   000F12  EC1E  F009         	call	_I2C_2_Master_Write
  1399                           
  1400                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  1401   000F16  0EB6               	movlw	182
  1402   000F18  EC1E  F009         	call	_I2C_2_Master_Write
  1403                           
  1404                           ;color.c: 35:  I2C_2_Master_RepStart();
  1405   000F1C  EC24  F009         	call	_I2C_2_Master_RepStart	;wreg free
  1406                           
  1407                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  1408   000F20  0E53               	movlw	83
  1409   000F22  EC1E  F009         	call	_I2C_2_Master_Write
  1410                           
  1411                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  1412   000F26  0E01               	movlw	1
  1413   000F28  EC24  F008         	call	_I2C_2_Master_Read
  1414   000F2C  6E0C               	movwf	??_color_read_Red^0,c
  1415   000F2E  500C               	movf	??_color_read_Red^0,w,c
  1416   000F30  6E0F               	movwf	color_read_Red@tmp^0,c
  1417   000F32  6A10               	clrf	(color_read_Red@tmp+1)^0,c
  1418                           
  1419                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1420   000F34  0E00               	movlw	0
  1421   000F36  EC24  F008         	call	_I2C_2_Master_Read
  1422   000F3A  6E0C               	movwf	??_color_read_Red^0,c
  1423   000F3C  500C               	movf	??_color_read_Red^0,w,c
  1424   000F3E  6E0E               	movwf	(??_color_read_Red+2)^0,c
  1425   000F40  6A0D               	clrf	(??_color_read_Red+1)^0,c
  1426   000F42  500F               	movf	color_read_Red@tmp^0,w,c
  1427   000F44  100D               	iorwf	(??_color_read_Red+1)^0,w,c
  1428   000F46  6E0F               	movwf	color_read_Red@tmp^0,c
  1429   000F48  5010               	movf	(color_read_Red@tmp+1)^0,w,c
  1430   000F4A  100E               	iorwf	(??_color_read_Red+2)^0,w,c
  1431   000F4C  6E10               	movwf	(color_read_Red@tmp+1)^0,c
  1432                           
  1433                           ;color.c: 39:  I2C_2_Master_Stop();
  1434   000F4E  EC29  F009         	call	_I2C_2_Master_Stop	;wreg free
  1435   000F52                     
  1436                           ;color.c: 40:  return tmp;
  1437   000F52  C00F  F00A         	movff	color_read_Red@tmp,?_color_read_Red
  1438   000F56  C010  F00B         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1439   000F5A  0012               	return		;funcret
  1440   000F5C                     __end_of_color_read_Red:
  1441                           	callstack 0
  1442                           
  1443 ;; *************** function _color_read_Green *****************
  1444 ;; Defined at:
  1445 ;;		line 59 in file "color.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  tmp             2   14[COMRAM] unsigned int 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  2    9[COMRAM] unsigned int 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1460 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1461 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1462 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;Total ram usage:        7 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; Hardware stack levels required when called: 4
  1466 ;; This function calls:
  1467 ;;		_I2C_2_Master_Read
  1468 ;;		_I2C_2_Master_RepStart
  1469 ;;		_I2C_2_Master_Start
  1470 ;;		_I2C_2_Master_Stop
  1471 ;;		_I2C_2_Master_Write
  1472 ;; This function is called by:
  1473 ;;		_levels
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text4
  1478   000F5C                     __ptext4:
  1479                           	callstack 0
  1480   000F5C                     _color_read_Green:
  1481                           	callstack 24
  1482   000F5C                     
  1483                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  1484   000F5C  EC2E  F009         	call	_I2C_2_Master_Start	;wreg free
  1485                           
  1486                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  1487   000F60  0E52               	movlw	82
  1488   000F62  EC1E  F009         	call	_I2C_2_Master_Write
  1489                           
  1490                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x18);
  1491   000F66  0EB8               	movlw	184
  1492   000F68  EC1E  F009         	call	_I2C_2_Master_Write
  1493                           
  1494                           ;color.c: 65:  I2C_2_Master_RepStart();
  1495   000F6C  EC24  F009         	call	_I2C_2_Master_RepStart	;wreg free
  1496                           
  1497                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  1498   000F70  0E53               	movlw	83
  1499   000F72  EC1E  F009         	call	_I2C_2_Master_Write
  1500                           
  1501                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  1502   000F76  0E01               	movlw	1
  1503   000F78  EC24  F008         	call	_I2C_2_Master_Read
  1504   000F7C  6E0C               	movwf	??_color_read_Green^0,c
  1505   000F7E  500C               	movf	??_color_read_Green^0,w,c
  1506   000F80  6E0F               	movwf	color_read_Green@tmp^0,c
  1507   000F82  6A10               	clrf	(color_read_Green@tmp+1)^0,c
  1508                           
  1509                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1510   000F84  0E00               	movlw	0
  1511   000F86  EC24  F008         	call	_I2C_2_Master_Read
  1512   000F8A  6E0C               	movwf	??_color_read_Green^0,c
  1513   000F8C  500C               	movf	??_color_read_Green^0,w,c
  1514   000F8E  6E0E               	movwf	(??_color_read_Green+2)^0,c
  1515   000F90  6A0D               	clrf	(??_color_read_Green+1)^0,c
  1516   000F92  500F               	movf	color_read_Green@tmp^0,w,c
  1517   000F94  100D               	iorwf	(??_color_read_Green+1)^0,w,c
  1518   000F96  6E0F               	movwf	color_read_Green@tmp^0,c
  1519   000F98  5010               	movf	(color_read_Green@tmp+1)^0,w,c
  1520   000F9A  100E               	iorwf	(??_color_read_Green+2)^0,w,c
  1521   000F9C  6E10               	movwf	(color_read_Green@tmp+1)^0,c
  1522                           
  1523                           ;color.c: 69:  I2C_2_Master_Stop();
  1524   000F9E  EC29  F009         	call	_I2C_2_Master_Stop	;wreg free
  1525   000FA2                     
  1526                           ;color.c: 70:  return tmp;
  1527   000FA2  C00F  F00A         	movff	color_read_Green@tmp,?_color_read_Green
  1528   000FA6  C010  F00B         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1529   000FAA  0012               	return		;funcret
  1530   000FAC                     __end_of_color_read_Green:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _color_read_Blue *****************
  1534 ;; Defined at:
  1535 ;;		line 45 in file "color.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  tmp             2   14[COMRAM] unsigned int 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  2    9[COMRAM] unsigned int 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1551 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1552 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;Total ram usage:        7 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; Hardware stack levels required when called: 4
  1556 ;; This function calls:
  1557 ;;		_I2C_2_Master_Read
  1558 ;;		_I2C_2_Master_RepStart
  1559 ;;		_I2C_2_Master_Start
  1560 ;;		_I2C_2_Master_Stop
  1561 ;;		_I2C_2_Master_Write
  1562 ;; This function is called by:
  1563 ;;		_levels
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text5
  1568   000FAC                     __ptext5:
  1569                           	callstack 0
  1570   000FAC                     _color_read_Blue:
  1571                           	callstack 24
  1572   000FAC                     
  1573                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  1574   000FAC  EC2E  F009         	call	_I2C_2_Master_Start	;wreg free
  1575                           
  1576                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  1577   000FB0  0E52               	movlw	82
  1578   000FB2  EC1E  F009         	call	_I2C_2_Master_Write
  1579                           
  1580                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x1A);
  1581   000FB6  0EBA               	movlw	186
  1582   000FB8  EC1E  F009         	call	_I2C_2_Master_Write
  1583                           
  1584                           ;color.c: 51:  I2C_2_Master_RepStart();
  1585   000FBC  EC24  F009         	call	_I2C_2_Master_RepStart	;wreg free
  1586                           
  1587                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  1588   000FC0  0E53               	movlw	83
  1589   000FC2  EC1E  F009         	call	_I2C_2_Master_Write
  1590                           
  1591                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  1592   000FC6  0E01               	movlw	1
  1593   000FC8  EC24  F008         	call	_I2C_2_Master_Read
  1594   000FCC  6E0C               	movwf	??_color_read_Blue^0,c
  1595   000FCE  500C               	movf	??_color_read_Blue^0,w,c
  1596   000FD0  6E0F               	movwf	color_read_Blue@tmp^0,c
  1597   000FD2  6A10               	clrf	(color_read_Blue@tmp+1)^0,c
  1598                           
  1599                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1600   000FD4  0E00               	movlw	0
  1601   000FD6  EC24  F008         	call	_I2C_2_Master_Read
  1602   000FDA  6E0C               	movwf	??_color_read_Blue^0,c
  1603   000FDC  500C               	movf	??_color_read_Blue^0,w,c
  1604   000FDE  6E0E               	movwf	(??_color_read_Blue+2)^0,c
  1605   000FE0  6A0D               	clrf	(??_color_read_Blue+1)^0,c
  1606   000FE2  500F               	movf	color_read_Blue@tmp^0,w,c
  1607   000FE4  100D               	iorwf	(??_color_read_Blue+1)^0,w,c
  1608   000FE6  6E0F               	movwf	color_read_Blue@tmp^0,c
  1609   000FE8  5010               	movf	(color_read_Blue@tmp+1)^0,w,c
  1610   000FEA  100E               	iorwf	(??_color_read_Blue+2)^0,w,c
  1611   000FEC  6E10               	movwf	(color_read_Blue@tmp+1)^0,c
  1612                           
  1613                           ;color.c: 55:  I2C_2_Master_Stop();
  1614   000FEE  EC29  F009         	call	_I2C_2_Master_Stop	;wreg free
  1615   000FF2                     
  1616                           ;color.c: 56:  return tmp;
  1617   000FF2  C00F  F00A         	movff	color_read_Blue@tmp,?_color_read_Blue
  1618   000FF6  C010  F00B         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1619   000FFA  0012               	return		;funcret
  1620   000FFC                     __end_of_color_read_Blue:
  1621                           	callstack 0
  1622                           
  1623 ;; *************** function _I2C_2_Master_RepStart *****************
  1624 ;; Defined at:
  1625 ;;		line 33 in file "i2c.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1643 ;;Total ram usage:        0 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 3
  1646 ;; This function calls:
  1647 ;;		_I2C_2_Master_Idle
  1648 ;; This function is called by:
  1649 ;;		_color_read_Red
  1650 ;;		_color_read_Blue
  1651 ;;		_color_read_Green
  1652 ;;		_color_read_Clear
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text6
  1657   001248                     __ptext6:
  1658                           	callstack 0
  1659   001248                     _I2C_2_Master_RepStart:
  1660                           	callstack 24
  1661   001248                     
  1662                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1663   001248  ECD0  F008         	call	_I2C_2_Master_Idle	;wreg free
  1664   00124C                     
  1665                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1666   00124C  010E               	movlb	14	; () banked
  1667   00124E  83DA               	bsf	218,1,b	;volatile
  1668   001250                     
  1669                           ; BSR set to: 14
  1670   001250  0012               	return		;funcret
  1671   001252                     __end_of_I2C_2_Master_RepStart:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _I2C_2_Master_Read *****************
  1675 ;; Defined at:
  1676 ;;		line 51 in file "i2c.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  ack             1    wreg     unsigned char 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  ack             1    7[COMRAM] unsigned char 
  1681 ;;  tmp             1    8[COMRAM] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      unsigned char 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1694 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1695 ;;Total ram usage:        3 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 3
  1698 ;; This function calls:
  1699 ;;		_I2C_2_Master_Idle
  1700 ;; This function is called by:
  1701 ;;		_color_read_Red
  1702 ;;		_color_read_Blue
  1703 ;;		_color_read_Green
  1704 ;;		_color_read_Clear
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text7
  1709   001048                     __ptext7:
  1710                           	callstack 0
  1711   001048                     _I2C_2_Master_Read:
  1712                           	callstack 24
  1713                           
  1714                           ; BSR set to: 14
  1715                           ;incstack = 0
  1716                           ;I2C_2_Master_Read@ack stored from wreg
  1717   001048  6E08               	movwf	I2C_2_Master_Read@ack^0,c
  1718   00104A                     
  1719                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1720   00104A  ECD0  F008         	call	_I2C_2_Master_Idle	;wreg free
  1721   00104E                     
  1722                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1723   00104E  010E               	movlb	14	; () banked
  1724   001050  87DA               	bsf	218,3,b	;volatile
  1725                           
  1726                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1727   001052  ECD0  F008         	call	_I2C_2_Master_Idle	;wreg free
  1728   001056                     
  1729                           ;i2c.c: 57:   tmp = SSP2BUF;
  1730   001056  CED5 F009          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1731                           
  1732                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1733   00105A  ECD0  F008         	call	_I2C_2_Master_Idle	;wreg free
  1734   00105E                     
  1735                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1736   00105E  5008               	movf	I2C_2_Master_Read@ack^0,w,c
  1737   001060  B4D8               	btfsc	status,2,c
  1738   001062  EF35  F008         	goto	u891
  1739   001066  EF39  F008         	goto	u890
  1740   00106A                     u891:
  1741   00106A  6A07               	clrf	??_I2C_2_Master_Read^0,c
  1742   00106C  2A07               	incf	??_I2C_2_Master_Read^0,f,c
  1743   00106E  EF3A  F008         	goto	u908
  1744   001072                     u890:
  1745   001072  6A07               	clrf	??_I2C_2_Master_Read^0,c
  1746   001074                     u908:
  1747   001074  3A07               	swapf	??_I2C_2_Master_Read^0,f,c
  1748   001076  4607               	rlncf	??_I2C_2_Master_Read^0,f,c
  1749   001078  010E               	movlb	14	; () banked
  1750   00107A  51DA               	movf	218,w,b	;volatile
  1751   00107C  1807               	xorwf	??_I2C_2_Master_Read^0,w,c
  1752   00107E  0BDF               	andlw	-33
  1753   001080  1807               	xorwf	??_I2C_2_Master_Read^0,w,c
  1754   001082  6FDA               	movwf	218,b	;volatile
  1755   001084                     
  1756                           ; BSR set to: 14
  1757                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1758   001084  89DA               	bsf	218,4,b	;volatile
  1759   001086                     
  1760                           ; BSR set to: 14
  1761                           ;i2c.c: 61:   return tmp;
  1762   001086  5009               	movf	I2C_2_Master_Read@tmp^0,w,c
  1763   001088                     
  1764                           ; BSR set to: 14
  1765   001088  0012               	return		;funcret
  1766   00108A                     __end_of_I2C_2_Master_Read:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _Light *****************
  1770 ;; Defined at:
  1771 ;;		line 14 in file "lights.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  colorcode       1    wreg     unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  colorcode       1    5[COMRAM] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1789 ;;Total ram usage:        1 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 2
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;;		_levels
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text8
  1801   000EAC                     __ptext8:
  1802                           	callstack 0
  1803   000EAC                     _Light:
  1804                           	callstack 26
  1805                           
  1806                           ; BSR set to: 14
  1807                           ;incstack = 0
  1808                           ;Light@colorcode stored from wreg
  1809   000EAC  6E06               	movwf	Light@colorcode^0,c
  1810   000EAE                     
  1811                           ;lights.c: 15:     if (colorcode==0){
  1812   000EAE  5006               	movf	Light@colorcode^0,w,c
  1813   000EB0  A4D8               	btfss	status,2,c
  1814   000EB2  EF5D  F007         	goto	u911
  1815   000EB6  EF5F  F007         	goto	u910
  1816   000EBA                     u911:
  1817   000EBA  EF62  F007         	goto	l1646
  1818   000EBE                     u910:
  1819   000EBE                     
  1820                           ;lights.c: 16:         LATGbits.LATG1=1;
  1821   000EBE  827F               	bsf	127,1,c	;volatile
  1822                           
  1823                           ;lights.c: 17:         LATFbits.LATF7=1;
  1824   000EC0  8E7E               	bsf	126,7,c	;volatile
  1825                           
  1826                           ;lights.c: 18:         LATAbits.LATA4=1;
  1827   000EC2  8879               	bsf	121,4,c	;volatile
  1828   000EC4                     l1646:
  1829                           
  1830                           ;lights.c: 20:     if (colorcode==1){
  1831   000EC4  0406               	decf	Light@colorcode^0,w,c
  1832   000EC6  A4D8               	btfss	status,2,c
  1833   000EC8  EF68  F007         	goto	u921
  1834   000ECC  EF6A  F007         	goto	u920
  1835   000ED0                     u921:
  1836   000ED0  EF6D  F007         	goto	l1650
  1837   000ED4                     u920:
  1838   000ED4                     
  1839                           ;lights.c: 21:         LATGbits.LATG1=1;
  1840   000ED4  827F               	bsf	127,1,c	;volatile
  1841                           
  1842                           ;lights.c: 22:         LATFbits.LATF7=0;
  1843   000ED6  9E7E               	bcf	126,7,c	;volatile
  1844                           
  1845                           ;lights.c: 23:         LATAbits.LATA4=0;
  1846   000ED8  9879               	bcf	121,4,c	;volatile
  1847   000EDA                     l1650:
  1848                           
  1849                           ;lights.c: 25:     if (colorcode==2){
  1850   000EDA  0E02               	movlw	2
  1851   000EDC  1806               	xorwf	Light@colorcode^0,w,c
  1852   000EDE  A4D8               	btfss	status,2,c
  1853   000EE0  EF74  F007         	goto	u931
  1854   000EE4  EF76  F007         	goto	u930
  1855   000EE8                     u931:
  1856   000EE8  EF79  F007         	goto	l1654
  1857   000EEC                     u930:
  1858   000EEC                     
  1859                           ;lights.c: 26:         LATGbits.LATG1=0;
  1860   000EEC  927F               	bcf	127,1,c	;volatile
  1861                           
  1862                           ;lights.c: 27:         LATFbits.LATF7=1;
  1863   000EEE  8E7E               	bsf	126,7,c	;volatile
  1864                           
  1865                           ;lights.c: 28:         LATAbits.LATA4=0;
  1866   000EF0  9879               	bcf	121,4,c	;volatile
  1867   000EF2                     l1654:
  1868                           
  1869                           ;lights.c: 30:     if (colorcode==3){
  1870   000EF2  0E03               	movlw	3
  1871   000EF4  1806               	xorwf	Light@colorcode^0,w,c
  1872   000EF6  A4D8               	btfss	status,2,c
  1873   000EF8  EF80  F007         	goto	u941
  1874   000EFC  EF82  F007         	goto	u940
  1875   000F00                     u941:
  1876   000F00  EF85  F007         	goto	l194
  1877   000F04                     u940:
  1878   000F04                     
  1879                           ;lights.c: 31:         LATGbits.LATG1=0;
  1880   000F04  927F               	bcf	127,1,c	;volatile
  1881                           
  1882                           ;lights.c: 32:         LATFbits.LATF7=0;
  1883   000F06  9E7E               	bcf	126,7,c	;volatile
  1884                           
  1885                           ;lights.c: 33:         LATAbits.LATA4=1;
  1886   000F08  8879               	bsf	121,4,c	;volatile
  1887   000F0A                     l194:
  1888   000F0A  0012               	return		;funcret
  1889   000F0C                     __end_of_Light:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function ___xxtofl *****************
  1893 ;; Defined at:
  1894 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  sign            1    wreg     unsigned char 
  1897 ;;  val             4   12[COMRAM] long 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  sign            1   20[COMRAM] unsigned char 
  1900 ;;  arg             4   22[COMRAM] unsigned long 
  1901 ;;  exp             1   21[COMRAM] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  4   12[COMRAM] unsigned char 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1911 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1912 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1913 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1914 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1915 ;;Total ram usage:       14 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; Hardware stack levels required when called: 2
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_readcard
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text9
  1926   0009DE                     __ptext9:
  1927                           	callstack 0
  1928   0009DE                     ___xxtofl:
  1929                           	callstack 27
  1930                           
  1931                           ;incstack = 0
  1932                           ;___xxtofl@sign stored from wreg
  1933   0009DE  6E15               	movwf	___xxtofl@sign^0,c
  1934   0009E0  5015               	movf	___xxtofl@sign^0,w,c
  1935   0009E2  B4D8               	btfsc	status,2,c
  1936   0009E4  EFF6  F004         	goto	u1241
  1937   0009E8  EFF8  F004         	goto	u1240
  1938   0009EC                     u1241:
  1939   0009EC  EF1A  F005         	goto	l1008
  1940   0009F0                     u1240:
  1941   0009F0  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  1942   0009F2  EFFF  F004         	goto	u1250
  1943   0009F6  EFFD  F004         	goto	u1251
  1944   0009FA                     u1251:
  1945   0009FA  EF1A  F005         	goto	l1008
  1946   0009FE                     u1250:
  1947   0009FE  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  1948   000A02  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  1949   000A06  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  1950   000A0A  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  1951   000A0E  1E11               	comf	??___xxtofl^0,f,c
  1952   000A10  1E12               	comf	(??___xxtofl+1)^0,f,c
  1953   000A12  1E13               	comf	(??___xxtofl+2)^0,f,c
  1954   000A14  1E14               	comf	(??___xxtofl+3)^0,f,c
  1955   000A16  2A11               	incf	??___xxtofl^0,f,c
  1956   000A18  0E00               	movlw	0
  1957   000A1A  2212               	addwfc	(??___xxtofl+1)^0,f,c
  1958   000A1C  2213               	addwfc	(??___xxtofl+2)^0,f,c
  1959   000A1E  2214               	addwfc	(??___xxtofl+3)^0,f,c
  1960   000A20  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  1961   000A24  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  1962   000A28  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  1963   000A2C  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  1964   000A30  EF22  F005         	goto	l1888
  1965   000A34                     l1008:
  1966   000A34  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  1967   000A38  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1968   000A3C  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1969   000A40  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1970   000A44                     l1888:
  1971   000A44  500D               	movf	___xxtofl@val^0,w,c
  1972   000A46  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  1973   000A48  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  1974   000A4A  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  1975   000A4C  A4D8               	btfss	status,2,c
  1976   000A4E  EF2B  F005         	goto	u1261
  1977   000A52  EF2D  F005         	goto	u1260
  1978   000A56                     u1261:
  1979   000A56  EF37  F005         	goto	l1894
  1980   000A5A                     u1260:
  1981   000A5A  0E00               	movlw	0
  1982   000A5C  6E0D               	movwf	?___xxtofl^0,c
  1983   000A5E  0E00               	movlw	0
  1984   000A60  6E0E               	movwf	(?___xxtofl+1)^0,c
  1985   000A62  0E00               	movlw	0
  1986   000A64  6E0F               	movwf	(?___xxtofl+2)^0,c
  1987   000A66  0E00               	movlw	0
  1988   000A68  6E10               	movwf	(?___xxtofl+3)^0,c
  1989   000A6A  EFC8  F005         	goto	l1011
  1990   000A6E                     l1894:
  1991   000A6E  0E96               	movlw	150
  1992   000A70  6E16               	movwf	___xxtofl@exp^0,c
  1993   000A72  EF41  F005         	goto	l1898
  1994   000A76                     l1896:
  1995   000A76  2A16               	incf	___xxtofl@exp^0,f,c
  1996   000A78  90D8               	bcf	status,0,c
  1997   000A7A  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  1998   000A7C  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  1999   000A7E  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  2000   000A80  3217               	rrcf	___xxtofl@arg^0,f,c
  2001   000A82                     l1898:
  2002   000A82  0E00               	movlw	0
  2003   000A84  1417               	andwf	___xxtofl@arg^0,w,c
  2004   000A86  6E11               	movwf	??___xxtofl^0,c
  2005   000A88  0E00               	movlw	0
  2006   000A8A  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  2007   000A8C  6E12               	movwf	(??___xxtofl+1)^0,c
  2008   000A8E  0E00               	movlw	0
  2009   000A90  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  2010   000A92  6E13               	movwf	(??___xxtofl+2)^0,c
  2011   000A94  0EFE               	movlw	254
  2012   000A96  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  2013   000A98  6E14               	movwf	(??___xxtofl+3)^0,c
  2014   000A9A  5011               	movf	??___xxtofl^0,w,c
  2015   000A9C  1012               	iorwf	(??___xxtofl+1)^0,w,c
  2016   000A9E  1013               	iorwf	(??___xxtofl+2)^0,w,c
  2017   000AA0  1014               	iorwf	(??___xxtofl+3)^0,w,c
  2018   000AA2  A4D8               	btfss	status,2,c
  2019   000AA4  EF56  F005         	goto	u1271
  2020   000AA8  EF58  F005         	goto	u1270
  2021   000AAC                     u1271:
  2022   000AAC  EF3B  F005         	goto	l1896
  2023   000AB0                     u1270:
  2024   000AB0  EF66  F005         	goto	l1015
  2025   000AB4                     l1900:
  2026   000AB4  2A16               	incf	___xxtofl@exp^0,f,c
  2027   000AB6  0E01               	movlw	1
  2028   000AB8  2617               	addwf	___xxtofl@arg^0,f,c
  2029   000ABA  0E00               	movlw	0
  2030   000ABC  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  2031   000ABE  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  2032   000AC0  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  2033   000AC2  90D8               	bcf	status,0,c
  2034   000AC4  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  2035   000AC6  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  2036   000AC8  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  2037   000ACA  3217               	rrcf	___xxtofl@arg^0,f,c
  2038   000ACC                     l1015:
  2039   000ACC  0E00               	movlw	0
  2040   000ACE  1417               	andwf	___xxtofl@arg^0,w,c
  2041   000AD0  6E11               	movwf	??___xxtofl^0,c
  2042   000AD2  0E00               	movlw	0
  2043   000AD4  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  2044   000AD6  6E12               	movwf	(??___xxtofl+1)^0,c
  2045   000AD8  0E00               	movlw	0
  2046   000ADA  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  2047   000ADC  6E13               	movwf	(??___xxtofl+2)^0,c
  2048   000ADE  0EFF               	movlw	255
  2049   000AE0  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  2050   000AE2  6E14               	movwf	(??___xxtofl+3)^0,c
  2051   000AE4  5011               	movf	??___xxtofl^0,w,c
  2052   000AE6  1012               	iorwf	(??___xxtofl+1)^0,w,c
  2053   000AE8  1013               	iorwf	(??___xxtofl+2)^0,w,c
  2054   000AEA  1014               	iorwf	(??___xxtofl+3)^0,w,c
  2055   000AEC  A4D8               	btfss	status,2,c
  2056   000AEE  EF7B  F005         	goto	u1281
  2057   000AF2  EF7D  F005         	goto	u1280
  2058   000AF6                     u1281:
  2059   000AF6  EF5A  F005         	goto	l1900
  2060   000AFA                     u1280:
  2061   000AFA  EF85  F005         	goto	l1908
  2062   000AFE                     l1906:
  2063   000AFE  0616               	decf	___xxtofl@exp^0,f,c
  2064   000B00  90D8               	bcf	status,0,c
  2065   000B02  3617               	rlcf	___xxtofl@arg^0,f,c
  2066   000B04  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  2067   000B06  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  2068   000B08  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  2069   000B0A                     l1908:
  2070   000B0A  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  2071   000B0C  EF8A  F005         	goto	u1291
  2072   000B10  EF8C  F005         	goto	u1290
  2073   000B14                     u1291:
  2074   000B14  EF94  F005         	goto	l1022
  2075   000B18                     u1290:
  2076   000B18  0E02               	movlw	2
  2077   000B1A  6016               	cpfslt	___xxtofl@exp^0,c
  2078   000B1C  EF92  F005         	goto	u1301
  2079   000B20  EF94  F005         	goto	u1300
  2080   000B24                     u1301:
  2081   000B24  EF7F  F005         	goto	l1906
  2082   000B28                     u1300:
  2083   000B28                     l1022:
  2084   000B28  B016               	btfsc	___xxtofl@exp^0,0,c
  2085   000B2A  EF99  F005         	goto	u1311
  2086   000B2E  EF9B  F005         	goto	u1310
  2087   000B32                     u1311:
  2088   000B32  EF9C  F005         	goto	l1914
  2089   000B36                     u1310:
  2090   000B36  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  2091   000B38                     l1914:
  2092   000B38  90D8               	bcf	status,0,c
  2093   000B3A  3216               	rrcf	___xxtofl@exp^0,f,c
  2094   000B3C  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  2095   000B40  6A12               	clrf	(??___xxtofl+1)^0,c
  2096   000B42  6A13               	clrf	(??___xxtofl+2)^0,c
  2097   000B44  6A14               	clrf	(??___xxtofl+3)^0,c
  2098   000B46  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  2099   000B4A  6A13               	clrf	(??___xxtofl+2)^0,c
  2100   000B4C  6A12               	clrf	(??___xxtofl+1)^0,c
  2101   000B4E  6A11               	clrf	??___xxtofl^0,c
  2102   000B50  5011               	movf	??___xxtofl^0,w,c
  2103   000B52  1217               	iorwf	___xxtofl@arg^0,f,c
  2104   000B54  5012               	movf	(??___xxtofl+1)^0,w,c
  2105   000B56  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  2106   000B58  5013               	movf	(??___xxtofl+2)^0,w,c
  2107   000B5A  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  2108   000B5C  5014               	movf	(??___xxtofl+3)^0,w,c
  2109   000B5E  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  2110   000B60  5015               	movf	___xxtofl@sign^0,w,c
  2111   000B62  B4D8               	btfsc	status,2,c
  2112   000B64  EFB6  F005         	goto	u1321
  2113   000B68  EFB8  F005         	goto	u1320
  2114   000B6C                     u1321:
  2115   000B6C  EFC0  F005         	goto	l1924
  2116   000B70                     u1320:
  2117   000B70  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  2118   000B72  EFBF  F005         	goto	u1330
  2119   000B76  EFBD  F005         	goto	u1331
  2120   000B7A                     u1331:
  2121   000B7A  EFC0  F005         	goto	l1924
  2122   000B7E                     u1330:
  2123   000B7E  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  2124   000B80                     l1924:
  2125   000B80  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  2126   000B84  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  2127   000B88  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  2128   000B8C  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  2129   000B90                     l1011:
  2130   000B90  0012               	return		;funcret
  2131   000B92                     __end_of___xxtofl:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function ___lwdiv *****************
  2135 ;; Defined at:
  2136 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  dividend        2    5[COMRAM] unsigned int 
  2139 ;;  divisor         2    7[COMRAM] unsigned int 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  quotient        2    9[COMRAM] unsigned int 
  2142 ;;  counter         1   11[COMRAM] unsigned char 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  2    5[COMRAM] unsigned int 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;Total ram usage:        7 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 2
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_readcard
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text10
  2167   000E38                     __ptext10:
  2168                           	callstack 0
  2169   000E38                     ___lwdiv:
  2170                           	callstack 27
  2171   000E38  0E00               	movlw	0
  2172   000E3A  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  2173   000E3C  0E00               	movlw	0
  2174   000E3E  6E0A               	movwf	___lwdiv@quotient^0,c
  2175   000E40  5008               	movf	___lwdiv@divisor^0,w,c
  2176   000E42  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2177   000E44  B4D8               	btfsc	status,2,c
  2178   000E46  EF27  F007         	goto	u1211
  2179   000E4A  EF29  F007         	goto	u1210
  2180   000E4E                     u1211:
  2181   000E4E  EF51  F007         	goto	l844
  2182   000E52                     u1210:
  2183   000E52  0E01               	movlw	1
  2184   000E54  6E0C               	movwf	___lwdiv@counter^0,c
  2185   000E56  EF31  F007         	goto	l1868
  2186   000E5A                     l1866:
  2187   000E5A  90D8               	bcf	status,0,c
  2188   000E5C  3608               	rlcf	___lwdiv@divisor^0,f,c
  2189   000E5E  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2190   000E60  2A0C               	incf	___lwdiv@counter^0,f,c
  2191   000E62                     l1868:
  2192   000E62  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  2193   000E64  EF36  F007         	goto	u1221
  2194   000E68  EF38  F007         	goto	u1220
  2195   000E6C                     u1221:
  2196   000E6C  EF2D  F007         	goto	l1866
  2197   000E70                     u1220:
  2198   000E70                     l1870:
  2199   000E70  90D8               	bcf	status,0,c
  2200   000E72  360A               	rlcf	___lwdiv@quotient^0,f,c
  2201   000E74  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2202   000E76  5008               	movf	___lwdiv@divisor^0,w,c
  2203   000E78  5C06               	subwf	___lwdiv@dividend^0,w,c
  2204   000E7A  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  2205   000E7C  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2206   000E7E  A0D8               	btfss	status,0,c
  2207   000E80  EF44  F007         	goto	u1231
  2208   000E84  EF46  F007         	goto	u1230
  2209   000E88                     u1231:
  2210   000E88  EF4B  F007         	goto	l1878
  2211   000E8C                     u1230:
  2212   000E8C  5008               	movf	___lwdiv@divisor^0,w,c
  2213   000E8E  5E06               	subwf	___lwdiv@dividend^0,f,c
  2214   000E90  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  2215   000E92  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2216   000E94  800A               	bsf	___lwdiv@quotient^0,0,c
  2217   000E96                     l1878:
  2218   000E96  90D8               	bcf	status,0,c
  2219   000E98  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2220   000E9A  3208               	rrcf	___lwdiv@divisor^0,f,c
  2221   000E9C  2E0C               	decfsz	___lwdiv@counter^0,f,c
  2222   000E9E  EF38  F007         	goto	l1870
  2223   000EA2                     l844:
  2224   000EA2  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  2225   000EA6  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2226   000EAA  0012               	return		;funcret
  2227   000EAC                     __end_of___lwdiv:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function ___flmul *****************
  2231 ;; Defined at:
  2232 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  b               4   26[COMRAM] unsigned int 
  2235 ;;  a               4   30[COMRAM] unsigned int 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  prod            4   45[COMRAM] struct .
  2238 ;;  grs             4   39[COMRAM] unsigned long 
  2239 ;;  temp            2   49[COMRAM] struct .
  2240 ;;  bexp            1   44[COMRAM] unsigned char 
  2241 ;;  aexp            1   43[COMRAM] unsigned char 
  2242 ;;  sign            1   38[COMRAM] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  4   26[COMRAM] unsigned char 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2, status,0, prodl, prodh
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2252 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2255 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2256 ;;Total ram usage:       25 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 2
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_readcard
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text11
  2267   0005B4                     __ptext11:
  2268                           	callstack 0
  2269   0005B4                     ___flmul:
  2270                           	callstack 27
  2271   0005B4  501E               	movf	(___flmul@b+3)^0,w,c
  2272   0005B6  0B80               	andlw	128
  2273   0005B8  6E27               	movwf	___flmul@sign^0,c
  2274   0005BA  501E               	movf	(___flmul@b+3)^0,w,c
  2275   0005BC  241E               	addwf	(___flmul@b+3)^0,w,c
  2276   0005BE  6E2D               	movwf	___flmul@bexp^0,c
  2277   0005C0  AE1D               	btfss	(___flmul@b+2)^0,7,c
  2278   0005C2  EFE5  F002         	goto	u971
  2279   0005C6  EFE7  F002         	goto	u970
  2280   0005CA                     u971:
  2281   0005CA  EFE8  F002         	goto	l1714
  2282   0005CE                     u970:
  2283   0005CE  802D               	bsf	___flmul@bexp^0,0,c
  2284   0005D0                     l1714:
  2285   0005D0  502D               	movf	___flmul@bexp^0,w,c
  2286   0005D2  B4D8               	btfsc	status,2,c
  2287   0005D4  EFEE  F002         	goto	u981
  2288   0005D8  EFF0  F002         	goto	u980
  2289   0005DC                     u981:
  2290   0005DC  EF03  F003         	goto	l1722
  2291   0005E0                     u980:
  2292   0005E0  282D               	incf	___flmul@bexp^0,w,c
  2293   0005E2  A4D8               	btfss	status,2,c
  2294   0005E4  EFF6  F002         	goto	u991
  2295   0005E8  EFF8  F002         	goto	u990
  2296   0005EC                     u991:
  2297   0005EC  EF00  F003         	goto	l1720
  2298   0005F0                     u990:
  2299   0005F0  0E00               	movlw	0
  2300   0005F2  6E1B               	movwf	___flmul@b^0,c
  2301   0005F4  0E00               	movlw	0
  2302   0005F6  6E1C               	movwf	(___flmul@b+1)^0,c
  2303   0005F8  0E00               	movlw	0
  2304   0005FA  6E1D               	movwf	(___flmul@b+2)^0,c
  2305   0005FC  0E00               	movlw	0
  2306   0005FE  6E1E               	movwf	(___flmul@b+3)^0,c
  2307   000600                     l1720:
  2308   000600  8E1D               	bsf	(___flmul@b+2)^0,7,c
  2309   000602  EF0B  F003         	goto	l1724
  2310   000606                     l1722:
  2311   000606  0E00               	movlw	0
  2312   000608  6E1B               	movwf	___flmul@b^0,c
  2313   00060A  0E00               	movlw	0
  2314   00060C  6E1C               	movwf	(___flmul@b+1)^0,c
  2315   00060E  0E00               	movlw	0
  2316   000610  6E1D               	movwf	(___flmul@b+2)^0,c
  2317   000612  0E00               	movlw	0
  2318   000614  6E1E               	movwf	(___flmul@b+3)^0,c
  2319   000616                     l1724:
  2320   000616  5022               	movf	(___flmul@a+3)^0,w,c
  2321   000618  0B80               	andlw	128
  2322   00061A  1A27               	xorwf	___flmul@sign^0,f,c
  2323   00061C  5022               	movf	(___flmul@a+3)^0,w,c
  2324   00061E  2422               	addwf	(___flmul@a+3)^0,w,c
  2325   000620  6E2C               	movwf	___flmul@aexp^0,c
  2326   000622  AE21               	btfss	(___flmul@a+2)^0,7,c
  2327   000624  EF16  F003         	goto	u1001
  2328   000628  EF18  F003         	goto	u1000
  2329   00062C                     u1001:
  2330   00062C  EF19  F003         	goto	l1732
  2331   000630                     u1000:
  2332   000630  802C               	bsf	___flmul@aexp^0,0,c
  2333   000632                     l1732:
  2334   000632  502C               	movf	___flmul@aexp^0,w,c
  2335   000634  B4D8               	btfsc	status,2,c
  2336   000636  EF1F  F003         	goto	u1011
  2337   00063A  EF21  F003         	goto	u1010
  2338   00063E                     u1011:
  2339   00063E  EF34  F003         	goto	l1740
  2340   000642                     u1010:
  2341   000642  282C               	incf	___flmul@aexp^0,w,c
  2342   000644  A4D8               	btfss	status,2,c
  2343   000646  EF27  F003         	goto	u1021
  2344   00064A  EF29  F003         	goto	u1020
  2345   00064E                     u1021:
  2346   00064E  EF31  F003         	goto	l1738
  2347   000652                     u1020:
  2348   000652  0E00               	movlw	0
  2349   000654  6E1F               	movwf	___flmul@a^0,c
  2350   000656  0E00               	movlw	0
  2351   000658  6E20               	movwf	(___flmul@a+1)^0,c
  2352   00065A  0E00               	movlw	0
  2353   00065C  6E21               	movwf	(___flmul@a+2)^0,c
  2354   00065E  0E00               	movlw	0
  2355   000660  6E22               	movwf	(___flmul@a+3)^0,c
  2356   000662                     l1738:
  2357   000662  8E21               	bsf	(___flmul@a+2)^0,7,c
  2358   000664  EF3C  F003         	goto	l967
  2359   000668                     l1740:
  2360   000668  0E00               	movlw	0
  2361   00066A  6E1F               	movwf	___flmul@a^0,c
  2362   00066C  0E00               	movlw	0
  2363   00066E  6E20               	movwf	(___flmul@a+1)^0,c
  2364   000670  0E00               	movlw	0
  2365   000672  6E21               	movwf	(___flmul@a+2)^0,c
  2366   000674  0E00               	movlw	0
  2367   000676  6E22               	movwf	(___flmul@a+3)^0,c
  2368   000678                     l967:
  2369   000678  502C               	movf	___flmul@aexp^0,w,c
  2370   00067A  B4D8               	btfsc	status,2,c
  2371   00067C  EF42  F003         	goto	u1031
  2372   000680  EF44  F003         	goto	u1030
  2373   000684                     u1031:
  2374   000684  EF4C  F003         	goto	l1744
  2375   000688                     u1030:
  2376   000688  502D               	movf	___flmul@bexp^0,w,c
  2377   00068A  A4D8               	btfss	status,2,c
  2378   00068C  EF4A  F003         	goto	u1041
  2379   000690  EF4C  F003         	goto	u1040
  2380   000694                     u1041:
  2381   000694  EF56  F003         	goto	l1748
  2382   000698                     u1040:
  2383   000698                     l1744:
  2384   000698  0E00               	movlw	0
  2385   00069A  6E1B               	movwf	?___flmul^0,c
  2386   00069C  0E00               	movlw	0
  2387   00069E  6E1C               	movwf	(?___flmul+1)^0,c
  2388   0006A0  0E00               	movlw	0
  2389   0006A2  6E1D               	movwf	(?___flmul+2)^0,c
  2390   0006A4  0E00               	movlw	0
  2391   0006A6  6E1E               	movwf	(?___flmul+3)^0,c
  2392   0006A8  EFEE  F004         	goto	l971
  2393   0006AC                     l1748:
  2394   0006AC  5021               	movf	(___flmul@a+2)^0,w,c
  2395   0006AE  021B               	mulwf	___flmul@b^0,c
  2396   0006B0  CFF3 F032          	movff	prodl,___flmul@temp
  2397   0006B4  CFF4 F033          	movff	prodh,___flmul@temp+1
  2398   0006B8  5032               	movf	___flmul@temp^0,w,c
  2399   0006BA  6E28               	movwf	___flmul@grs^0,c
  2400   0006BC  6A29               	clrf	(___flmul@grs+1)^0,c
  2401   0006BE  6A2A               	clrf	(___flmul@grs+2)^0,c
  2402   0006C0  6A2B               	clrf	(___flmul@grs+3)^0,c
  2403   0006C2  5033               	movf	(___flmul@temp+1)^0,w,c
  2404   0006C4  6E2E               	movwf	___flmul@prod^0,c
  2405   0006C6  6A2F               	clrf	(___flmul@prod+1)^0,c
  2406   0006C8  6A30               	clrf	(___flmul@prod+2)^0,c
  2407   0006CA  6A31               	clrf	(___flmul@prod+3)^0,c
  2408   0006CC  5020               	movf	(___flmul@a+1)^0,w,c
  2409   0006CE  021C               	mulwf	(___flmul@b+1)^0,c
  2410   0006D0  CFF3 F032          	movff	prodl,___flmul@temp
  2411   0006D4  CFF4 F033          	movff	prodh,___flmul@temp+1
  2412   0006D8  5032               	movf	___flmul@temp^0,w,c
  2413   0006DA  2628               	addwf	___flmul@grs^0,f,c
  2414   0006DC  0E00               	movlw	0
  2415   0006DE  2229               	addwfc	(___flmul@grs+1)^0,f,c
  2416   0006E0  222A               	addwfc	(___flmul@grs+2)^0,f,c
  2417   0006E2  222B               	addwfc	(___flmul@grs+3)^0,f,c
  2418   0006E4  5033               	movf	(___flmul@temp+1)^0,w,c
  2419   0006E6  262E               	addwf	___flmul@prod^0,f,c
  2420   0006E8  0E00               	movlw	0
  2421   0006EA  222F               	addwfc	(___flmul@prod+1)^0,f,c
  2422   0006EC  2230               	addwfc	(___flmul@prod+2)^0,f,c
  2423   0006EE  2231               	addwfc	(___flmul@prod+3)^0,f,c
  2424   0006F0  501F               	movf	___flmul@a^0,w,c
  2425   0006F2  021D               	mulwf	(___flmul@b+2)^0,c
  2426   0006F4  CFF3 F032          	movff	prodl,___flmul@temp
  2427   0006F8  CFF4 F033          	movff	prodh,___flmul@temp+1
  2428   0006FC  5032               	movf	___flmul@temp^0,w,c
  2429   0006FE  2628               	addwf	___flmul@grs^0,f,c
  2430   000700  0E00               	movlw	0
  2431   000702  2229               	addwfc	(___flmul@grs+1)^0,f,c
  2432   000704  222A               	addwfc	(___flmul@grs+2)^0,f,c
  2433   000706  222B               	addwfc	(___flmul@grs+3)^0,f,c
  2434   000708  5033               	movf	(___flmul@temp+1)^0,w,c
  2435   00070A  262E               	addwf	___flmul@prod^0,f,c
  2436   00070C  0E00               	movlw	0
  2437   00070E  222F               	addwfc	(___flmul@prod+1)^0,f,c
  2438   000710  2230               	addwfc	(___flmul@prod+2)^0,f,c
  2439   000712  2231               	addwfc	(___flmul@prod+3)^0,f,c
  2440   000714  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  2441   000718  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  2442   00071C  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  2443   000720  6A28               	clrf	___flmul@grs^0,c
  2444   000722  501F               	movf	___flmul@a^0,w,c
  2445   000724  021C               	mulwf	(___flmul@b+1)^0,c
  2446   000726  CFF3 F032          	movff	prodl,___flmul@temp
  2447   00072A  CFF4 F033          	movff	prodh,___flmul@temp+1
  2448   00072E  5032               	movf	___flmul@temp^0,w,c
  2449   000730  2628               	addwf	___flmul@grs^0,f,c
  2450   000732  5033               	movf	(___flmul@temp+1)^0,w,c
  2451   000734  2229               	addwfc	(___flmul@grs+1)^0,f,c
  2452   000736  0E00               	movlw	0
  2453   000738  222A               	addwfc	(___flmul@grs+2)^0,f,c
  2454   00073A  0E00               	movlw	0
  2455   00073C  222B               	addwfc	(___flmul@grs+3)^0,f,c
  2456   00073E  5020               	movf	(___flmul@a+1)^0,w,c
  2457   000740  021B               	mulwf	___flmul@b^0,c
  2458   000742  CFF3 F032          	movff	prodl,___flmul@temp
  2459   000746  CFF4 F033          	movff	prodh,___flmul@temp+1
  2460   00074A  5032               	movf	___flmul@temp^0,w,c
  2461   00074C  2628               	addwf	___flmul@grs^0,f,c
  2462   00074E  5033               	movf	(___flmul@temp+1)^0,w,c
  2463   000750  2229               	addwfc	(___flmul@grs+1)^0,f,c
  2464   000752  0E00               	movlw	0
  2465   000754  222A               	addwfc	(___flmul@grs+2)^0,f,c
  2466   000756  0E00               	movlw	0
  2467   000758  222B               	addwfc	(___flmul@grs+3)^0,f,c
  2468   00075A  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  2469   00075E  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  2470   000762  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  2471   000766  6A28               	clrf	___flmul@grs^0,c
  2472   000768  501F               	movf	___flmul@a^0,w,c
  2473   00076A  021B               	mulwf	___flmul@b^0,c
  2474   00076C  CFF3 F032          	movff	prodl,___flmul@temp
  2475   000770  CFF4 F033          	movff	prodh,___flmul@temp+1
  2476   000774  5032               	movf	___flmul@temp^0,w,c
  2477   000776  2628               	addwf	___flmul@grs^0,f,c
  2478   000778  5033               	movf	(___flmul@temp+1)^0,w,c
  2479   00077A  2229               	addwfc	(___flmul@grs+1)^0,f,c
  2480   00077C  0E00               	movlw	0
  2481   00077E  222A               	addwfc	(___flmul@grs+2)^0,f,c
  2482   000780  0E00               	movlw	0
  2483   000782  222B               	addwfc	(___flmul@grs+3)^0,f,c
  2484   000784  5021               	movf	(___flmul@a+2)^0,w,c
  2485   000786  021C               	mulwf	(___flmul@b+1)^0,c
  2486   000788  CFF3 F032          	movff	prodl,___flmul@temp
  2487   00078C  CFF4 F033          	movff	prodh,___flmul@temp+1
  2488   000790  5032               	movf	___flmul@temp^0,w,c
  2489   000792  262E               	addwf	___flmul@prod^0,f,c
  2490   000794  5033               	movf	(___flmul@temp+1)^0,w,c
  2491   000796  222F               	addwfc	(___flmul@prod+1)^0,f,c
  2492   000798  0E00               	movlw	0
  2493   00079A  2230               	addwfc	(___flmul@prod+2)^0,f,c
  2494   00079C  0E00               	movlw	0
  2495   00079E  2231               	addwfc	(___flmul@prod+3)^0,f,c
  2496   0007A0  5020               	movf	(___flmul@a+1)^0,w,c
  2497   0007A2  021D               	mulwf	(___flmul@b+2)^0,c
  2498   0007A4  CFF3 F032          	movff	prodl,___flmul@temp
  2499   0007A8  CFF4 F033          	movff	prodh,___flmul@temp+1
  2500   0007AC  5032               	movf	___flmul@temp^0,w,c
  2501   0007AE  262E               	addwf	___flmul@prod^0,f,c
  2502   0007B0  5033               	movf	(___flmul@temp+1)^0,w,c
  2503   0007B2  222F               	addwfc	(___flmul@prod+1)^0,f,c
  2504   0007B4  0E00               	movlw	0
  2505   0007B6  2230               	addwfc	(___flmul@prod+2)^0,f,c
  2506   0007B8  0E00               	movlw	0
  2507   0007BA  2231               	addwfc	(___flmul@prod+3)^0,f,c
  2508   0007BC  5021               	movf	(___flmul@a+2)^0,w,c
  2509   0007BE  021D               	mulwf	(___flmul@b+2)^0,c
  2510   0007C0  CFF3 F032          	movff	prodl,___flmul@temp
  2511   0007C4  CFF4 F033          	movff	prodh,___flmul@temp+1
  2512   0007C8  5032               	movf	___flmul@temp^0,w,c
  2513   0007CA  6E23               	movwf	??___flmul^0,c
  2514   0007CC  5033               	movf	(___flmul@temp+1)^0,w,c
  2515   0007CE  6E24               	movwf	(??___flmul+1)^0,c
  2516   0007D0  6A25               	clrf	(??___flmul+2)^0,c
  2517   0007D2  6A26               	clrf	(??___flmul+3)^0,c
  2518   0007D4  C025  F026         	movff	??___flmul+2,??___flmul+3
  2519   0007D8  C024  F025         	movff	??___flmul+1,??___flmul+2
  2520   0007DC  C023  F024         	movff	??___flmul,??___flmul+1
  2521   0007E0  6A23               	clrf	??___flmul^0,c
  2522   0007E2  5023               	movf	??___flmul^0,w,c
  2523   0007E4  262E               	addwf	___flmul@prod^0,f,c
  2524   0007E6  5024               	movf	(??___flmul+1)^0,w,c
  2525   0007E8  222F               	addwfc	(___flmul@prod+1)^0,f,c
  2526   0007EA  5025               	movf	(??___flmul+2)^0,w,c
  2527   0007EC  2230               	addwfc	(___flmul@prod+2)^0,f,c
  2528   0007EE  5026               	movf	(??___flmul+3)^0,w,c
  2529   0007F0  2231               	addwfc	(___flmul@prod+3)^0,f,c
  2530   0007F2  C028  F023         	movff	___flmul@grs,??___flmul
  2531   0007F6  C029  F024         	movff	___flmul@grs+1,??___flmul+1
  2532   0007FA  C02A  F025         	movff	___flmul@grs+2,??___flmul+2
  2533   0007FE  C02B  F026         	movff	___flmul@grs+3,??___flmul+3
  2534   000802  0E19               	movlw	25
  2535   000804  EF09  F004         	goto	u1050
  2536   000808                     u1055:
  2537   000808  90D8               	bcf	status,0,c
  2538   00080A  3226               	rrcf	(??___flmul+3)^0,f,c
  2539   00080C  3225               	rrcf	(??___flmul+2)^0,f,c
  2540   00080E  3224               	rrcf	(??___flmul+1)^0,f,c
  2541   000810  3223               	rrcf	??___flmul^0,f,c
  2542   000812                     u1050:
  2543   000812  2EE8               	decfsz	wreg,f,c
  2544   000814  EF04  F004         	goto	u1055
  2545   000818  5023               	movf	??___flmul^0,w,c
  2546   00081A  262E               	addwf	___flmul@prod^0,f,c
  2547   00081C  5024               	movf	(??___flmul+1)^0,w,c
  2548   00081E  222F               	addwfc	(___flmul@prod+1)^0,f,c
  2549   000820  5025               	movf	(??___flmul+2)^0,w,c
  2550   000822  2230               	addwfc	(___flmul@prod+2)^0,f,c
  2551   000824  5026               	movf	(??___flmul+3)^0,w,c
  2552   000826  2231               	addwfc	(___flmul@prod+3)^0,f,c
  2553   000828  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  2554   00082C  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  2555   000830  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  2556   000834  6A28               	clrf	___flmul@grs^0,c
  2557   000836  502C               	movf	___flmul@aexp^0,w,c
  2558   000838  C02D  F023         	movff	___flmul@bexp,??___flmul
  2559   00083C  6A24               	clrf	(??___flmul+1)^0,c
  2560   00083E  2623               	addwf	??___flmul^0,f,c
  2561   000840  0E00               	movlw	0
  2562   000842  2224               	addwfc	(??___flmul+1)^0,f,c
  2563   000844  0E82               	movlw	130
  2564   000846  2423               	addwf	??___flmul^0,w,c
  2565   000848  6E32               	movwf	___flmul@temp^0,c
  2566   00084A  0EFF               	movlw	255
  2567   00084C  2024               	addwfc	(??___flmul+1)^0,w,c
  2568   00084E  6E33               	movwf	(___flmul@temp+1)^0,c
  2569   000850  EF3F  F004         	goto	l1796
  2570   000854                     l1790:
  2571   000854  90D8               	bcf	status,0,c
  2572   000856  362E               	rlcf	___flmul@prod^0,f,c
  2573   000858  362F               	rlcf	(___flmul@prod+1)^0,f,c
  2574   00085A  3630               	rlcf	(___flmul@prod+2)^0,f,c
  2575   00085C  3631               	rlcf	(___flmul@prod+3)^0,f,c
  2576   00085E  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  2577   000860  EF34  F004         	goto	u1061
  2578   000864  EF36  F004         	goto	u1060
  2579   000868                     u1061:
  2580   000868  EF37  F004         	goto	l974
  2581   00086C                     u1060:
  2582   00086C  802E               	bsf	___flmul@prod^0,0,c
  2583   00086E                     l974:
  2584   00086E  90D8               	bcf	status,0,c
  2585   000870  3628               	rlcf	___flmul@grs^0,f,c
  2586   000872  3629               	rlcf	(___flmul@grs+1)^0,f,c
  2587   000874  362A               	rlcf	(___flmul@grs+2)^0,f,c
  2588   000876  362B               	rlcf	(___flmul@grs+3)^0,f,c
  2589   000878  0632               	decf	___flmul@temp^0,f,c
  2590   00087A  A0D8               	btfss	status,0,c
  2591   00087C  0633               	decf	(___flmul@temp+1)^0,f,c
  2592   00087E                     l1796:
  2593   00087E  AE30               	btfss	(___flmul@prod+2)^0,7,c
  2594   000880  EF44  F004         	goto	u1071
  2595   000884  EF46  F004         	goto	u1070
  2596   000888                     u1071:
  2597   000888  EF2A  F004         	goto	l1790
  2598   00088C                     u1070:
  2599   00088C  0E00               	movlw	0
  2600   00088E  6E2C               	movwf	___flmul@aexp^0,c
  2601   000890  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  2602   000892  EF4D  F004         	goto	u1081
  2603   000896  EF4F  F004         	goto	u1080
  2604   00089A                     u1081:
  2605   00089A  EF73  F004         	goto	l976
  2606   00089E                     u1080:
  2607   00089E  0EFF               	movlw	255
  2608   0008A0  1428               	andwf	___flmul@grs^0,w,c
  2609   0008A2  6E23               	movwf	??___flmul^0,c
  2610   0008A4  0EFF               	movlw	255
  2611   0008A6  1429               	andwf	(___flmul@grs+1)^0,w,c
  2612   0008A8  6E24               	movwf	(??___flmul+1)^0,c
  2613   0008AA  0EFF               	movlw	255
  2614   0008AC  142A               	andwf	(___flmul@grs+2)^0,w,c
  2615   0008AE  6E25               	movwf	(??___flmul+2)^0,c
  2616   0008B0  0E7F               	movlw	127
  2617   0008B2  142B               	andwf	(___flmul@grs+3)^0,w,c
  2618   0008B4  6E26               	movwf	(??___flmul+3)^0,c
  2619   0008B6  5023               	movf	??___flmul^0,w,c
  2620   0008B8  1024               	iorwf	(??___flmul+1)^0,w,c
  2621   0008BA  1025               	iorwf	(??___flmul+2)^0,w,c
  2622   0008BC  1026               	iorwf	(??___flmul+3)^0,w,c
  2623   0008BE  B4D8               	btfsc	status,2,c
  2624   0008C0  EF64  F004         	goto	u1091
  2625   0008C4  EF66  F004         	goto	u1090
  2626   0008C8                     u1091:
  2627   0008C8  EF6A  F004         	goto	l977
  2628   0008CC                     u1090:
  2629   0008CC                     l1804:
  2630   0008CC  0E01               	movlw	1
  2631   0008CE  6E2C               	movwf	___flmul@aexp^0,c
  2632   0008D0  EF73  F004         	goto	l976
  2633   0008D4                     l977:
  2634   0008D4  A02E               	btfss	___flmul@prod^0,0,c
  2635   0008D6  EF6F  F004         	goto	u1101
  2636   0008DA  EF71  F004         	goto	u1100
  2637   0008DE                     u1101:
  2638   0008DE  EF73  F004         	goto	l976
  2639   0008E2                     u1100:
  2640   0008E2  EF66  F004         	goto	l1804
  2641   0008E6                     l976:
  2642   0008E6  502C               	movf	___flmul@aexp^0,w,c
  2643   0008E8  B4D8               	btfsc	status,2,c
  2644   0008EA  EF79  F004         	goto	u1111
  2645   0008EE  EF7B  F004         	goto	u1110
  2646   0008F2                     u1111:
  2647   0008F2  EF9F  F004         	goto	l1816
  2648   0008F6                     u1110:
  2649   0008F6  0E01               	movlw	1
  2650   0008F8  262E               	addwf	___flmul@prod^0,f,c
  2651   0008FA  0E00               	movlw	0
  2652   0008FC  222F               	addwfc	(___flmul@prod+1)^0,f,c
  2653   0008FE  2230               	addwfc	(___flmul@prod+2)^0,f,c
  2654   000900  2231               	addwfc	(___flmul@prod+3)^0,f,c
  2655   000902  A031               	btfss	(___flmul@prod+3)^0,0,c
  2656   000904  EF86  F004         	goto	u1121
  2657   000908  EF88  F004         	goto	u1120
  2658   00090C                     u1121:
  2659   00090C  EF9F  F004         	goto	l1816
  2660   000910                     u1120:
  2661   000910  C02E  F023         	movff	___flmul@prod,??___flmul
  2662   000914  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
  2663   000918  C030  F025         	movff	___flmul@prod+2,??___flmul+2
  2664   00091C  C031  F026         	movff	___flmul@prod+3,??___flmul+3
  2665   000920  3426               	rlcf	(??___flmul+3)^0,w,c
  2666   000922  3226               	rrcf	(??___flmul+3)^0,f,c
  2667   000924  3225               	rrcf	(??___flmul+2)^0,f,c
  2668   000926  3224               	rrcf	(??___flmul+1)^0,f,c
  2669   000928  3223               	rrcf	??___flmul^0,f,c
  2670   00092A  C023  F02E         	movff	??___flmul,___flmul@prod
  2671   00092E  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
  2672   000932  C025  F030         	movff	??___flmul+2,___flmul@prod+2
  2673   000936  C026  F031         	movff	??___flmul+3,___flmul@prod+3
  2674   00093A  4A32               	infsnz	___flmul@temp^0,f,c
  2675   00093C  2A33               	incf	(___flmul@temp+1)^0,f,c
  2676   00093E                     l1816:
  2677   00093E  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  2678   000940  EFAA  F004         	goto	u1131
  2679   000944  5033               	movf	(___flmul@temp+1)^0,w,c
  2680   000946  E108               	bnz	u1130
  2681   000948  2832               	incf	___flmul@temp^0,w,c
  2682   00094A  A0D8               	btfss	status,0,c
  2683   00094C  EFAA  F004         	goto	u1131
  2684   000950  EFAC  F004         	goto	u1130
  2685   000954                     u1131:
  2686   000954  EFB6  F004         	goto	l1820
  2687   000958                     u1130:
  2688   000958  0E00               	movlw	0
  2689   00095A  6E2E               	movwf	___flmul@prod^0,c
  2690   00095C  0E00               	movlw	0
  2691   00095E  6E2F               	movwf	(___flmul@prod+1)^0,c
  2692   000960  0E80               	movlw	128
  2693   000962  6E30               	movwf	(___flmul@prod+2)^0,c
  2694   000964  0E7F               	movlw	127
  2695   000966  6E31               	movwf	(___flmul@prod+3)^0,c
  2696   000968  EFE4  F004         	goto	l1832
  2697   00096C                     l1820:
  2698   00096C  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  2699   00096E  EFC3  F004         	goto	u1140
  2700   000972  5033               	movf	(___flmul@temp+1)^0,w,c
  2701   000974  E106               	bnz	u1141
  2702   000976  0432               	decf	___flmul@temp^0,w,c
  2703   000978  B0D8               	btfsc	status,0,c
  2704   00097A  EFC1  F004         	goto	u1141
  2705   00097E  EFC3  F004         	goto	u1140
  2706   000982                     u1141:
  2707   000982  EFCF  F004         	goto	l984
  2708   000986                     u1140:
  2709   000986  0E00               	movlw	0
  2710   000988  6E2E               	movwf	___flmul@prod^0,c
  2711   00098A  0E00               	movlw	0
  2712   00098C  6E2F               	movwf	(___flmul@prod+1)^0,c
  2713   00098E  0E00               	movlw	0
  2714   000990  6E30               	movwf	(___flmul@prod+2)^0,c
  2715   000992  0E00               	movlw	0
  2716   000994  6E31               	movwf	(___flmul@prod+3)^0,c
  2717   000996  0E00               	movlw	0
  2718   000998  6E27               	movwf	___flmul@sign^0,c
  2719   00099A  EFE4  F004         	goto	l1832
  2720   00099E                     l984:
  2721   00099E  C032  F02D         	movff	___flmul@temp,___flmul@bexp
  2722   0009A2  0EFF               	movlw	255
  2723   0009A4  162E               	andwf	___flmul@prod^0,f,c
  2724   0009A6  0EFF               	movlw	255
  2725   0009A8  162F               	andwf	(___flmul@prod+1)^0,f,c
  2726   0009AA  0E7F               	movlw	127
  2727   0009AC  1630               	andwf	(___flmul@prod+2)^0,f,c
  2728   0009AE  0E00               	movlw	0
  2729   0009B0  1631               	andwf	(___flmul@prod+3)^0,f,c
  2730   0009B2  A02D               	btfss	___flmul@bexp^0,0,c
  2731   0009B4  EFDE  F004         	goto	u1151
  2732   0009B8  EFE0  F004         	goto	u1150
  2733   0009BC                     u1151:
  2734   0009BC  EFE1  F004         	goto	l1830
  2735   0009C0                     u1150:
  2736   0009C0  8E30               	bsf	(___flmul@prod+2)^0,7,c
  2737   0009C2                     l1830:
  2738   0009C2  90D8               	bcf	status,0,c
  2739   0009C4  302D               	rrcf	___flmul@bexp^0,w,c
  2740   0009C6  6E31               	movwf	(___flmul@prod+3)^0,c
  2741   0009C8                     l1832:
  2742   0009C8  5027               	movf	___flmul@sign^0,w,c
  2743   0009CA  1231               	iorwf	(___flmul@prod+3)^0,f,c
  2744   0009CC  C02E  F01B         	movff	___flmul@prod,?___flmul
  2745   0009D0  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
  2746   0009D4  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
  2747   0009D8  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
  2748   0009DC                     l971:
  2749   0009DC  0012               	return		;funcret
  2750   0009DE                     __end_of___flmul:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function ___flge *****************
  2754 ;; Defined at:
  2755 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  ff1             4   51[COMRAM] unsigned char 
  2758 ;;  ff2             4   55[COMRAM] unsigned char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;		None               void
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2770 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;Total ram usage:       12 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 2
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_readcard
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text12
  2785   000CBC                     __ptext12:
  2786                           	callstack 0
  2787   000CBC                     ___flge:
  2788                           	callstack 27
  2789   000CBC  0E00               	movlw	0
  2790   000CBE  1434               	andwf	___flge@ff1^0,w,c
  2791   000CC0  6E3C               	movwf	??___flge^0,c
  2792   000CC2  0E00               	movlw	0
  2793   000CC4  1435               	andwf	(___flge@ff1+1)^0,w,c
  2794   000CC6  6E3D               	movwf	(??___flge+1)^0,c
  2795   000CC8  0E80               	movlw	128
  2796   000CCA  1436               	andwf	(___flge@ff1+2)^0,w,c
  2797   000CCC  6E3E               	movwf	(??___flge+2)^0,c
  2798   000CCE  0E7F               	movlw	127
  2799   000CD0  1437               	andwf	(___flge@ff1+3)^0,w,c
  2800   000CD2  6E3F               	movwf	(??___flge+3)^0,c
  2801   000CD4  503C               	movf	??___flge^0,w,c
  2802   000CD6  103D               	iorwf	(??___flge+1)^0,w,c
  2803   000CD8  103E               	iorwf	(??___flge+2)^0,w,c
  2804   000CDA  103F               	iorwf	(??___flge+3)^0,w,c
  2805   000CDC  A4D8               	btfss	status,2,c
  2806   000CDE  EF73  F006         	goto	u1161
  2807   000CE2  EF75  F006         	goto	u1160
  2808   000CE6                     u1161:
  2809   000CE6  EF7D  F006         	goto	l1842
  2810   000CEA                     u1160:
  2811   000CEA  0E00               	movlw	0
  2812   000CEC  6E34               	movwf	___flge@ff1^0,c
  2813   000CEE  0E00               	movlw	0
  2814   000CF0  6E35               	movwf	(___flge@ff1+1)^0,c
  2815   000CF2  0E00               	movlw	0
  2816   000CF4  6E36               	movwf	(___flge@ff1+2)^0,c
  2817   000CF6  0E00               	movlw	0
  2818   000CF8  6E37               	movwf	(___flge@ff1+3)^0,c
  2819   000CFA                     l1842:
  2820   000CFA  0E00               	movlw	0
  2821   000CFC  1438               	andwf	___flge@ff2^0,w,c
  2822   000CFE  6E3C               	movwf	??___flge^0,c
  2823   000D00  0E00               	movlw	0
  2824   000D02  1439               	andwf	(___flge@ff2+1)^0,w,c
  2825   000D04  6E3D               	movwf	(??___flge+1)^0,c
  2826   000D06  0E80               	movlw	128
  2827   000D08  143A               	andwf	(___flge@ff2+2)^0,w,c
  2828   000D0A  6E3E               	movwf	(??___flge+2)^0,c
  2829   000D0C  0E7F               	movlw	127
  2830   000D0E  143B               	andwf	(___flge@ff2+3)^0,w,c
  2831   000D10  6E3F               	movwf	(??___flge+3)^0,c
  2832   000D12  503C               	movf	??___flge^0,w,c
  2833   000D14  103D               	iorwf	(??___flge+1)^0,w,c
  2834   000D16  103E               	iorwf	(??___flge+2)^0,w,c
  2835   000D18  103F               	iorwf	(??___flge+3)^0,w,c
  2836   000D1A  A4D8               	btfss	status,2,c
  2837   000D1C  EF92  F006         	goto	u1171
  2838   000D20  EF94  F006         	goto	u1170
  2839   000D24                     u1171:
  2840   000D24  EF9C  F006         	goto	l1846
  2841   000D28                     u1170:
  2842   000D28  0E00               	movlw	0
  2843   000D2A  6E38               	movwf	___flge@ff2^0,c
  2844   000D2C  0E00               	movlw	0
  2845   000D2E  6E39               	movwf	(___flge@ff2+1)^0,c
  2846   000D30  0E00               	movlw	0
  2847   000D32  6E3A               	movwf	(___flge@ff2+2)^0,c
  2848   000D34  0E00               	movlw	0
  2849   000D36  6E3B               	movwf	(___flge@ff2+3)^0,c
  2850   000D38                     l1846:
  2851   000D38  AE37               	btfss	(___flge@ff1+3)^0,7,c
  2852   000D3A  EFA1  F006         	goto	u1181
  2853   000D3E  EFA3  F006         	goto	u1180
  2854   000D42                     u1181:
  2855   000D42  EFAC  F006         	goto	l1850
  2856   000D46                     u1180:
  2857   000D46  6C34               	negf	___flge@ff1^0,c
  2858   000D48  1E35               	comf	(___flge@ff1+1)^0,f,c
  2859   000D4A  B0D8               	btfsc	status,0,c
  2860   000D4C  2A35               	incf	(___flge@ff1+1)^0,f,c
  2861   000D4E  1E36               	comf	(___flge@ff1+2)^0,f,c
  2862   000D50  B0D8               	btfsc	status,0,c
  2863   000D52  2A36               	incf	(___flge@ff1+2)^0,f,c
  2864   000D54  0E80               	movlw	128
  2865   000D56  5637               	subfwb	(___flge@ff1+3)^0,f,c
  2866   000D58                     l1850:
  2867   000D58  AE3B               	btfss	(___flge@ff2+3)^0,7,c
  2868   000D5A  EFB1  F006         	goto	u1191
  2869   000D5E  EFB3  F006         	goto	u1190
  2870   000D62                     u1191:
  2871   000D62  EFBC  F006         	goto	l618
  2872   000D66                     u1190:
  2873   000D66  6C38               	negf	___flge@ff2^0,c
  2874   000D68  1E39               	comf	(___flge@ff2+1)^0,f,c
  2875   000D6A  B0D8               	btfsc	status,0,c
  2876   000D6C  2A39               	incf	(___flge@ff2+1)^0,f,c
  2877   000D6E  1E3A               	comf	(___flge@ff2+2)^0,f,c
  2878   000D70  B0D8               	btfsc	status,0,c
  2879   000D72  2A3A               	incf	(___flge@ff2+2)^0,f,c
  2880   000D74  0E80               	movlw	128
  2881   000D76  563B               	subfwb	(___flge@ff2+3)^0,f,c
  2882   000D78                     l618:
  2883   000D78  0E00               	movlw	0
  2884   000D7A  1A34               	xorwf	___flge@ff1^0,f,c
  2885   000D7C  0E00               	movlw	0
  2886   000D7E  1A35               	xorwf	(___flge@ff1+1)^0,f,c
  2887   000D80  0E00               	movlw	0
  2888   000D82  1A36               	xorwf	(___flge@ff1+2)^0,f,c
  2889   000D84  0E80               	movlw	128
  2890   000D86  1A37               	xorwf	(___flge@ff1+3)^0,f,c
  2891   000D88  0E00               	movlw	0
  2892   000D8A  1A38               	xorwf	___flge@ff2^0,f,c
  2893   000D8C  0E00               	movlw	0
  2894   000D8E  1A39               	xorwf	(___flge@ff2+1)^0,f,c
  2895   000D90  0E00               	movlw	0
  2896   000D92  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
  2897   000D94  0E80               	movlw	128
  2898   000D96  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
  2899   000D98  5038               	movf	___flge@ff2^0,w,c
  2900   000D9A  5C34               	subwf	___flge@ff1^0,w,c
  2901   000D9C  5039               	movf	(___flge@ff2+1)^0,w,c
  2902   000D9E  5835               	subwfb	(___flge@ff1+1)^0,w,c
  2903   000DA0  503A               	movf	(___flge@ff2+2)^0,w,c
  2904   000DA2  5836               	subwfb	(___flge@ff1+2)^0,w,c
  2905   000DA4  503B               	movf	(___flge@ff2+3)^0,w,c
  2906   000DA6  5837               	subwfb	(___flge@ff1+3)^0,w,c
  2907   000DA8  B0D8               	btfsc	status,0,c
  2908   000DAA  EFD9  F006         	goto	u1201
  2909   000DAE  EFDB  F006         	goto	u1200
  2910   000DB2                     u1201:
  2911   000DB2  EFDE  F006         	goto	l1856
  2912   000DB6                     u1200:
  2913   000DB6  90D8               	bcf	status,0,c
  2914   000DB8  EFDF  F006         	goto	l623
  2915   000DBC                     l1856:
  2916   000DBC  80D8               	bsf	status,0,c
  2917   000DBE                     l623:
  2918   000DBE  0012               	return		;funcret
  2919   000DC0                     __end_of___flge:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _initUSART4 *****************
  2923 ;; Defined at:
  2924 ;;		line 5 in file "serial.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;Total ram usage:        0 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 2
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text13
  2953   0011E8                     __ptext13:
  2954                           	callstack 0
  2955   0011E8                     _initUSART4:
  2956                           	callstack 28
  2957   0011E8                     
  2958                           ;serial.c: 6:     RC0PPS = 0x12;
  2959   0011E8  0E12               	movlw	18
  2960   0011EA  010E               	movlb	14	; () banked
  2961   0011EC  6F62               	movwf	98,b	;volatile
  2962                           
  2963                           ;serial.c: 7:     RX4PPS = 0x11;
  2964   0011EE  0E11               	movlw	17
  2965   0011F0  6F15               	movwf	21,b	;volatile
  2966   0011F2                     
  2967                           ; BSR set to: 14
  2968                           ;serial.c: 9:     BAUD4CONbits.BRG16 = 0;
  2969   0011F2  97E9               	bcf	233,3,b	;volatile
  2970   0011F4                     
  2971                           ; BSR set to: 14
  2972                           ;serial.c: 10:     TX4STAbits.BRGH = 0;
  2973   0011F4  95E8               	bcf	232,2,b	;volatile
  2974                           
  2975                           ;serial.c: 11:     SP4BRGL = 51;
  2976   0011F6  0E33               	movlw	51
  2977   0011F8  6FE5               	movwf	229,b	;volatile
  2978                           
  2979                           ;serial.c: 12:     SP4BRGH = 0;
  2980   0011FA  0E00               	movlw	0
  2981   0011FC  6FE6               	movwf	230,b	;volatile
  2982   0011FE                     
  2983                           ; BSR set to: 14
  2984                           ;serial.c: 14:     RC4STAbits.CREN = 1;
  2985   0011FE  89E7               	bsf	231,4,b	;volatile
  2986   001200                     
  2987                           ; BSR set to: 14
  2988                           ;serial.c: 15:     TX4STAbits.TXEN = 1;
  2989   001200  8BE8               	bsf	232,5,b	;volatile
  2990   001202                     
  2991                           ; BSR set to: 14
  2992                           ;serial.c: 16:     RC4STAbits.SPEN = 1;
  2993   001202  8FE7               	bsf	231,7,b	;volatile
  2994   001204                     
  2995                           ; BSR set to: 14
  2996   001204  0012               	return		;funcret
  2997   001206                     __end_of_initUSART4:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function _color_click_init *****************
  3001 ;; Defined at:
  3002 ;;		line 5 in file "color.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;Total ram usage:        1 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 5
  3023 ;; This function calls:
  3024 ;;		_I2C_2_Master_Init
  3025 ;;		_color_writetoaddr
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text14
  3032   0010C2                     __ptext14:
  3033                           	callstack 0
  3034   0010C2                     _color_click_init:
  3035                           	callstack 25
  3036   0010C2                     
  3037                           ;color.c: 8:     I2C_2_Master_Init();
  3038   0010C2  EC91  F008         	call	_I2C_2_Master_Init	;wreg free
  3039   0010C6                     
  3040                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3041   0010C6  0E01               	movlw	1
  3042   0010C8  6E08               	movwf	color_writetoaddr@value^0,c
  3043   0010CA  0E00               	movlw	0
  3044   0010CC  ECE4  F008         	call	_color_writetoaddr
  3045   0010D0                     
  3046                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3047   0010D0  0E3F               	movlw	63
  3048   0010D2  6E0A               	movwf	??_color_click_init^0,c
  3049   0010D4  0E55               	movlw	85
  3050   0010D6                     u1787:
  3051   0010D6  2EE8               	decfsz	wreg,f,c
  3052   0010D8  D7FE               	bra	u1787
  3053   0010DA  2E0A               	decfsz	??_color_click_init^0,f,c
  3054   0010DC  D7FC               	bra	u1787
  3055   0010DE  F000               	nop	
  3056   0010E0                     
  3057                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3058   0010E0  0E03               	movlw	3
  3059   0010E2  6E08               	movwf	color_writetoaddr@value^0,c
  3060   0010E4  0E00               	movlw	0
  3061   0010E6  ECE4  F008         	call	_color_writetoaddr
  3062   0010EA                     
  3063                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3064   0010EA  0ED5               	movlw	213
  3065   0010EC  6E08               	movwf	color_writetoaddr@value^0,c
  3066   0010EE  0E01               	movlw	1
  3067   0010F0  ECE4  F008         	call	_color_writetoaddr
  3068   0010F4  0012               	return		;funcret
  3069   0010F6                     __end_of_color_click_init:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _color_writetoaddr *****************
  3073 ;; Defined at:
  3074 ;;		line 21 in file "color.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  address         1    wreg     unsigned char 
  3077 ;;  value           1    7[COMRAM] unsigned char 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  address         1    8[COMRAM] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3089 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;Total ram usage:        2 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; Hardware stack levels required when called: 4
  3096 ;; This function calls:
  3097 ;;		_I2C_2_Master_Start
  3098 ;;		_I2C_2_Master_Stop
  3099 ;;		_I2C_2_Master_Write
  3100 ;; This function is called by:
  3101 ;;		_color_click_init
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text15
  3106   0011C8                     __ptext15:
  3107                           	callstack 0
  3108   0011C8                     _color_writetoaddr:
  3109                           	callstack 25
  3110                           
  3111                           ;incstack = 0
  3112                           ;color_writetoaddr@address stored from wreg
  3113   0011C8  6E09               	movwf	color_writetoaddr@address^0,c
  3114   0011CA                     
  3115                           ;color.c: 22:     I2C_2_Master_Start();
  3116   0011CA  EC2E  F009         	call	_I2C_2_Master_Start	;wreg free
  3117                           
  3118                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3119   0011CE  0E52               	movlw	82
  3120   0011D0  EC1E  F009         	call	_I2C_2_Master_Write
  3121                           
  3122                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3123   0011D4  5009               	movf	color_writetoaddr@address^0,w,c
  3124   0011D6  0980               	iorlw	128
  3125   0011D8  EC1E  F009         	call	_I2C_2_Master_Write
  3126                           
  3127                           ;color.c: 25:     I2C_2_Master_Write(value);
  3128   0011DC  5008               	movf	color_writetoaddr@value^0,w,c
  3129   0011DE  EC1E  F009         	call	_I2C_2_Master_Write
  3130                           
  3131                           ;color.c: 26:     I2C_2_Master_Stop();
  3132   0011E2  EC29  F009         	call	_I2C_2_Master_Stop	;wreg free
  3133   0011E6  0012               	return		;funcret
  3134   0011E8                     __end_of_color_writetoaddr:
  3135                           	callstack 0
  3136                           
  3137 ;; *************** function _I2C_2_Master_Write *****************
  3138 ;; Defined at:
  3139 ;;		line 45 in file "i2c.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  data_byte       1    wreg     unsigned char 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  data_byte       1    6[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3157 ;;Total ram usage:        1 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 3
  3160 ;; This function calls:
  3161 ;;		_I2C_2_Master_Idle
  3162 ;; This function is called by:
  3163 ;;		_color_writetoaddr
  3164 ;;		_color_read_Red
  3165 ;;		_color_read_Blue
  3166 ;;		_color_read_Green
  3167 ;;		_color_read_Clear
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text16
  3172   00123C                     __ptext16:
  3173                           	callstack 0
  3174   00123C                     _I2C_2_Master_Write:
  3175                           	callstack 24
  3176                           
  3177                           ;incstack = 0
  3178                           ;I2C_2_Master_Write@data_byte stored from wreg
  3179   00123C  6E07               	movwf	I2C_2_Master_Write@data_byte^0,c
  3180   00123E                     
  3181                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3182   00123E  ECD0  F008         	call	_I2C_2_Master_Idle	;wreg free
  3183   001242                     
  3184                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3185   001242  C007  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3186   001246  0012               	return		;funcret
  3187   001248                     __end_of_I2C_2_Master_Write:
  3188                           	callstack 0
  3189                           
  3190 ;; *************** function _I2C_2_Master_Stop *****************
  3191 ;; Defined at:
  3192 ;;		line 39 in file "i2c.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels used: 1
  3212 ;; Hardware stack levels required when called: 3
  3213 ;; This function calls:
  3214 ;;		_I2C_2_Master_Idle
  3215 ;; This function is called by:
  3216 ;;		_color_writetoaddr
  3217 ;;		_color_read_Red
  3218 ;;		_color_read_Blue
  3219 ;;		_color_read_Green
  3220 ;;		_color_read_Clear
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text17
  3225   001252                     __ptext17:
  3226                           	callstack 0
  3227   001252                     _I2C_2_Master_Stop:
  3228                           	callstack 24
  3229   001252                     
  3230                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3231   001252  ECD0  F008         	call	_I2C_2_Master_Idle	;wreg free
  3232   001256                     
  3233                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3234   001256  010E               	movlb	14	; () banked
  3235   001258  85DA               	bsf	218,2,b	;volatile
  3236   00125A                     
  3237                           ; BSR set to: 14
  3238   00125A  0012               	return		;funcret
  3239   00125C                     __end_of_I2C_2_Master_Stop:
  3240                           	callstack 0
  3241                           
  3242 ;; *************** function _I2C_2_Master_Start *****************
  3243 ;; Defined at:
  3244 ;;		line 27 in file "i2c.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3262 ;;Total ram usage:        0 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 3
  3265 ;; This function calls:
  3266 ;;		_I2C_2_Master_Idle
  3267 ;; This function is called by:
  3268 ;;		_color_writetoaddr
  3269 ;;		_color_read_Red
  3270 ;;		_color_read_Blue
  3271 ;;		_color_read_Green
  3272 ;;		_color_read_Clear
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text18
  3277   00125C                     __ptext18:
  3278                           	callstack 0
  3279   00125C                     _I2C_2_Master_Start:
  3280                           	callstack 24
  3281   00125C                     
  3282                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3283   00125C  ECD0  F008         	call	_I2C_2_Master_Idle	;wreg free
  3284   001260                     
  3285                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3286   001260  010E               	movlb	14	; () banked
  3287   001262  81DA               	bsf	218,0,b	;volatile
  3288   001264                     
  3289                           ; BSR set to: 14
  3290   001264  0012               	return		;funcret
  3291   001266                     __end_of_I2C_2_Master_Start:
  3292                           	callstack 0
  3293                           
  3294 ;; *************** function _I2C_2_Master_Idle *****************
  3295 ;; Defined at:
  3296 ;;		line 22 in file "i2c.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;Total ram usage:        1 bytes
  3315 ;; Hardware stack levels used: 1
  3316 ;; Hardware stack levels required when called: 2
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_I2C_2_Master_Start
  3321 ;;		_I2C_2_Master_RepStart
  3322 ;;		_I2C_2_Master_Stop
  3323 ;;		_I2C_2_Master_Write
  3324 ;;		_I2C_2_Master_Read
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text19
  3329   0011A0                     __ptext19:
  3330                           	callstack 0
  3331   0011A0                     _I2C_2_Master_Idle:
  3332                           	callstack 24
  3333   0011A0                     l332:
  3334   0011A0  010E               	movlb	14	; () banked
  3335   0011A2  B5D8               	btfsc	216,2,b	;volatile
  3336   0011A4  EFD6  F008         	goto	u871
  3337   0011A8  EFD8  F008         	goto	u870
  3338   0011AC                     u871:
  3339   0011AC  EFD0  F008         	goto	l332
  3340   0011B0                     u870:
  3341   0011B0                     
  3342                           ; BSR set to: 14
  3343   0011B0  CEDA F006          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3344   0011B4  0E1F               	movlw	31
  3345   0011B6  1606               	andwf	??_I2C_2_Master_Idle^0,f,c
  3346   0011B8  A4D8               	btfss	status,2,c
  3347   0011BA  EFE1  F008         	goto	u881
  3348   0011BE  EFE3  F008         	goto	u880
  3349   0011C2                     u881:
  3350   0011C2  EFD0  F008         	goto	l332
  3351   0011C6                     u880:
  3352   0011C6                     
  3353                           ; BSR set to: 14
  3354   0011C6  0012               	return		;funcret
  3355   0011C8                     __end_of_I2C_2_Master_Idle:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function _I2C_2_Master_Init *****************
  3359 ;; Defined at:
  3360 ;;		line 4 in file "i2c.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;Total ram usage:        0 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 2
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_color_click_init
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text20
  3389   001122                     __ptext20:
  3390                           	callstack 0
  3391   001122                     _I2C_2_Master_Init:
  3392                           	callstack 27
  3393   001122                     
  3394                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3395   001122  010E               	movlb	14	; () banked
  3396   001124  51D9               	movf	217,w,b	;volatile
  3397   001126  0BF0               	andlw	-16
  3398   001128  0908               	iorlw	8
  3399   00112A  6FD9               	movwf	217,b	;volatile
  3400   00112C                     
  3401                           ; BSR set to: 14
  3402                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3403   00112C  8BD9               	bsf	217,5,b	;volatile
  3404                           
  3405                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3406   00112E  0E9F               	movlw	159
  3407   001130  6FD6               	movwf	214,b	;volatile
  3408   001132                     
  3409                           ; BSR set to: 14
  3410                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3411   001132  8A84               	bsf	132,5,c	;volatile
  3412   001134                     
  3413                           ; BSR set to: 14
  3414                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3415   001134  8C84               	bsf	132,6,c	;volatile
  3416   001136                     
  3417                           ; BSR set to: 14
  3418                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3419   001136  9BA7               	bcf	167,5,b	;volatile
  3420   001138                     
  3421                           ; BSR set to: 14
  3422                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3423   001138  9DA7               	bcf	167,6,b	;volatile
  3424                           
  3425                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3426   00113A  0E1D               	movlw	29
  3427   00113C  6F1D               	movwf	29,b	;volatile
  3428                           
  3429                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3430   00113E  0E1E               	movlw	30
  3431   001140  6F1C               	movwf	28,b	;volatile
  3432                           
  3433                           ;i2c.c: 18:   RD5PPS=0x1C;
  3434   001142  0E1C               	movlw	28
  3435   001144  6F6F               	movwf	111,b	;volatile
  3436                           
  3437                           ;i2c.c: 19:   RD6PPS=0x1B;
  3438   001146  0E1B               	movlw	27
  3439   001148  6F70               	movwf	112,b	;volatile
  3440   00114A                     
  3441                           ; BSR set to: 14
  3442   00114A  0012               	return		;funcret
  3443   00114C                     __end_of_I2C_2_Master_Init:
  3444                           	callstack 0
  3445                           
  3446 ;; *************** function _TxBufferedString *****************
  3447 ;; Defined at:
  3448 ;;		line 84 in file "serial.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  string          2    6[COMRAM] PTR unsigned char 
  3451 ;;		 -> main@buf(3), 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;Total ram usage:        2 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; Hardware stack levels required when called: 3
  3470 ;; This function calls:
  3471 ;;		_putCharToTxBuf
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text21
  3478   00108A                     __ptext21:
  3479                           	callstack 0
  3480   00108A                     _TxBufferedString:
  3481                           	callstack 27
  3482   00108A                     
  3483                           ;serial.c: 86:     while(*string != 0){
  3484   00108A  EF50  F008         	goto	l2026
  3485   00108E                     l2022:
  3486                           
  3487                           ;serial.c: 87:   putCharToTxBuf(*string++);
  3488   00108E  C007  FFD9         	movff	TxBufferedString@string,fsr2l
  3489   001092  C008  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3490   001096  50DF               	movf	indf2,w,c
  3491   001098  ECA6  F008         	call	_putCharToTxBuf
  3492   00109C  4A07               	infsnz	TxBufferedString@string^0,f,c
  3493   00109E  2A08               	incf	(TxBufferedString@string+1)^0,f,c
  3494   0010A0                     l2026:
  3495                           
  3496                           ;serial.c: 86:     while(*string != 0){
  3497   0010A0  C007  FFD9         	movff	TxBufferedString@string,fsr2l
  3498   0010A4  C008  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3499   0010A8  50DF               	movf	indf2,w,c
  3500   0010AA  A4D8               	btfss	status,2,c
  3501   0010AC  EF5A  F008         	goto	u1471
  3502   0010B0  EF5C  F008         	goto	u1470
  3503   0010B4                     u1471:
  3504   0010B4  EF47  F008         	goto	l2022
  3505   0010B8                     u1470:
  3506   0010B8                     
  3507                           ;serial.c: 89:     sendFLAG=1;
  3508   0010B8  0E01               	movlw	1
  3509   0010BA  6E58               	movwf	_sendFLAG^0,c
  3510   0010BC                     
  3511                           ;serial.c: 90:     PIE4bits.TX4IE=1;
  3512   0010BC  010E               	movlb	14	; () banked
  3513   0010BE  852D               	bsf	45,2,b	;volatile
  3514   0010C0                     
  3515                           ; BSR set to: 14
  3516   0010C0  0012               	return		;funcret
  3517   0010C2                     __end_of_TxBufferedString:
  3518                           	callstack 0
  3519                           
  3520 ;; *************** function _putCharToTxBuf *****************
  3521 ;; Defined at:
  3522 ;;		line 71 in file "serial.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  byte            1    wreg     unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  byte            1    5[COMRAM] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;Total ram usage:        1 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 2
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_TxBufferedString
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text22
  3551   00114C                     __ptext22:
  3552                           	callstack 0
  3553   00114C                     _putCharToTxBuf:
  3554                           	callstack 27
  3555                           
  3556                           ; BSR set to: 14
  3557                           ;incstack = 0
  3558                           ;putCharToTxBuf@byte stored from wreg
  3559   00114C  6E06               	movwf	putCharToTxBuf@byte^0,c
  3560   00114E                     
  3561                           ;serial.c: 72:     if (TxBufWriteCnt>=100) {TxBufWriteCnt=0;}
  3562   00114E  0E63               	movlw	99
  3563   001150  6455               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3564   001152  EFAD  F008         	goto	u961
  3565   001156  EFAF  F008         	goto	u960
  3566   00115A                     u961:
  3567   00115A  EFB1  F008         	goto	l1704
  3568   00115E                     u960:
  3569   00115E  0E00               	movlw	0
  3570   001160  6E55               	movwf	_TxBufWriteCnt^0,c	;volatile
  3571   001162                     l1704:
  3572                           
  3573                           ;serial.c: 73:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3574   001162  0E00               	movlw	low _EUSART4TXbuf
  3575   001164  2455               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  3576   001166  6ED9               	movwf	fsr2l,c
  3577   001168  6ADA               	clrf	fsr2h,c
  3578   00116A  0E01               	movlw	high _EUSART4TXbuf
  3579   00116C  22DA               	addwfc	fsr2h,f,c
  3580   00116E  C006  FFDF         	movff	putCharToTxBuf@byte,indf2
  3581   001172  2A55               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3582   001174  0012               	return		;funcret
  3583   001176                     __end_of_putCharToTxBuf:
  3584                           	callstack 0
  3585                           
  3586 ;; *************** function _LightInit *****************
  3587 ;; Defined at:
  3588 ;;		line 4 in file "lights.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		None
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;Total ram usage:        0 bytes
  3607 ;; Hardware stack levels used: 1
  3608 ;; Hardware stack levels required when called: 2
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text23
  3617   00122E                     __ptext23:
  3618                           	callstack 0
  3619   00122E                     _LightInit:
  3620                           	callstack 28
  3621   00122E                     
  3622                           ;lights.c: 5:     TRISGbits.TRISG1=0;
  3623   00122E  9287               	bcf	135,1,c	;volatile
  3624                           
  3625                           ;lights.c: 6:     TRISFbits.TRISF7=0;
  3626   001230  9E86               	bcf	134,7,c	;volatile
  3627                           
  3628                           ;lights.c: 7:     TRISAbits.TRISA4=0;
  3629   001232  9881               	bcf	129,4,c	;volatile
  3630                           
  3631                           ;lights.c: 8:     LATGbits.LATG1=0;
  3632   001234  927F               	bcf	127,1,c	;volatile
  3633                           
  3634                           ;lights.c: 9:     LATFbits.LATF7=0;
  3635   001236  9E7E               	bcf	126,7,c	;volatile
  3636                           
  3637                           ;lights.c: 10:     LATAbits.LATA4=0;
  3638   001238  9879               	bcf	121,4,c	;volatile
  3639   00123A  0012               	return		;funcret
  3640   00123C                     __end_of_LightInit:
  3641                           	callstack 0
  3642                           
  3643 ;; *************** function _Interrupts_init *****************
  3644 ;; Defined at:
  3645 ;;		line 9 in file "interrupts.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		None
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;Total ram usage:        0 bytes
  3664 ;; Hardware stack levels used: 1
  3665 ;; Hardware stack levels required when called: 2
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text24
  3674   00121E                     __ptext24:
  3675                           	callstack 0
  3676   00121E                     _Interrupts_init:
  3677                           	callstack 28
  3678   00121E                     
  3679                           ;interrupts.c: 11:     INTCONbits.PEIE=1;
  3680   00121E  8CF2               	bsf	242,6,c	;volatile
  3681                           
  3682                           ;interrupts.c: 12:     INTCONbits.IPEN=1;
  3683   001220  8AF2               	bsf	242,5,c	;volatile
  3684                           
  3685                           ;interrupts.c: 13:     PIE4bits.RC4IE=1;
  3686   001222  010E               	movlb	14	; () banked
  3687   001224  872D               	bsf	45,3,b	;volatile
  3688                           
  3689                           ;interrupts.c: 14:     PIE4bits.TX4IE=0;
  3690   001226  952D               	bcf	45,2,b	;volatile
  3691                           
  3692                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  3693   001228  8B29               	bsf	41,5,b	;volatile
  3694                           
  3695                           ;interrupts.c: 16:     INTCONbits.GIE=1;
  3696   00122A  8EF2               	bsf	242,7,c	;volatile
  3697   00122C                     
  3698                           ; BSR set to: 14
  3699   00122C  0012               	return		;funcret
  3700   00122E                     __end_of_Interrupts_init:
  3701                           	callstack 0
  3702                           
  3703 ;; *************** function _HighISR *****************
  3704 ;; Defined at:
  3705 ;;		line 25 in file "interrupts.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  reg             1    4[COMRAM] unsigned char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3722 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3723 ;;Total ram usage:        3 bytes
  3724 ;; Hardware stack levels used: 1
  3725 ;; Hardware stack levels required when called: 1
  3726 ;; This function calls:
  3727 ;;		_getCharFromTxBuf
  3728 ;;		_isDataInTxBuf
  3729 ;;		_putCharToRxBuf
  3730 ;; This function is called by:
  3731 ;;		Interrupt level 2
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	intcode
  3736   000008                     __pintcode:
  3737                           	callstack 0
  3738   000008                     _HighISR:
  3739                           	callstack 24
  3740                           
  3741                           ; BSR set to: 14
  3742                           ;incstack = 0
  3743   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3744   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3745   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3746   000012                     
  3747                           ;interrupts.c: 28:  if(PIR4bits.TX4IF & sendFLAG){
  3748   000012  010E               	movlb	14	; () banked
  3749   000014  B537               	btfsc	55,2,b	;volatile
  3750   000016  EF0F  F000         	goto	i2u159_41
  3751   00001A  EF12  F000         	goto	i2u159_40
  3752   00001E                     i2u159_41:
  3753   00001E  0E01               	movlw	1
  3754   000020  EF13  F000         	goto	i2u159_46
  3755   000024                     i2u159_40:
  3756   000024  0E00               	movlw	0
  3757   000026                     i2u159_46:
  3758   000026  1458               	andwf	_sendFLAG^0,w,c
  3759   000028  0900               	iorlw	0
  3760   00002A  B4D8               	btfsc	status,2,c
  3761   00002C  EF1A  F000         	goto	i2u160_41
  3762   000030  EF1C  F000         	goto	i2u160_40
  3763   000034                     i2u160_41:
  3764   000034  EF38  F000         	goto	i2l2124
  3765   000038                     i2u160_40:
  3766   000038                     
  3767                           ; BSR set to: 14
  3768                           ;interrupts.c: 29:         if (!isDataInTxBuf()){
  3769   000038  EC03  F009         	call	_isDataInTxBuf	;wreg free
  3770   00003C  0900               	iorlw	0
  3771   00003E  A4D8               	btfss	status,2,c
  3772   000040  EF24  F000         	goto	i2u161_41
  3773   000044  EF26  F000         	goto	i2u161_40
  3774   000048                     i2u161_41:
  3775   000048  EF2A  F000         	goto	i2l2120
  3776   00004C                     i2u161_40:
  3777   00004C                     
  3778                           ;interrupts.c: 30:             PIE4bits.TX4IE=0;
  3779   00004C  010E               	movlb	14	; () banked
  3780   00004E  952D               	bcf	45,2,b	;volatile
  3781   000050                     
  3782                           ; BSR set to: 14
  3783                           ;interrupts.c: 31:             sendFLAG=0;
  3784   000050  0E00               	movlw	0
  3785   000052  6E58               	movwf	_sendFLAG^0,c
  3786   000054                     i2l2120:
  3787                           
  3788                           ;interrupts.c: 33:         if (isDataInTxBuf()){
  3789   000054  EC03  F009         	call	_isDataInTxBuf	;wreg free
  3790   000058  0900               	iorlw	0
  3791   00005A  B4D8               	btfsc	status,2,c
  3792   00005C  EF32  F000         	goto	i2u162_41
  3793   000060  EF34  F000         	goto	i2u162_40
  3794   000064                     i2u162_41:
  3795   000064  EF38  F000         	goto	i2l2124
  3796   000068                     i2u162_40:
  3797   000068                     
  3798                           ;interrupts.c: 34:             TX4REG = getCharFromTxBuf();
  3799   000068  EC7B  F008         	call	_getCharFromTxBuf	;wreg free
  3800   00006C  010E               	movlb	14	; () banked
  3801   00006E  6FE4               	movwf	228,b	;volatile
  3802   000070                     i2l2124:
  3803                           
  3804                           ;interrupts.c: 39:     if(PIR4bits.RC4IF){
  3805   000070  010E               	movlb	14	; () banked
  3806   000072  A737               	btfss	55,3,b	;volatile
  3807   000074  EF3E  F000         	goto	i2u163_41
  3808   000078  EF40  F000         	goto	i2u163_40
  3809   00007C                     i2u163_41:
  3810   00007C  EF47  F000         	goto	i2l172
  3811   000080                     i2u163_40:
  3812   000080                     
  3813                           ; BSR set to: 14
  3814                           ;interrupts.c: 40:         char reg = RC4REG;
  3815   000080  CEE3 F005          	movff	3811,HighISR@reg	;volatile
  3816   000084                     
  3817                           ; BSR set to: 14
  3818                           ;interrupts.c: 41:         putCharToRxBuf(reg);
  3819   000084  5005               	movf	HighISR@reg^0,w,c
  3820   000086  ECBB  F008         	call	_putCharToRxBuf
  3821   00008A                     
  3822                           ;interrupts.c: 42:         charFLAG=1;
  3823   00008A  0E01               	movlw	1
  3824   00008C  6E59               	movwf	_charFLAG^0,c
  3825   00008E                     i2l172:
  3826   00008E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3827   000092  C003  FFD9         	movff	??_HighISR,fsr2l
  3828   000096  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3829   000098  0011               	retfie		f
  3830   00009A                     __end_of_HighISR:
  3831                           	callstack 0
  3832                           
  3833 ;; *************** function _putCharToRxBuf *****************
  3834 ;; Defined at:
  3835 ;;		line 51 in file "serial.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  byte            1    wreg     unsigned char 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  byte            1    0[COMRAM] unsigned char 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;Total ram usage:        1 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_HighISR
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text26
  3863   001176                     __ptext26:
  3864                           	callstack 0
  3865   001176                     _putCharToRxBuf:
  3866                           	callstack 24
  3867                           
  3868                           ;incstack = 0
  3869                           ;putCharToRxBuf@byte stored from wreg
  3870   001176  6E01               	movwf	putCharToRxBuf@byte^0,c
  3871   001178                     
  3872                           ;serial.c: 52:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3873   001178  0E13               	movlw	19
  3874   00117A  6457               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3875   00117C  EFC2  F008         	goto	i2u149_41
  3876   001180  EFC4  F008         	goto	i2u149_40
  3877   001184                     i2u149_41:
  3878   001184  EFC6  F008         	goto	i2l2044
  3879   001188                     i2u149_40:
  3880   001188  0E00               	movlw	0
  3881   00118A  6E57               	movwf	_RxBufWriteCnt^0,c	;volatile
  3882   00118C                     i2l2044:
  3883                           
  3884                           ;serial.c: 53:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3885   00118C  0E9C               	movlw	low _EUSART4RXbuf
  3886   00118E  2457               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3887   001190  6ED9               	movwf	fsr2l,c
  3888   001192  6ADA               	clrf	fsr2h,c
  3889   001194  0E00               	movlw	high _EUSART4RXbuf
  3890   001196  22DA               	addwfc	fsr2h,f,c
  3891   001198  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3892   00119C  2A57               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3893   00119E  0012               	return		;funcret
  3894   0011A0                     __end_of_putCharToRxBuf:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _isDataInTxBuf *****************
  3898 ;; Defined at:
  3899 ;;		line 79 in file "serial.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      unsigned char 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_HighISR
  3923 ;;		_sendTxBuf
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text27
  3928   001206                     __ptext27:
  3929                           	callstack 0
  3930   001206                     _isDataInTxBuf:
  3931                           	callstack 24
  3932   001206                     
  3933                           ;serial.c: 80:     return (TxBufWriteCnt!=TxBufReadCnt);
  3934   001206  5054               	movf	_TxBufReadCnt^0,w,c	;volatile
  3935   001208  1855               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3936   00120A  A4D8               	btfss	status,2,c
  3937   00120C  EF0A  F009         	goto	i2u62_41
  3938   001210  EF0D  F009         	goto	i2u62_40
  3939   001214                     i2u62_41:
  3940   001214  0E01               	movlw	1
  3941   001216  EF0E  F009         	goto	i2u63_40
  3942   00121A                     i2u62_40:
  3943   00121A  0E00               	movlw	0
  3944   00121C                     i2u63_40:
  3945   00121C  0012               	return		;funcret
  3946   00121E                     __end_of_isDataInTxBuf:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _getCharFromTxBuf *****************
  3950 ;; Defined at:
  3951 ;;		line 65 in file "serial.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      unsigned char 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;Total ram usage:        2 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_HighISR
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text28
  3979   0010F6                     __ptext28:
  3980                           	callstack 0
  3981   0010F6                     _getCharFromTxBuf:
  3982                           	callstack 24
  3983   0010F6                     
  3984                           ;serial.c: 66:     if (TxBufReadCnt>=100) {TxBufReadCnt=0;}
  3985   0010F6  0E63               	movlw	99
  3986   0010F8  6454               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  3987   0010FA  EF81  F008         	goto	i2u148_41
  3988   0010FE  EF83  F008         	goto	i2u148_40
  3989   001102                     i2u148_41:
  3990   001102  EF85  F008         	goto	i2l2036
  3991   001106                     i2u148_40:
  3992   001106  0E00               	movlw	0
  3993   001108  6E54               	movwf	_TxBufReadCnt^0,c	;volatile
  3994   00110A                     i2l2036:
  3995                           
  3996                           ;serial.c: 67:     return EUSART4TXbuf[TxBufReadCnt++];
  3997   00110A  2A54               	incf	_TxBufReadCnt^0,f,c	;volatile
  3998   00110C  0454               	decf	_TxBufReadCnt^0,w,c	;volatile
  3999   00110E  6E01               	movwf	??_getCharFromTxBuf^0,c
  4000   001110  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  4001   001112  0E00               	movlw	low _EUSART4TXbuf
  4002   001114  2401               	addwf	??_getCharFromTxBuf^0,w,c
  4003   001116  6ED9               	movwf	fsr2l,c
  4004   001118  0E01               	movlw	high _EUSART4TXbuf
  4005   00111A  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  4006   00111C  6EDA               	movwf	fsr2h,c
  4007   00111E  50DF               	movf	indf2,w,c
  4008   001120  0012               	return		;funcret
  4009   001122                     __end_of_getCharFromTxBuf:
  4010                           	callstack 0
  4011   000000                     
  4012                           	psect	rparam
  4013   000000                     
  4014                           	psect	temp
  4015   00005A                     btemp:
  4016                           	callstack 0
  4017   00005A                     	ds	1
  4018   000000                     int$flags	set	btemp
  4019   000000                     wtemp8	set	btemp+1
  4020   000000                     ttemp5	set	btemp+1
  4021   000000                     ttemp6	set	btemp+4
  4022   000000                     ttemp7	set	btemp+8
  4023                           
  4024                           	psect	idloc
  4025                           
  4026                           ;Config register IDLOC0 @ 0x200000
  4027                           ;	unspecified, using default values
  4028   200000                     	org	2097152
  4029   200000  0FFF               	dw	4095
  4030                           
  4031                           ;Config register IDLOC1 @ 0x200002
  4032                           ;	unspecified, using default values
  4033   200002                     	org	2097154
  4034   200002  0FFF               	dw	4095
  4035                           
  4036                           ;Config register IDLOC2 @ 0x200004
  4037                           ;	unspecified, using default values
  4038   200004                     	org	2097156
  4039   200004  0FFF               	dw	4095
  4040                           
  4041                           ;Config register IDLOC3 @ 0x200006
  4042                           ;	unspecified, using default values
  4043   200006                     	org	2097158
  4044   200006  0FFF               	dw	4095
  4045                           
  4046                           ;Config register IDLOC4 @ 0x200008
  4047                           ;	unspecified, using default values
  4048   200008                     	org	2097160
  4049   200008  0FFF               	dw	4095
  4050                           
  4051                           ;Config register IDLOC5 @ 0x20000A
  4052                           ;	unspecified, using default values
  4053   20000A                     	org	2097162
  4054   20000A  0FFF               	dw	4095
  4055                           
  4056                           ;Config register IDLOC6 @ 0x20000C
  4057                           ;	unspecified, using default values
  4058   20000C                     	org	2097164
  4059   20000C  0FFF               	dw	4095
  4060                           
  4061                           ;Config register IDLOC7 @ 0x20000E
  4062                           ;	unspecified, using default values
  4063   20000E                     	org	2097166
  4064   20000E  0FFF               	dw	4095
  4065                           
  4066                           	psect	config
  4067                           
  4068                           ;Config register CONFIG1L @ 0x300000
  4069                           ;	External Oscillator mode Selection bits
  4070                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4071                           ;	Power-up default value for COSC bits
  4072                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4073   300000                     	org	3145728
  4074   300000  AA                 	db	170
  4075                           
  4076                           ;Config register CONFIG1H @ 0x300001
  4077                           ;	unspecified, using default values
  4078                           ;	Clock Out Enable bit
  4079                           ;	CLKOUTEN = 0x1, unprogrammed default
  4080                           ;	Clock Switch Enable bit
  4081                           ;	CSWEN = 0x1, unprogrammed default
  4082                           ;	Fail-Safe Clock Monitor Enable bit
  4083                           ;	FCMEN = 0x1, unprogrammed default
  4084   300001                     	org	3145729
  4085   300001  FF                 	db	255
  4086                           
  4087                           ;Config register CONFIG2L @ 0x300002
  4088                           ;	unspecified, using default values
  4089                           ;	Master Clear Enable bit
  4090                           ;	MCLRE = 0x1, unprogrammed default
  4091                           ;	Power-up Timer Enable bit
  4092                           ;	PWRTE = 0x1, unprogrammed default
  4093                           ;	Low-power BOR enable bit
  4094                           ;	LPBOREN = 0x1, unprogrammed default
  4095                           ;	Brown-out Reset Enable bits
  4096                           ;	BOREN = 0x3, unprogrammed default
  4097   300002                     	org	3145730
  4098   300002  FF                 	db	255
  4099                           
  4100                           ;Config register CONFIG2H @ 0x300003
  4101                           ;	unspecified, using default values
  4102                           ;	Brown Out Reset Voltage selection bits
  4103                           ;	BORV = 0x3, unprogrammed default
  4104                           ;	ZCD Disable bit
  4105                           ;	ZCD = 0x1, unprogrammed default
  4106                           ;	PPSLOCK bit One-Way Set Enable bit
  4107                           ;	PPS1WAY = 0x1, unprogrammed default
  4108                           ;	Stack Full/Underflow Reset Enable bit
  4109                           ;	STVREN = 0x1, unprogrammed default
  4110                           ;	Debugger Enable bit
  4111                           ;	DEBUG = 0x1, unprogrammed default
  4112                           ;	Extended Instruction Set Enable bit
  4113                           ;	XINST = 0x1, unprogrammed default
  4114   300003                     	org	3145731
  4115   300003  FF                 	db	255
  4116                           
  4117                           ;Config register CONFIG3L @ 0x300004
  4118                           ;	WDT Period Select bits
  4119                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4120                           ;	WDT operating mode
  4121                           ;	WDTE = OFF, WDT Disabled
  4122   300004                     	org	3145732
  4123   300004  9F                 	db	159
  4124                           
  4125                           ;Config register CONFIG3H @ 0x300005
  4126                           ;	unspecified, using default values
  4127                           ;	WDT Window Select bits
  4128                           ;	WDTCWS = 0x7, unprogrammed default
  4129                           ;	WDT input clock selector
  4130                           ;	WDTCCS = 0x7, unprogrammed default
  4131   300005                     	org	3145733
  4132   300005  FF                 	db	255
  4133                           
  4134                           ;Config register CONFIG4L @ 0x300006
  4135                           ;	unspecified, using default values
  4136                           ;	Write Protection Block 0
  4137                           ;	WRT0 = 0x1, unprogrammed default
  4138                           ;	Write Protection Block 1
  4139                           ;	WRT1 = 0x1, unprogrammed default
  4140                           ;	Write Protection Block 2
  4141                           ;	WRT2 = 0x1, unprogrammed default
  4142                           ;	Write Protection Block 3
  4143                           ;	WRT3 = 0x1, unprogrammed default
  4144                           ;	Write Protection Block 3
  4145                           ;	WRT4 = 0x1, unprogrammed default
  4146                           ;	Write Protection Block 3
  4147                           ;	WRT5 = 0x1, unprogrammed default
  4148                           ;	Write Protection Block 3
  4149                           ;	WRT6 = 0x1, unprogrammed default
  4150                           ;	Write Protection Block 3
  4151                           ;	WRT7 = 0x1, unprogrammed default
  4152   300006                     	org	3145734
  4153   300006  FF                 	db	255
  4154                           
  4155                           ;Config register CONFIG4H @ 0x300007
  4156                           ;	unspecified, using default values
  4157                           ;	Configuration Register Write Protection bit
  4158                           ;	WRTC = 0x1, unprogrammed default
  4159                           ;	Boot Block Write Protection bit
  4160                           ;	WRTB = 0x1, unprogrammed default
  4161                           ;	Data EEPROM Write Protection bit
  4162                           ;	WRTD = 0x1, unprogrammed default
  4163                           ;	Scanner Enable bit
  4164                           ;	SCANE = 0x1, unprogrammed default
  4165                           ;	Low Voltage Programming Enable bit
  4166                           ;	LVP = 0x1, unprogrammed default
  4167   300007                     	org	3145735
  4168   300007  FF                 	db	255
  4169                           
  4170                           ;Config register CONFIG5L @ 0x300008
  4171                           ;	unspecified, using default values
  4172                           ;	UserNVM Program Memory Code Protection bit
  4173                           ;	CP = 0x1, unprogrammed default
  4174                           ;	DataNVM Memory Code Protection bit
  4175                           ;	CPD = 0x1, unprogrammed default
  4176   300008                     	org	3145736
  4177   300008  FF                 	db	255
  4178                           
  4179                           ;Config register CONFIG5H @ 0x300009
  4180                           ;	unspecified, using default values
  4181   300009                     	org	3145737
  4182   300009  FF                 	db	255
  4183                           
  4184                           ;Config register CONFIG6L @ 0x30000A
  4185                           ;	unspecified, using default values
  4186                           ;	Table Read Protection Block 0
  4187                           ;	EBTR0 = 0x1, unprogrammed default
  4188                           ;	Table Read Protection Block 1
  4189                           ;	EBTR1 = 0x1, unprogrammed default
  4190                           ;	Table Read Protection Block 2
  4191                           ;	EBTR2 = 0x1, unprogrammed default
  4192                           ;	Table Read Protection Block 3
  4193                           ;	EBTR3 = 0x1, unprogrammed default
  4194                           ;	Table Read Protection Block 4
  4195                           ;	EBTR4 = 0x1, unprogrammed default
  4196                           ;	Table Read Protection Block 5
  4197                           ;	EBTR5 = 0x1, unprogrammed default
  4198                           ;	Table Read Protection Block 6
  4199                           ;	EBTR6 = 0x1, unprogrammed default
  4200                           ;	Table Read Protection Block 7
  4201                           ;	EBTR7 = 0x1, unprogrammed default
  4202   30000A                     	org	3145738
  4203   30000A  FF                 	db	255
  4204                           
  4205                           ;Config register CONFIG6H @ 0x30000B
  4206                           ;	unspecified, using default values
  4207                           ;	Boot Block Table Read Protection bit
  4208                           ;	EBTRB = 0x1, unprogrammed default
  4209   30000B                     	org	3145739
  4210   30000B  FF                 	db	255
  4211                           tosu	equ	0xFFF
  4212                           tosh	equ	0xFFE
  4213                           tosl	equ	0xFFD
  4214                           stkptr	equ	0xFFC
  4215                           pclatu	equ	0xFFB
  4216                           pclath	equ	0xFFA
  4217                           pcl	equ	0xFF9
  4218                           tblptru	equ	0xFF8
  4219                           tblptrh	equ	0xFF7
  4220                           tblptrl	equ	0xFF6
  4221                           tablat	equ	0xFF5
  4222                           prodh	equ	0xFF4
  4223                           prodl	equ	0xFF3
  4224                           indf0	equ	0xFEF
  4225                           postinc0	equ	0xFEE
  4226                           postdec0	equ	0xFED
  4227                           preinc0	equ	0xFEC
  4228                           plusw0	equ	0xFEB
  4229                           fsr0h	equ	0xFEA
  4230                           fsr0l	equ	0xFE9
  4231                           wreg	equ	0xFE8
  4232                           indf1	equ	0xFE7
  4233                           postinc1	equ	0xFE6
  4234                           postdec1	equ	0xFE5
  4235                           preinc1	equ	0xFE4
  4236                           plusw1	equ	0xFE3
  4237                           fsr1h	equ	0xFE2
  4238                           fsr1l	equ	0xFE1
  4239                           bsr	equ	0xFE0
  4240                           indf2	equ	0xFDF
  4241                           postinc2	equ	0xFDE
  4242                           postdec2	equ	0xFDD
  4243                           preinc2	equ	0xFDC
  4244                           plusw2	equ	0xFDB
  4245                           fsr2h	equ	0xFDA
  4246                           fsr2l	equ	0xFD9
  4247                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         188
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      89
    BANK0           160     13      96
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 3
		 -> main@buf(BANK0[3]), 

    levels@colorL	PTR struct RGB_val size(2) Largest target is 6
		 -> main@colorL(BANK0[6]), 

    readcard@colorL	PTR struct RGB_val size(2) Largest target is 6
		 -> main@colorL(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_readcard
    _readcard->___flge
    _levels->_color_read_Blue
    _levels->_color_read_Green
    _levels->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->___lwdiv
    ___flmul->___xxtofl
    ___flge->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    7344
                                              0 BANK0     13    13      0
                    _Interrupts_init
                              _Light
                          _LightInit
                   _TxBufferedString
                   _color_click_init
                         _initUSART4
                           _readcard
 ---------------------------------------------------------------------------------
 (1) _readcard                                            18    16      2    6333
                                             63 COMRAM    18    16      2
                             ___flge
                            ___flmul
                            ___lwdiv
                           ___xxtofl
                             _levels
 ---------------------------------------------------------------------------------
 (2) _levels                                               6     2      4    1145
                                             16 COMRAM     6     2      4
                              _Light
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              6 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _Light                                                1     1      0      88
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     763
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     456
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1388
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              7 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              6 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LightInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              3     3      0      45
                                              2 COMRAM     3     3      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Light
   _LightInit
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _readcard
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___lwdiv
     ___xxtofl
     _levels
       _Light
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D      60       5       60.0%
BITBIGSFRlhhhlh     8F      0       0      38        0.0%
BITBIGSFRhlh        6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      59       1       94.7%
BITBIGSFRlhhlhl     36      0       0      42        0.0%
BITBIGSFRlhhlhl     2D      0       0      41        0.0%
BITBIGSFRlhhll      2A      0       0      44        0.0%
BITBIGSFRllll       26      0       0      49        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRlhhlhl      C      0       0      43        0.0%
BITBIGSFRlllhh       B      0       0      47        0.0%
BITBIGSFRlhl         9      0       0      45        0.0%
BITBIGSFRlhhlhh      8      0       0      39        0.0%
BITBIGSFRlllhl       6      0       0      48        0.0%
BITBIGSFRlhhhh       4      0       0      37        0.0%
BITBIGSFRllh         3      0       0      46        0.0%
BITBIGSFRhllhl       2      0       0      35        0.0%
BITBIGSFRhllhh       1      0       0      34        0.0%
BITBIGSFRlhhlhl      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11D      50        0.0%
DATA                 0      0     11D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 04 15:00:07 2022

               _color_read_Red 0F0C                _color_read_Blue 0FAC                             l80 11E6  
                           l83 0F5A                             l77 10F4                             l86 0FFA  
                           l89 0FAA               _color_read_Green 0F5C              ??_Interrupts_init 0006  
                          l111 05B2                            l120 0E36                            l241 1204  
                          l163 122C                            l332 11A0                            l341 1250  
                          l350 1088                            l335 11C6                            l344 125A  
                          l329 114A                            l338 1264                            l194 0F0A  
                          l187 123A                            l347 1246                            l278 1174  
                          l287 10C0                            l623 0DBE                            l618 0D78  
                          l851 0EAA                            l844 0EA2                            l971 09DC  
                          l974 086E                            l967 0678                            l984 099E  
                          l976 08E6                            l977 08D4                            u910 0EBE  
                          u911 0EBA                            u920 0ED4                            u921 0ED0  
                          u930 0EEC                            u931 0EE8                            u940 0F04  
                          u908 1074                            u941 0F00                            u870 11B0  
                          u950 0DF0                            u871 11AC                            u951 0DEC  
                          u960 115E                            u880 11C6                            u961 115A  
                          u881 11C2                            u970 05CE                            u890 1072  
                          u971 05CA                            u891 106A                            u980 05E0  
                          u981 05DC                            u990 05F0                            u991 05EC  
                          wreg 000FE8                   ___flmul@aexp 002C                   ___flmul@bexp 002D  
                 ___flmul@sign 0027                   ___flmul@temp 0032                   ___flmul@prod 002E  
                         l1011 0B90                           l1022 0B28                           l1015 0ACC  
                         l1008 0A34                           l2000 056C                           l2010 058C  
                         l2020 108A                           l2012 05AA                           l2004 0572  
                         l2030 10BC                           l2022 108E                           l2024 109C  
                         l2016 05B0                           l2008 0578                           l2200 0C56  
                         l2026 10A0                           l2210 0C82                           l2202 0C5A  
                         l2028 10B8                           l2204 0C6C                           l2206 0C70  
                         l2216 0C88                           l2208 0C7C                           l2160 0B92  
                         l1610 11B0                           l2218 0CA0                           l2170 0BAE  
                         l2162 0B96                           l1700 114E                           l1612 125C  
                         l1620 1252                           l2180 0BE8                           l2172 0BB4  
                         l2164 0B9A                           l1702 115E                           l1614 1260  
                         l1622 1256                           l1710 05C0                           l1630 104E  
                         l2190 0C18                           l2182 0BEC                           l2174 0BC4  
                         l2166 0B9E                           l1704 1162                           l1608 11A0  
                         l1616 123E                           l1800 0890                           l1720 0600  
                         l1712 05CE                           l1632 1056                           l1624 1248  
                         l2192 0C2A                           l2184 0BFE                           l2176 0BD4  
                         l2168 0BA2                           l1706 1172                           l1618 1242  
                         l1810 0902                           l1802 089E                           l1730 0630  
                         l1722 0606                           l1714 05D0                           l1650 0EDA  
                         l1642 0EAE                           l1634 105E                           l1626 124C  
                         l2194 0C2E                           l2186 0C02                           l2178 0BD8  
                         l1820 096C                           l1812 0910                           l1804 08CC  
                         l1740 0668                           l1732 0632                           l1724 0616  
                         l1716 05E0                           l1708 05B4                           l1900 0AB4  
                         l1652 0EEC                           l1644 0EBE                           l1636 1084  
                         l1628 104A                           l1660 0F52                           l2196 0C40  
                         l2188 0C14                           l1830 09C2                           l1822 0986  
                         l1814 093A                           l1750 06B8                           l1742 0688  
                         l1734 0642                           l1726 061C                           l1718 05F0  
                         l1910 0B18                           l1902 0AB6                           l1654 0EF2  
                         l1646 0EC4                           l1638 1086                           l1670 0F5C  
                         l2198 0C44                           l1680 1132                           l1840 0CEA  
                         l1824 09A2                           l1832 09C8                           l1808 08F6  
                         l1816 093E                           l1760 0708                           l1752 06C2  
                         l1744 0698                           l1736 0652                           l1728 0622  
                         l1920 0B70                           l1912 0B36                           l1904 0AC2  
                         l1656 0F04                           l1648 0ED4                           l1664 0FAC  
                         l1672 0FA2                           l1682 1134                           l1930 11F2  
                         l1850 0D58                           l1842 0CFA                           l1834 09CC  
                         l1826 09B2                           l1818 0958                           l1770 074A  
                         l1762 0714                           l1754 06D8                           l1738 0662  
                         l1922 0B7E                           l1914 0B38                           l1906 0AFE  
                         l1666 0FF2                           l1658 0F0C                           l1690 0DC0  
                         l1940 121E                           l1684 1136                           l1676 1122  
                         l1932 11F4                           l1852 0D66                           l1844 0D28  
                         l1828 09C0                           l1780 07AC                           l1772 075A  
                         l1764 0722                           l1756 06E4                           l1748 06AC  
                         l1860 0E38                           l1924 0B80                           l1916 0B3C  
                         l1908 0B0A                           l1692 0DC6                           l1686 1138  
                         l1678 112C                           l1950 10EA                           l1942 10C2  
                         l1934 11FE                           l1854 0DB6                           l1846 0D38  
                         l1838 0CBC                           l1790 0854                           l1782 07C8  
                         l1774 0774                           l1766 072E                           l1758 06FC  
                         l1870 0E70                           l1862 0E40                           l1918 0B60  
                         l1694 0DDE                           l1952 122E                           l1688 11CA  
                         l1944 10C6                           l1936 1200                           l1928 11E8  
                         l1856 0DBC                           l1848 0D46                           l1792 085E  
                         l1784 07F2                           l1776 0784                           l1768 073E  
                         l1880 0E9C                           l1872 0E76                           l1864 0E52  
                         l1696 0DF0                           l1960 01F8                           l1946 10D0  
                         l1938 1202                           l1794 086C                           l1786 0828  
                         l1778 07A0                           l1874 0E8C                           l1866 0E5A  
                         l1890 0A5A                           l1882 09E0                           l1698 0DF2  
                         l1970 02E2                           l1962 022A                           l1954 009E  
                         l1948 10E0                           l1796 087E                           l1788 0836  
                         l1876 0E94                           l1868 0E62                           l1884 09F0  
                         l1980 038C                           l1964 025C                           l1956 0194  
                         l1798 088C                           l1878 0E96                           l1894 0A6E  
                         l1886 09FE                           l1990 047C                           l1982 042A  
                         l1974 02E8                           l1966 028E                           l1958 01C6  
                         l1896 0A76                           l1888 0A44                           l1992 0490  
                         l1984 043E                           l1968 02C0                           l1898 0A82  
                         l1994 052E                           l1986 0476                           l1978 02EE  
                         l1998 0534                           u1000 0630                           u1001 062C  
                         u1010 0642                           u1011 063E                           u1100 08E2  
                         u1020 0652                           u1101 08DE                           u1021 064E  
                         u1110 08F6                           u1030 0688                           u1111 08F2  
                         u1031 0684                           u1200 0DB6                           u1120 0910  
                         u1040 0698                           u1201 0DB2                           u1121 090C  
                         u1041 0694                           u1130 0958                           u1050 0812  
                         u1210 0E52                           u1131 0954                           u1211 0E4E  
                         u1140 0986                           u1060 086C                           u1220 0E70  
                         u1300 0B28                           u1141 0982                           u1061 0868  
                         u1221 0E6C                           u1301 0B24                           u1150 09C0  
                         u1070 088C                           u1230 0E8C                           u1310 0B36  
                         u1151 09BC                           u1071 0888                           u1055 0808  
                         u1231 0E88                           u1311 0B32                           u1160 0CEA  
                         u1080 089E                           u1320 0B70                           u1240 09F0  
                         u1400 02E2                           u1161 0CE6                           u1081 089A  
                         u1321 0B6C                           u1241 09EC                           u1401 02DE  
                         u1170 0D28                           u1090 08CC                           u1330 0B7E  
                         u1250 09FE                           u1410 038C                           u1171 0D24  
                         u1091 08C8                           u1331 0B7A                           u1251 09FA  
                         u1411 0388                           u1180 0D46                           u1260 0A5A  
                         u1420 042A                           u1340 01C6                           u1181 0D42  
                         u1261 0A56                           u1421 0426                           u1341 01C2  
                         u1190 0D66                           u1270 0AB0                           u1430 0476  
                         u1350 01F8                           u1191 0D62                           u1271 0AAC  
                         u1431 0472                           u1351 01F4                           u1280 0AFA  
                         u1440 052E                           u1360 022A                   _BAUD4CONbits 000EE9  
                         u1281 0AF6                           u1441 052A                           u1361 0226  
                         u1290 0B18                           u1450 056C                           u1370 025C  
                         u1291 0B14                           u1451 0568                           u1371 0258  
                         u1460 05AA                           u1380 028E                           u1700 0C14  
                         u1461 05A6                           u1381 028A                           u1701 0C10  
                         u1470 10B8                           u1390 02C0                           u1710 0C2A  
                         u1471 10B4                           u1391 02BC                           u1711 0C26  
                         u1720 0C40                           u1721 0C3C                           u1730 0C56  
                         u1731 0C52                           u1740 0C6C                           u1741 0C68  
                         u1750 0CB4                           u1670 0BD4                           u1751 0CB0  
                         u1671 0BD0                           u1680 0BE8                           u1681 0BE4  
                         u1690 0BFE                           u1691 0BFA                           u1767 0C94  
                         u1777 0DD0                           u1787 10D6                           _main 0B92  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 005A  
                         prodh 000FF4                           prodl 000FF3                           start 009A  
       __end_of_color_read_Red 0F5C                __end_of_HighISR 009A                   ___param_bank 000000  
                        ?_main 0001                __end_of___flmul 09DE                __end_of___lwdiv 0EAC  
                        i2l172 008E                          i2l281 121C                          i2l274 1120  
                        i2l267 119E                          _Light 0EAC     __end_of_I2C_2_Master_Start 1266  
   __end_of_I2C_2_Master_Write 1248                          main@j 00B5                          tablat 000FF5  
                        ttemp5 005B                          ttemp6 005E                          ttemp7 0062  
                        status 000FD8                          wtemp8 005B        __end_of_color_read_Blue 0FFC  
        _I2C_2_Master_RepStart 1248             putCharToRxBuf@byte 0001                ?_color_read_Red 000A  
              __initialization 0FFC                   __end_of_main 0CBC             putCharToTxBuf@byte 0006  
                       ??_main 00B0                  __activetblptr 000000                         ?_Light 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RD5PPS 000E6F  
                       _RD6PPS 000E70                         i2l2032 10F6                         i2l2040 1178  
                       i2l2120 0054                         i2l2112 0012                         i2l2034 1106  
                       i2l2042 1188                         i2l2130 008A                         i2l2122 0068  
                       i2l2114 0038                         i2l2036 110A                         i2l2044 118C  
                       i2l2116 004C                         i2l2124 0070                         i2l2046 119C  
                       i2l2126 0080                         i2l2118 0050                         i2l2128 0084  
                       i2l1450 1206                      ??_HighISR 0003       __end_of_color_click_init 10F6  
                       _RX4PPS 000E15                         _TX4REG 000EE4               __end_of___xxtofl 0B92  
                       ___flge 0CBC               _getCharFromTxBuf 10F6                      ??___flmul 0023  
                    ??___lwdiv 000A                         _levels 0DC0                         clear_0 1020  
                       clear_1 102C                         clear_2 1038               __end_of_readcard 05B4  
                       isa$std 000001              ?_TxBufferedString 0007                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             ??_TxBufferedString 0009  
                   ___flge@ff1 0034                     ___flge@ff2 0038                   ___xxtofl@arg 0017  
                 ___xxtofl@exp 0016                   ___xxtofl@val 000D          __end_of_isDataInTxBuf 121E  
                   __accesstop 0060        __end_of__initialization 103E       __end_of_color_read_Green 0FAC  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 000A  
              _Interrupts_init 121E                  __end_of_Light 0F0C                 __pcstackCOMRAM 0001  
                 __pidataBANK0 1266              __end_of_LightInit 123C                        ??_Light 0006  
                   __pbssBANK0 0060                     __pbssBANK1 0100              _color_writetoaddr 11C8  
                      ?___flge 0034             ?_color_writetoaddr 0008                        ?_levels 0011  
          ??_color_writetoaddr 0009                      ?___xxtofl 000D                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        i2u62_40 121A                        i2u62_41 1214  
                      i2u63_40 121C                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
      __end_of_Interrupts_init 122E         color_writetoaddr@value 0008               ??_color_read_Red 000C  
                      _HighISR 0008                      ?_readcard 0040      __end_of_color_writetoaddr 11E8  
           _I2C_2_Master_Start 125C                     _initUSART4 11E8             _I2C_2_Master_Write 123C  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000F  
                      ___flmul 05B4            ?_I2C_2_Master_Start 0001                        ___lwdiv 0E38  
          ?_I2C_2_Master_Write 0001                        __pcinit 0FFC                        __ramtop 0E00  
                      __ptext0 0B92                        __ptext1 009E                        __ptext2 0DC0  
                      __ptext3 0F0C                        __ptext4 0F5C                        __ptext5 0FAC  
                      __ptext6 1248                        __ptext7 1048                        __ptext8 0EAC  
                      __ptext9 09DE                     ??___xxtofl 0011                  _RxBufWriteCnt 0057  
     __end_of_getCharFromTxBuf 1122                        main@buf 00B2           ??_I2C_2_Master_Start 0007  
         ??_I2C_2_Master_Write 0007           end_of_initialization 103E                        levels@i 0011  
                   ??_readcard 0042              ?_color_click_init 0001             ??_color_click_init 000A  
                 levels@colorL 0013                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   main@F14591 00BD                  ___xxtofl@sign 0015                      _TRISAbits 000F81  
                    _TRISDbits 000F84                      _TRISFbits 000F86                      _TRISGbits 000F87  
     color_writetoaddr@address 0009        ??_I2C_2_Master_RepStart 0007               ?_Interrupts_init 0001  
                  ___flmul@grs 0028                     main@colorL 00B6                   _EUSART4RXbuf 009C  
                 _EUSART4TXbuf 0100                   _EUSART4VXbuf 0060              ?_color_read_Green 000A  
                  ?_initUSART4 0001             ??_color_read_Green 000C                 __end_of___flge 0DC0  
               __end_of_levels 0E38            start_initialization 0FFC                      _LightInit 122E  
                _TxBufWriteCnt 0055            color_read_Green@tmp 000F                       ??___flge 003C  
               _putCharToRxBuf 1176                 _putCharToTxBuf 114C                    __pdataBANK0 00BD  
                     ??_levels 0015                      ___flmul@a 001F                      ___flmul@b 001B  
                  __pbssCOMRAM 0052                  __pcstackBANK0 00B0                     ?_LightInit 0001  
                     ?_HighISR 0001               ___lwdiv@dividend 0006         __end_of_putCharToRxBuf 11A0  
       __end_of_putCharToTxBuf 1176                      __pintcode 0008                       ?___flmul 001B  
                     ?___lwdiv 0006         TxBufferedString@string 0007           I2C_2_Master_Read@ack 0008  
               Light@colorcode 0006           I2C_2_Master_Read@tmp 0009              _I2C_2_Master_Idle 11A0  
            _I2C_2_Master_Init 1122              _I2C_2_Master_Read 1048              _I2C_2_Master_Stop 1252  
                 _RxBufReadCnt 0056             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000A  
                _VxBufWriteCnt 0053              ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001  
          ??_I2C_2_Master_Idle 0006            ??_I2C_2_Master_Init 0006            ??_I2C_2_Master_Read 0007  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0007                  _isDataInTxBuf 1206  
                     _LATFbits 000F7E               _TxBufferedString 108A                       _LATGbits 000F7F  
                     _PIE0bits 000E29                       _PIE4bits 000E2D                       i2u160_40 0038  
                     i2u160_41 0034                       i2u161_40 004C                       i2u161_41 0048  
                     i2u162_40 0068                       i2u162_41 0064                       i2u163_40 0080  
                     i2u163_41 007C                       i2u148_40 1106                       i2u148_41 1102  
                     i2u149_40 1188                       i2u149_41 1184                       i2u159_40 0024  
                     i2u159_41 001E                       i2u159_46 0026                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA  
                     _SSP2STAT 000ED8      __end_of_I2C_2_Master_Idle 11C8      __end_of_I2C_2_Master_Init 114C  
    __end_of_I2C_2_Master_Read 108A      __end_of_I2C_2_Master_Stop 125C    I2C_2_Master_Write@data_byte 0007  
                    main@color 00BC              ??_color_read_Blue 000C                    ??_LightInit 0006  
                 _TxBufReadCnt 0054                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 1252  
           color_read_Blue@tmp 000F                   ??_initUSART4 0006                       __Hrparam 0000  
                     __Lrparam 0000                       _charFLAG 0059                     _ANSELDbits 000EA7  
                     ___xxtofl 09DE                ___lwdiv@divisor 0008             __end_of_initUSART4 1206  
                 _VxBufReadCnt 0052                ___lwdiv@counter 000C                       __ptext10 0E38  
                     __ptext11 05B4                       __ptext20 1122                       __ptext12 0CBC  
                     __ptext21 108A                       __ptext13 11E8                       __ptext22 114C  
                     __ptext14 10C2                       __ptext23 122E                       __ptext15 11C8  
                     __ptext24 121E                       __ptext16 123C                       __ptext17 1252  
                     __ptext26 1176                       __ptext18 125C                       __ptext27 1206  
                     __ptext19 11A0                       __ptext28 10F6                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       _readcard 009E                       _sendFLAG 0058  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005A  
               readcard@colorL 0040                 readcard@ratio1 0046                 readcard@ratio2 004A  
               readcard@ratio3 004E                     _INTCONbits 000FF2                ??_isDataInTxBuf 0001  
                     intlevel2 0000                     HighISR@reg 0005               _color_click_init 10C2  
     __end_of_TxBufferedString 10C2                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8               ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0006  
