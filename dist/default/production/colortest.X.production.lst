

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 04 13:28:44 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Version 2.35
    46                           ; Generated 05/05/2021 GMT
    47                           ; 
    48                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F67K40 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   000CBE                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for main@F14591
    86   000CBE  30                 	db	48
    87   000CBF  0A                 	db	10
    88   000CC0  00                 	db	0
    89   000000                     _RC4STAbits	set	3815
    90   000000                     _SP4BRGH	set	3814
    91   000000                     _SP4BRGL	set	3813
    92   000000                     _TX4STAbits	set	3816
    93   000000                     _BAUD4CONbits	set	3817
    94   000000                     _LATAbits	set	3961
    95   000000                     _SSP2CON2bits	set	3802
    96   000000                     _RX4PPS	set	3605
    97   000000                     _PIE0bits	set	3625
    98   000000                     _PIE4bits	set	3629
    99   000000                     _LATFbits	set	3966
   100   000000                     _LATGbits	set	3967
   101   000000                     _TRISAbits	set	3969
   102   000000                     _TRISFbits	set	3974
   103   000000                     _TRISGbits	set	3975
   104   000000                     _INTCONbits	set	4082
   105   000000                     _PIR4bits	set	3639
   106   000000                     _RC0PPS	set	3682
   107   000000                     _RC4REG	set	3811
   108   000000                     _TX4REG	set	3812
   109   000000                     _TRISDbits	set	3972
   110   000000                     _RD5PPS	set	3695
   111   000000                     _ANSELDbits	set	3751
   112   000000                     _SSP2ADD	set	3798
   113   000000                     _SSP2CON1bits	set	3801
   114   000000                     _SSP2CLKPPS	set	3612
   115   000000                     _SSP2DATPPS	set	3613
   116   000000                     _SSP2CON2	set	3802
   117   000000                     _SSP2STAT	set	3800
   118   000000                     _SSP2BUF	set	3797
   119   000000                     _RD6PPS	set	3696
   120                           
   121                           ; #config settings
   122                           
   123                           	psect	cinit
   124   000AA2                     __pcinit:
   125                           	callstack 0
   126   000AA2                     start_initialization:
   127                           	callstack 0
   128   000AA2                     __initialization:
   129                           	callstack 0
   130                           
   131                           ; Initialize objects allocated to COMRAM (3 bytes)
   132                           ; load TBLPTR registers with __pidataCOMRAM
   133   000AA2  0EBE               	movlw	low __pidataCOMRAM
   134   000AA4  6EF6               	movwf	tblptrl,c
   135   000AA6  0E0C               	movlw	high __pidataCOMRAM
   136   000AA8  6EF7               	movwf	tblptrh,c
   137   000AAA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   138   000AAC  6EF8               	movwf	tblptru,c
   139   000AAE  0009               	tblrd		*+	;fetch initializer
   140   000AB0  CFF5 F054          	movff	tablat,__pdataCOMRAM
   141   000AB4  0009               	tblrd		*+	;fetch initializer
   142   000AB6  CFF5 F055          	movff	tablat,__pdataCOMRAM+1
   143   000ABA  0009               	tblrd		*+	;fetch initializer
   144   000ABC  CFF5 F056          	movff	tablat,__pdataCOMRAM+2
   145                           
   146                           ; Clear objects allocated to BANK0 (160 bytes)
   147   000AC0  EE00  F060         	lfsr	0,__pbssBANK0
   148   000AC4  0EA0               	movlw	160
   149   000AC6                     clear_0:
   150   000AC6  6AEE               	clrf	postinc0,c
   151   000AC8  06E8               	decf	wreg,f,c
   152   000ACA  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to COMRAM (28 bytes)
   155   000ACC  EE00  F038         	lfsr	0,__pbssCOMRAM
   156   000AD0  0E1C               	movlw	28
   157   000AD2                     clear_1:
   158   000AD2  6AEE               	clrf	postinc0,c
   159   000AD4  06E8               	decf	wreg,f,c
   160   000AD6  E1FD               	bnz	clear_1
   161   000AD8                     end_of_initialization:
   162                           	callstack 0
   163   000AD8                     __end_of__initialization:
   164                           	callstack 0
   165   000AD8  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   166   000ADA  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   167   000ADC  0100               	movlb	0
   168   000ADE  EFFE  F002         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	bssCOMRAM
   171   000038                     __pbssCOMRAM:
   172                           	callstack 0
   173   000038                     _EUSART4RXbuf:
   174                           	callstack 0
   175   000038                     	ds	20
   176   00004C                     _VxBufReadCnt:
   177                           	callstack 0
   178   00004C                     	ds	1
   179   00004D                     _VxBufWriteCnt:
   180                           	callstack 0
   181   00004D                     	ds	1
   182   00004E                     _TxBufReadCnt:
   183                           	callstack 0
   184   00004E                     	ds	1
   185   00004F                     _TxBufWriteCnt:
   186                           	callstack 0
   187   00004F                     	ds	1
   188   000050                     _RxBufReadCnt:
   189                           	callstack 0
   190   000050                     	ds	1
   191   000051                     _RxBufWriteCnt:
   192                           	callstack 0
   193   000051                     	ds	1
   194   000052                     _sendFLAG:
   195                           	callstack 0
   196   000052                     	ds	1
   197   000053                     _charFLAG:
   198                           	callstack 0
   199   000053                     	ds	1
   200                           
   201                           	psect	dataCOMRAM
   202   000054                     __pdataCOMRAM:
   203                           	callstack 0
   204   000054                     main@F14591:
   205                           	callstack 0
   206   000054                     	ds	3
   207                           
   208                           	psect	bssBANK0
   209   000060                     __pbssBANK0:
   210                           	callstack 0
   211   000060                     _EUSART4TXbuf:
   212                           	callstack 0
   213   000060                     	ds	100
   214   0000C4                     _EUSART4VXbuf:
   215                           	callstack 0
   216   0000C4                     	ds	60
   217                           
   218                           	psect	cstackCOMRAM
   219   000001                     __pcstackCOMRAM:
   220                           	callstack 0
   221   000001                     ??_getCharFromTxBuf:
   222   000001                     putCharToRxBuf@byte:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x0
   226   000001                     	ds	2
   227   000003                     ??_HighISR:
   228                           
   229                           ; 1 bytes @ 0x2
   230   000003                     	ds	2
   231   000005                     HighISR@reg:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x4
   235   000005                     	ds	1
   236   000006                     ??_I2C_2_Master_Idle:
   237   000006                     ?___lwdiv:
   238                           	callstack 0
   239   000006                     Light@colorcode:
   240                           	callstack 0
   241   000006                     putCharToTxBuf@byte:
   242                           	callstack 0
   243   000006                     ___lwdiv@dividend:
   244                           	callstack 0
   245   000006                     ___flge@ff1:
   246                           	callstack 0
   247                           
   248                           ; 4 bytes @ 0x5
   249   000006                     	ds	1
   250   000007                     ??_I2C_2_Master_Read:
   251   000007                     I2C_2_Master_Write@data_byte:
   252                           	callstack 0
   253   000007                     TxBufferedString@string:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x6
   257   000007                     	ds	1
   258   000008                     color_writetoaddr@value:
   259                           	callstack 0
   260   000008                     I2C_2_Master_Read@ack:
   261                           	callstack 0
   262   000008                     ___lwdiv@divisor:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x7
   266   000008                     	ds	1
   267   000009                     color_writetoaddr@address:
   268                           	callstack 0
   269   000009                     I2C_2_Master_Read@tmp:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x8
   273   000009                     	ds	1
   274   00000A                     ??_color_click_init:
   275   00000A                     ?_color_read_Red:
   276                           	callstack 0
   277   00000A                     ?_color_read_Blue:
   278                           	callstack 0
   279   00000A                     ?_color_read_Green:
   280                           	callstack 0
   281   00000A                     ___lwdiv@quotient:
   282                           	callstack 0
   283   00000A                     ___flge@ff2:
   284                           	callstack 0
   285                           
   286                           ; 4 bytes @ 0x9
   287   00000A                     	ds	2
   288   00000C                     ??_color_read_Red:
   289   00000C                     ??_color_read_Blue:
   290   00000C                     ??_color_read_Green:
   291   00000C                     ___lwdiv@counter:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0xB
   295   00000C                     	ds	1
   296   00000D                     ?___xxtofl:
   297                           	callstack 0
   298   00000D                     ___xxtofl@val:
   299                           	callstack 0
   300                           
   301                           ; 4 bytes @ 0xC
   302   00000D                     	ds	1
   303   00000E                     ??___flge:
   304                           
   305                           ; 1 bytes @ 0xD
   306   00000E                     	ds	1
   307   00000F                     color_read_Red@tmp:
   308                           	callstack 0
   309   00000F                     color_read_Blue@tmp:
   310                           	callstack 0
   311   00000F                     color_read_Green@tmp:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xE
   315   00000F                     	ds	2
   316   000011                     ??___xxtofl:
   317   000011                     levels@i:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x10
   321   000011                     	ds	2
   322   000013                     levels@colorL:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x12
   326   000013                     	ds	2
   327   000015                     ??_levels:
   328   000015                     ___xxtofl@sign:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x14
   332   000015                     	ds	1
   333   000016                     ___xxtofl@exp:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x15
   337   000016                     	ds	1
   338   000017                     ___xxtofl@arg:
   339                           	callstack 0
   340                           
   341                           ; 4 bytes @ 0x16
   342   000017                     	ds	4
   343   00001B                     readcard@colorL:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x1A
   347   00001B                     	ds	2
   348   00001D                     
   349                           ; 1 bytes @ 0x1C
   350   00001D                     	ds	2
   351   00001F                     readcard@ratio3:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0x1E
   355   00001F                     	ds	4
   356   000023                     readcard@ratio1:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x22
   360   000023                     	ds	4
   361   000027                     readcard@ratio2:
   362                           	callstack 0
   363                           
   364                           ; 4 bytes @ 0x26
   365   000027                     	ds	4
   366   00002B                     ??_main:
   367                           
   368                           ; 1 bytes @ 0x2A
   369   00002B                     	ds	2
   370   00002D                     main@buf:
   371                           	callstack 0
   372                           
   373                           ; 3 bytes @ 0x2C
   374   00002D                     	ds	3
   375   000030                     main@j:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x2F
   379   000030                     	ds	1
   380   000031                     main@colorL:
   381                           	callstack 0
   382                           
   383                           ; 6 bytes @ 0x30
   384   000031                     	ds	6
   385   000037                     main@color:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x36
   389   000037                     	ds	1
   390                           
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 44 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  color           1   54[COMRAM] unsigned char 
   401 ;;  colorL          6   48[COMRAM] struct RGB_val
   402 ;;  buf             3   44[COMRAM] unsigned char [3]
   403 ;;  j               1   47[COMRAM] unsigned char 
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   414 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   416 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   417 ;;Total ram usage:       13 bytes
   418 ;; Hardware stack levels required when called: 7
   419 ;; This function calls:
   420 ;;		_Interrupts_init
   421 ;;		_Light
   422 ;;		_LightInit
   423 ;;		_TxBufferedString
   424 ;;		_color_click_init
   425 ;;		_initUSART4
   426 ;;		_readcard
   427 ;; This function is called by:
   428 ;;		Startup code after reset
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text0
   433   0005FC                     __ptext0:
   434                           	callstack 0
   435   0005FC                     _main:
   436                           	callstack 24
   437   0005FC                     
   438                           ;main.c: 45:     struct RGB_val colorL;;main.c: 47:     initUSART4();
   439   0005FC  EC20  F006         	call	_initUSART4	;wreg free
   440   000600                     
   441                           ;main.c: 48:     Interrupts_init();
   442   000600  EC3B  F006         	call	_Interrupts_init	;wreg free
   443   000604                     
   444                           ;main.c: 49:     color_click_init();
   445   000604  EC8D  F005         	call	_color_click_init	;wreg free
   446   000608                     
   447                           ;main.c: 50:     LightInit();
   448   000608  EC43  F006         	call	_LightInit	;wreg free
   449   00060C                     
   450                           ;main.c: 52:     char j;;main.c: 53:     unsigned char buf[]="0\n";
   451   00060C  C054  F02D         	movff	main@F14591,main@buf
   452   000610  C055  F02E         	movff	main@F14591+1,main@buf+1
   453   000614  C056  F02F         	movff	main@F14591+2,main@buf+2
   454   000618                     l1700:
   455                           
   456                           ;main.c: 55:     Light(0);
   457   000618  0E00               	movlw	0
   458   00061A  EC88  F004         	call	_Light
   459   00061E                     
   460                           ;main.c: 56:         unsigned char color = readcard(&colorL);
   461   00061E  0E31               	movlw	low main@colorL
   462   000620  6E1B               	movwf	readcard@colorL^0,c
   463   000622  0E00               	movlw	high main@colorL
   464   000624  6E1C               	movwf	(readcard@colorL+1)^0,c
   465   000626  EC4F  F000         	call	_readcard	;wreg free
   466   00062A  6E37               	movwf	main@color^0,c
   467   00062C                     
   468                           ;main.c: 57:         if(color==0){buf[0]='w';}
   469   00062C  5037               	movf	main@color^0,w,c
   470   00062E  A4D8               	btfss	status,2,c
   471   000630  EF1C  F003         	goto	u1011
   472   000634  EF1E  F003         	goto	u1010
   473   000638                     u1011:
   474   000638  EF20  F003         	goto	l1708
   475   00063C                     u1010:
   476   00063C  0E77               	movlw	119
   477   00063E  6E2D               	movwf	main@buf^0,c
   478   000640                     l1708:
   479                           
   480                           ;main.c: 58:         if(color==1){buf[0]='r';}
   481   000640  0437               	decf	main@color^0,w,c
   482   000642  A4D8               	btfss	status,2,c
   483   000644  EF26  F003         	goto	u1021
   484   000648  EF28  F003         	goto	u1020
   485   00064C                     u1021:
   486   00064C  EF2A  F003         	goto	l1712
   487   000650                     u1020:
   488   000650  0E72               	movlw	114
   489   000652  6E2D               	movwf	main@buf^0,c
   490   000654                     l1712:
   491                           
   492                           ;main.c: 59:         if(color==2){buf[0]='b';}
   493   000654  0E02               	movlw	2
   494   000656  1837               	xorwf	main@color^0,w,c
   495   000658  A4D8               	btfss	status,2,c
   496   00065A  EF31  F003         	goto	u1031
   497   00065E  EF33  F003         	goto	u1030
   498   000662                     u1031:
   499   000662  EF35  F003         	goto	l1716
   500   000666                     u1030:
   501   000666  0E62               	movlw	98
   502   000668  6E2D               	movwf	main@buf^0,c
   503   00066A                     l1716:
   504                           
   505                           ;main.c: 60:         if(color==3){buf[0]='g';}
   506   00066A  0E03               	movlw	3
   507   00066C  1837               	xorwf	main@color^0,w,c
   508   00066E  A4D8               	btfss	status,2,c
   509   000670  EF3C  F003         	goto	u1041
   510   000674  EF3E  F003         	goto	u1040
   511   000678                     u1041:
   512   000678  EF40  F003         	goto	l1720
   513   00067C                     u1040:
   514   00067C  0E67               	movlw	103
   515   00067E  6E2D               	movwf	main@buf^0,c
   516   000680                     l1720:
   517                           
   518                           ;main.c: 61:         if(color==4){buf[0]='p';}
   519   000680  0E04               	movlw	4
   520   000682  1837               	xorwf	main@color^0,w,c
   521   000684  A4D8               	btfss	status,2,c
   522   000686  EF47  F003         	goto	u1051
   523   00068A  EF49  F003         	goto	u1050
   524   00068E                     u1051:
   525   00068E  EF4B  F003         	goto	l1724
   526   000692                     u1050:
   527   000692  0E70               	movlw	112
   528   000694  6E2D               	movwf	main@buf^0,c
   529   000696                     l1724:
   530                           
   531                           ;main.c: 62:         if(color==5){buf[0]='y';}
   532   000696  0E05               	movlw	5
   533   000698  1837               	xorwf	main@color^0,w,c
   534   00069A  A4D8               	btfss	status,2,c
   535   00069C  EF52  F003         	goto	u1061
   536   0006A0  EF54  F003         	goto	u1060
   537   0006A4                     u1061:
   538   0006A4  EF56  F003         	goto	l1728
   539   0006A8                     u1060:
   540   0006A8  0E79               	movlw	121
   541   0006AA  6E2D               	movwf	main@buf^0,c
   542   0006AC                     l1728:
   543                           
   544                           ;main.c: 63:         if(color==6){buf[0]='o';}
   545   0006AC  0E06               	movlw	6
   546   0006AE  1837               	xorwf	main@color^0,w,c
   547   0006B0  A4D8               	btfss	status,2,c
   548   0006B2  EF5D  F003         	goto	u1071
   549   0006B6  EF5F  F003         	goto	u1070
   550   0006BA                     u1071:
   551   0006BA  EF61  F003         	goto	l1732
   552   0006BE                     u1070:
   553   0006BE  0E6F               	movlw	111
   554   0006C0  6E2D               	movwf	main@buf^0,c
   555   0006C2                     l1732:
   556                           
   557                           ;main.c: 64:         if(color==7){buf[0]='l';}
   558   0006C2  0E07               	movlw	7
   559   0006C4  1837               	xorwf	main@color^0,w,c
   560   0006C6  A4D8               	btfss	status,2,c
   561   0006C8  EF68  F003         	goto	u1081
   562   0006CC  EF6A  F003         	goto	u1080
   563   0006D0                     u1081:
   564   0006D0  EF6C  F003         	goto	l1736
   565   0006D4                     u1080:
   566   0006D4  0E6C               	movlw	108
   567   0006D6  6E2D               	movwf	main@buf^0,c
   568   0006D8                     l1736:
   569                           
   570                           ;main.c: 65:         TxBufferedString(&buf);
   571   0006D8  0E2D               	movlw	low main@buf
   572   0006DA  6E07               	movwf	TxBufferedString@string^0,c
   573   0006DC  0E00               	movlw	high main@buf
   574   0006DE  6E08               	movwf	(TxBufferedString@string+1)^0,c
   575   0006E0  EC71  F005         	call	_TxBufferedString	;wreg free
   576   0006E4                     
   577                           ;main.c: 66:         Light(0);
   578   0006E4  0E00               	movlw	0
   579   0006E6  EC88  F004         	call	_Light
   580   0006EA                     
   581                           ;main.c: 67:         for (j=0;j<3;j++){_delay((unsigned long)((900)*(64000000/4000.0)));
      +                          }
   582   0006EA  0E00               	movlw	0
   583   0006EC  6E30               	movwf	main@j^0,c
   584   0006EE                     l1746:
   585   0006EE  0E4A               	movlw	74
   586   0006F0  6E2C               	movwf	(??_main+1)^0,c
   587   0006F2  0E0E               	movlw	14
   588   0006F4  6E2B               	movwf	??_main^0,c
   589   0006F6  0E19               	movlw	25
   590   0006F8                     u1127:
   591   0006F8  2EE8               	decfsz	wreg,f,c
   592   0006FA  D7FE               	bra	u1127
   593   0006FC  2E2B               	decfsz	??_main^0,f,c
   594   0006FE  D7FC               	bra	u1127
   595   000700  2E2C               	decfsz	(??_main+1)^0,f,c
   596   000702  D7FA               	bra	u1127
   597   000704  F000               	nop	
   598   000706  2A30               	incf	main@j^0,f,c
   599   000708  0E02               	movlw	2
   600   00070A  6430               	cpfsgt	main@j^0,c
   601   00070C  EF8A  F003         	goto	u1091
   602   000710  EF8C  F003         	goto	u1090
   603   000714                     u1091:
   604   000714  EF77  F003         	goto	l1746
   605   000718                     u1090:
   606   000718  EF0C  F003         	goto	l1700
   607   00071C  EF4D  F000         	goto	start
   608   000720                     __end_of_main:
   609                           	callstack 0
   610                           
   611 ;; *************** function _readcard *****************
   612 ;; Defined at:
   613 ;;		line 20 in file "card.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  colorL          2   26[COMRAM] PTR struct RGB_val
   616 ;;		 -> main@colorL(6), 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  ratio2          4   38[COMRAM] float 
   619 ;;  ratio1          4   34[COMRAM] float 
   620 ;;  ratio3          4   30[COMRAM] float 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      unsigned char 
   623 ;; Registers used:
   624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   631 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   633 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   634 ;;Total ram usage:       16 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 6
   637 ;; This function calls:
   638 ;;		___flge
   639 ;;		___lwdiv
   640 ;;		___xxtofl
   641 ;;		_levels
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text1
   648   00009E                     __ptext1:
   649                           	callstack 0
   650   00009E                     _readcard:
   651                           	callstack 24
   652   00009E                     
   653                           ;card.c: 21:     levels(0,colorL);
   654   00009E  0E00               	movlw	0
   655   0000A0  6E12               	movwf	(levels@i+1)^0,c
   656   0000A2  0E00               	movlw	0
   657   0000A4  6E11               	movwf	levels@i^0,c
   658   0000A6  C01B  F013         	movff	readcard@colorL,levels@colorL
   659   0000AA  C01C  F014         	movff	readcard@colorL+1,levels@colorL+1
   660   0000AE  EC12  F004         	call	_levels	;wreg free
   661                           
   662                           ;card.c: 23:     float ratio1=colorL->R/colorL->B;
   663   0000B2  EE20 F004          	lfsr	2,4
   664   0000B6  501B               	movf	readcard@colorL^0,w,c
   665   0000B8  26D9               	addwf	fsr2l,f,c
   666   0000BA  501C               	movf	(readcard@colorL+1)^0,w,c
   667   0000BC  22DA               	addwfc	fsr2h,f,c
   668   0000BE  CFDE F008          	movff	postinc2,___lwdiv@divisor
   669   0000C2  CFDD F009          	movff	postdec2,___lwdiv@divisor+1
   670   0000C6  C01B  FFD9         	movff	readcard@colorL,fsr2l
   671   0000CA  C01C  FFDA         	movff	readcard@colorL+1,fsr2h
   672   0000CE  CFDE F006          	movff	postinc2,___lwdiv@dividend
   673   0000D2  CFDD F007          	movff	postdec2,___lwdiv@dividend+1
   674   0000D6  EC4E  F004         	call	___lwdiv	;wreg free
   675   0000DA  C006  F00D         	movff	?___lwdiv,___xxtofl@val
   676   0000DE  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
   677   0000E2  6A0F               	clrf	(___xxtofl@val+2)^0,c
   678   0000E4  6A10               	clrf	(___xxtofl@val+3)^0,c
   679   0000E6  0E00               	movlw	0
   680   0000E8  EC24  F002         	call	___xxtofl
   681   0000EC  C00D  F023         	movff	?___xxtofl,readcard@ratio1
   682   0000F0  C00E  F024         	movff	?___xxtofl+1,readcard@ratio1+1
   683   0000F4  C00F  F025         	movff	?___xxtofl+2,readcard@ratio1+2
   684   0000F8  C010  F026         	movff	?___xxtofl+3,readcard@ratio1+3
   685                           
   686                           ;card.c: 24:     float ratio2=colorL->R/colorL->G;
   687   0000FC  EE20 F002          	lfsr	2,2
   688   000100  501B               	movf	readcard@colorL^0,w,c
   689   000102  26D9               	addwf	fsr2l,f,c
   690   000104  501C               	movf	(readcard@colorL+1)^0,w,c
   691   000106  22DA               	addwfc	fsr2h,f,c
   692   000108  CFDE F008          	movff	postinc2,___lwdiv@divisor
   693   00010C  CFDD F009          	movff	postdec2,___lwdiv@divisor+1
   694   000110  C01B  FFD9         	movff	readcard@colorL,fsr2l
   695   000114  C01C  FFDA         	movff	readcard@colorL+1,fsr2h
   696   000118  CFDE F006          	movff	postinc2,___lwdiv@dividend
   697   00011C  CFDD F007          	movff	postdec2,___lwdiv@dividend+1
   698   000120  EC4E  F004         	call	___lwdiv	;wreg free
   699   000124  C006  F00D         	movff	?___lwdiv,___xxtofl@val
   700   000128  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
   701   00012C  6A0F               	clrf	(___xxtofl@val+2)^0,c
   702   00012E  6A10               	clrf	(___xxtofl@val+3)^0,c
   703   000130  0E00               	movlw	0
   704   000132  EC24  F002         	call	___xxtofl
   705   000136  C00D  F027         	movff	?___xxtofl,readcard@ratio2
   706   00013A  C00E  F028         	movff	?___xxtofl+1,readcard@ratio2+1
   707   00013E  C00F  F029         	movff	?___xxtofl+2,readcard@ratio2+2
   708   000142  C010  F02A         	movff	?___xxtofl+3,readcard@ratio2+3
   709                           
   710                           ;card.c: 25:     float ratio3=colorL->B/colorL->G;
   711   000146  EE20 F002          	lfsr	2,2
   712   00014A  501B               	movf	readcard@colorL^0,w,c
   713   00014C  26D9               	addwf	fsr2l,f,c
   714   00014E  501C               	movf	(readcard@colorL+1)^0,w,c
   715   000150  22DA               	addwfc	fsr2h,f,c
   716   000152  CFDE F008          	movff	postinc2,___lwdiv@divisor
   717   000156  CFDD F009          	movff	postdec2,___lwdiv@divisor+1
   718   00015A  EE20 F004          	lfsr	2,4
   719   00015E  501B               	movf	readcard@colorL^0,w,c
   720   000160  26D9               	addwf	fsr2l,f,c
   721   000162  501C               	movf	(readcard@colorL+1)^0,w,c
   722   000164  22DA               	addwfc	fsr2h,f,c
   723   000166  CFDE F006          	movff	postinc2,___lwdiv@dividend
   724   00016A  CFDD F007          	movff	postdec2,___lwdiv@dividend+1
   725   00016E  EC4E  F004         	call	___lwdiv	;wreg free
   726   000172  C006  F00D         	movff	?___lwdiv,___xxtofl@val
   727   000176  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
   728   00017A  6A0F               	clrf	(___xxtofl@val+2)^0,c
   729   00017C  6A10               	clrf	(___xxtofl@val+3)^0,c
   730   00017E  0E00               	movlw	0
   731   000180  EC24  F002         	call	___xxtofl
   732   000184  C00D  F01F         	movff	?___xxtofl,readcard@ratio3
   733   000188  C00E  F020         	movff	?___xxtofl+1,readcard@ratio3+1
   734   00018C  C00F  F021         	movff	?___xxtofl+2,readcard@ratio3+2
   735   000190  C010  F022         	movff	?___xxtofl+3,readcard@ratio3+3
   736   000194                     
   737                           ;card.c: 28:     if ((ratio1>0.7 & ratio1<1.4) & (ratio2>0.7 & ratio2<1.4) & (ratio3>0.7
      +                           & ratio3<1.4)){
   738   000194  0E33               	movlw	51
   739   000196  6E06               	movwf	___flge@ff1^0,c
   740   000198  0E33               	movlw	51
   741   00019A  6E07               	movwf	(___flge@ff1+1)^0,c
   742   00019C  0E33               	movlw	51
   743   00019E  6E08               	movwf	(___flge@ff1+2)^0,c
   744   0001A0  0E3F               	movlw	63
   745   0001A2  6E09               	movwf	(___flge@ff1+3)^0,c
   746   0001A4  C023  F00A         	movff	readcard@ratio1,___flge@ff2
   747   0001A8  C024  F00B         	movff	readcard@ratio1+1,___flge@ff2+1
   748   0001AC  C025  F00C         	movff	readcard@ratio1+2,___flge@ff2+2
   749   0001B0  C026  F00D         	movff	readcard@ratio1+3,___flge@ff2+3
   750   0001B4  EC90  F003         	call	___flge	;wreg free
   751   0001B8  B0D8               	btfsc	status,0,c
   752   0001BA  EFE1  F000         	goto	u871
   753   0001BE  EFE3  F000         	goto	u870
   754   0001C2                     u871:
   755   0001C2  EF77  F001         	goto	l1634
   756   0001C6                     u870:
   757   0001C6  C023  F006         	movff	readcard@ratio1,___flge@ff1
   758   0001CA  C024  F007         	movff	readcard@ratio1+1,___flge@ff1+1
   759   0001CE  C025  F008         	movff	readcard@ratio1+2,___flge@ff1+2
   760   0001D2  C026  F009         	movff	readcard@ratio1+3,___flge@ff1+3
   761   0001D6  0E33               	movlw	51
   762   0001D8  6E0A               	movwf	___flge@ff2^0,c
   763   0001DA  0E33               	movlw	51
   764   0001DC  6E0B               	movwf	(___flge@ff2+1)^0,c
   765   0001DE  0EB3               	movlw	179
   766   0001E0  6E0C               	movwf	(___flge@ff2+2)^0,c
   767   0001E2  0E3F               	movlw	63
   768   0001E4  6E0D               	movwf	(___flge@ff2+3)^0,c
   769   0001E6  EC90  F003         	call	___flge	;wreg free
   770   0001EA  B0D8               	btfsc	status,0,c
   771   0001EC  EFFA  F000         	goto	u881
   772   0001F0  EFFC  F000         	goto	u880
   773   0001F4                     u881:
   774   0001F4  EF77  F001         	goto	l1634
   775   0001F8                     u880:
   776   0001F8  0E33               	movlw	51
   777   0001FA  6E06               	movwf	___flge@ff1^0,c
   778   0001FC  0E33               	movlw	51
   779   0001FE  6E07               	movwf	(___flge@ff1+1)^0,c
   780   000200  0E33               	movlw	51
   781   000202  6E08               	movwf	(___flge@ff1+2)^0,c
   782   000204  0E3F               	movlw	63
   783   000206  6E09               	movwf	(___flge@ff1+3)^0,c
   784   000208  C027  F00A         	movff	readcard@ratio2,___flge@ff2
   785   00020C  C028  F00B         	movff	readcard@ratio2+1,___flge@ff2+1
   786   000210  C029  F00C         	movff	readcard@ratio2+2,___flge@ff2+2
   787   000214  C02A  F00D         	movff	readcard@ratio2+3,___flge@ff2+3
   788   000218  EC90  F003         	call	___flge	;wreg free
   789   00021C  B0D8               	btfsc	status,0,c
   790   00021E  EF13  F001         	goto	u891
   791   000222  EF15  F001         	goto	u890
   792   000226                     u891:
   793   000226  EF77  F001         	goto	l1634
   794   00022A                     u890:
   795   00022A  C027  F006         	movff	readcard@ratio2,___flge@ff1
   796   00022E  C028  F007         	movff	readcard@ratio2+1,___flge@ff1+1
   797   000232  C029  F008         	movff	readcard@ratio2+2,___flge@ff1+2
   798   000236  C02A  F009         	movff	readcard@ratio2+3,___flge@ff1+3
   799   00023A  0E33               	movlw	51
   800   00023C  6E0A               	movwf	___flge@ff2^0,c
   801   00023E  0E33               	movlw	51
   802   000240  6E0B               	movwf	(___flge@ff2+1)^0,c
   803   000242  0EB3               	movlw	179
   804   000244  6E0C               	movwf	(___flge@ff2+2)^0,c
   805   000246  0E3F               	movlw	63
   806   000248  6E0D               	movwf	(___flge@ff2+3)^0,c
   807   00024A  EC90  F003         	call	___flge	;wreg free
   808   00024E  B0D8               	btfsc	status,0,c
   809   000250  EF2C  F001         	goto	u901
   810   000254  EF2E  F001         	goto	u900
   811   000258                     u901:
   812   000258  EF77  F001         	goto	l1634
   813   00025C                     u900:
   814   00025C  0E33               	movlw	51
   815   00025E  6E06               	movwf	___flge@ff1^0,c
   816   000260  0E33               	movlw	51
   817   000262  6E07               	movwf	(___flge@ff1+1)^0,c
   818   000264  0E33               	movlw	51
   819   000266  6E08               	movwf	(___flge@ff1+2)^0,c
   820   000268  0E3F               	movlw	63
   821   00026A  6E09               	movwf	(___flge@ff1+3)^0,c
   822   00026C  C01F  F00A         	movff	readcard@ratio3,___flge@ff2
   823   000270  C020  F00B         	movff	readcard@ratio3+1,___flge@ff2+1
   824   000274  C021  F00C         	movff	readcard@ratio3+2,___flge@ff2+2
   825   000278  C022  F00D         	movff	readcard@ratio3+3,___flge@ff2+3
   826   00027C  EC90  F003         	call	___flge	;wreg free
   827   000280  B0D8               	btfsc	status,0,c
   828   000282  EF45  F001         	goto	u911
   829   000286  EF47  F001         	goto	u910
   830   00028A                     u911:
   831   00028A  EF77  F001         	goto	l1634
   832   00028E                     u910:
   833   00028E  C01F  F006         	movff	readcard@ratio3,___flge@ff1
   834   000292  C020  F007         	movff	readcard@ratio3+1,___flge@ff1+1
   835   000296  C021  F008         	movff	readcard@ratio3+2,___flge@ff1+2
   836   00029A  C022  F009         	movff	readcard@ratio3+3,___flge@ff1+3
   837   00029E  0E33               	movlw	51
   838   0002A0  6E0A               	movwf	___flge@ff2^0,c
   839   0002A2  0E33               	movlw	51
   840   0002A4  6E0B               	movwf	(___flge@ff2+1)^0,c
   841   0002A6  0EB3               	movlw	179
   842   0002A8  6E0C               	movwf	(___flge@ff2+2)^0,c
   843   0002AA  0E3F               	movlw	63
   844   0002AC  6E0D               	movwf	(___flge@ff2+3)^0,c
   845   0002AE  EC90  F003         	call	___flge	;wreg free
   846   0002B2  B0D8               	btfsc	status,0,c
   847   0002B4  EF5E  F001         	goto	u921
   848   0002B8  EF60  F001         	goto	u920
   849   0002BC                     u921:
   850   0002BC  EF77  F001         	goto	l1634
   851   0002C0                     u920:
   852   0002C0                     
   853                           ;card.c: 29:         if(colorL->B>4000){return 7;}
   854   0002C0  EE20 F004          	lfsr	2,4
   855   0002C4  501B               	movf	readcard@colorL^0,w,c
   856   0002C6  26D9               	addwf	fsr2l,f,c
   857   0002C8  501C               	movf	(readcard@colorL+1)^0,w,c
   858   0002CA  22DA               	addwfc	fsr2h,f,c
   859   0002CC  0EA1               	movlw	161
   860   0002CE  5CDE               	subwf	postinc2,w,c
   861   0002D0  0E0F               	movlw	15
   862   0002D2  58DE               	subwfb	postinc2,w,c
   863   0002D4  A0D8               	btfss	status,0,c
   864   0002D6  EF6F  F001         	goto	u931
   865   0002DA  EF71  F001         	goto	u930
   866   0002DE                     u931:
   867   0002DE  EF74  F001         	goto	l1630
   868   0002E2                     u930:
   869   0002E2  0E07               	movlw	7
   870   0002E4  EF23  F002         	goto	l111
   871   0002E8                     l1630:
   872                           
   873                           ;card.c: 30:         return 2;
   874   0002E8  0E02               	movlw	2
   875   0002EA  EF23  F002         	goto	l111
   876   0002EE                     l1634:
   877                           
   878                           ;card.c: 33:     if (ratio1>1.4 & ratio2>1.4){
   879   0002EE  0E33               	movlw	51
   880   0002F0  6E06               	movwf	___flge@ff1^0,c
   881   0002F2  0E33               	movlw	51
   882   0002F4  6E07               	movwf	(___flge@ff1+1)^0,c
   883   0002F6  0EB3               	movlw	179
   884   0002F8  6E08               	movwf	(___flge@ff1+2)^0,c
   885   0002FA  0E3F               	movlw	63
   886   0002FC  6E09               	movwf	(___flge@ff1+3)^0,c
   887   0002FE  C023  F00A         	movff	readcard@ratio1,___flge@ff2
   888   000302  C024  F00B         	movff	readcard@ratio1+1,___flge@ff2+1
   889   000306  C025  F00C         	movff	readcard@ratio1+2,___flge@ff2+2
   890   00030A  C026  F00D         	movff	readcard@ratio1+3,___flge@ff2+3
   891   00030E  EC90  F003         	call	___flge	;wreg free
   892   000312  B0D8               	btfsc	status,0,c
   893   000314  EF8E  F001         	goto	u941
   894   000318  EF90  F001         	goto	u940
   895   00031C                     u941:
   896   00031C  EF06  F002         	goto	l1666
   897   000320                     u940:
   898   000320  0E33               	movlw	51
   899   000322  6E06               	movwf	___flge@ff1^0,c
   900   000324  0E33               	movlw	51
   901   000326  6E07               	movwf	(___flge@ff1+1)^0,c
   902   000328  0EB3               	movlw	179
   903   00032A  6E08               	movwf	(___flge@ff1+2)^0,c
   904   00032C  0E3F               	movlw	63
   905   00032E  6E09               	movwf	(___flge@ff1+3)^0,c
   906   000330  C027  F00A         	movff	readcard@ratio2,___flge@ff2
   907   000334  C028  F00B         	movff	readcard@ratio2+1,___flge@ff2+1
   908   000338  C029  F00C         	movff	readcard@ratio2+2,___flge@ff2+2
   909   00033C  C02A  F00D         	movff	readcard@ratio2+3,___flge@ff2+3
   910   000340  EC90  F003         	call	___flge	;wreg free
   911   000344  B0D8               	btfsc	status,0,c
   912   000346  EFA7  F001         	goto	u951
   913   00034A  EFA9  F001         	goto	u950
   914   00034E                     u951:
   915   00034E  EF06  F002         	goto	l1666
   916   000352                     u950:
   917   000352                     
   918                           ;card.c: 35:         levels(2,colorL);
   919   000352  0E00               	movlw	0
   920   000354  6E12               	movwf	(levels@i+1)^0,c
   921   000356  0E02               	movlw	2
   922   000358  6E11               	movwf	levels@i^0,c
   923   00035A  C01B  F013         	movff	readcard@colorL,levels@colorL
   924   00035E  C01C  F014         	movff	readcard@colorL+1,levels@colorL+1
   925   000362  EC12  F004         	call	_levels	;wreg free
   926   000366                     
   927                           ;card.c: 36:         if(colorL->B>1000){return 4;}
   928   000366  EE20 F004          	lfsr	2,4
   929   00036A  501B               	movf	readcard@colorL^0,w,c
   930   00036C  26D9               	addwf	fsr2l,f,c
   931   00036E  501C               	movf	(readcard@colorL+1)^0,w,c
   932   000370  22DA               	addwfc	fsr2h,f,c
   933   000372  0EE9               	movlw	233
   934   000374  5CDE               	subwf	postinc2,w,c
   935   000376  0E03               	movlw	3
   936   000378  58DE               	subwfb	postinc2,w,c
   937   00037A  A0D8               	btfss	status,0,c
   938   00037C  EFC2  F001         	goto	u961
   939   000380  EFC4  F001         	goto	u960
   940   000384                     u961:
   941   000384  EFC7  F001         	goto	l1646
   942   000388                     u960:
   943   000388  0E04               	movlw	4
   944   00038A  EF23  F002         	goto	l111
   945   00038E                     l1646:
   946                           
   947                           ;card.c: 38:         levels(3,colorL);
   948   00038E  0E00               	movlw	0
   949   000390  6E12               	movwf	(levels@i+1)^0,c
   950   000392  0E03               	movlw	3
   951   000394  6E11               	movwf	levels@i^0,c
   952   000396  C01B  F013         	movff	readcard@colorL,levels@colorL
   953   00039A  C01C  F014         	movff	readcard@colorL+1,levels@colorL+1
   954   00039E  EC12  F004         	call	_levels	;wreg free
   955   0003A2                     
   956                           ;card.c: 39:         if(colorL->G>5500){return 5;}
   957   0003A2  EE20 F002          	lfsr	2,2
   958   0003A6  501B               	movf	readcard@colorL^0,w,c
   959   0003A8  26D9               	addwf	fsr2l,f,c
   960   0003AA  501C               	movf	(readcard@colorL+1)^0,w,c
   961   0003AC  22DA               	addwfc	fsr2h,f,c
   962   0003AE  0E7D               	movlw	125
   963   0003B0  5CDE               	subwf	postinc2,w,c
   964   0003B2  0E15               	movlw	21
   965   0003B4  58DE               	subwfb	postinc2,w,c
   966   0003B6  A0D8               	btfss	status,0,c
   967   0003B8  EFE0  F001         	goto	u971
   968   0003BC  EFE2  F001         	goto	u970
   969   0003C0                     u971:
   970   0003C0  EFE5  F001         	goto	l1654
   971   0003C4                     u970:
   972   0003C4  0E05               	movlw	5
   973   0003C6  EF23  F002         	goto	l111
   974   0003CA                     l1654:
   975                           
   976                           ;card.c: 41:         levels(3,colorL);
   977   0003CA  0E00               	movlw	0
   978   0003CC  6E12               	movwf	(levels@i+1)^0,c
   979   0003CE  0E03               	movlw	3
   980   0003D0  6E11               	movwf	levels@i^0,c
   981   0003D2  C01B  F013         	movff	readcard@colorL,levels@colorL
   982   0003D6  C01C  F014         	movff	readcard@colorL+1,levels@colorL+1
   983   0003DA  EC12  F004         	call	_levels	;wreg free
   984   0003DE                     
   985                           ;card.c: 42:         if(colorL->G>2000){return 6;}
   986   0003DE  EE20 F002          	lfsr	2,2
   987   0003E2  501B               	movf	readcard@colorL^0,w,c
   988   0003E4  26D9               	addwf	fsr2l,f,c
   989   0003E6  501C               	movf	(readcard@colorL+1)^0,w,c
   990   0003E8  22DA               	addwfc	fsr2h,f,c
   991   0003EA  0ED1               	movlw	209
   992   0003EC  5CDE               	subwf	postinc2,w,c
   993   0003EE  0E07               	movlw	7
   994   0003F0  58DE               	subwfb	postinc2,w,c
   995   0003F2  A0D8               	btfss	status,0,c
   996   0003F4  EFFE  F001         	goto	u981
   997   0003F8  EF00  F002         	goto	u980
   998   0003FC                     u981:
   999   0003FC  EF03  F002         	goto	l1662
  1000   000400                     u980:
  1001   000400  0E06               	movlw	6
  1002   000402  EF23  F002         	goto	l111
  1003   000406                     l1662:
  1004                           
  1005                           ;card.c: 45:         return 1;
  1006   000406  0E01               	movlw	1
  1007   000408  EF23  F002         	goto	l111
  1008   00040C                     l1666:
  1009                           
  1010                           ;card.c: 48:     levels(1,colorL);
  1011   00040C  0E00               	movlw	0
  1012   00040E  6E12               	movwf	(levels@i+1)^0,c
  1013   000410  0E01               	movlw	1
  1014   000412  6E11               	movwf	levels@i^0,c
  1015   000414  C01B  F013         	movff	readcard@colorL,levels@colorL
  1016   000418  C01C  F014         	movff	readcard@colorL+1,levels@colorL+1
  1017   00041C  EC12  F004         	call	_levels	;wreg free
  1018   000420                     
  1019                           ;card.c: 49:     if(colorL->R>1000){return 0;}
  1020   000420  C01B  FFD9         	movff	readcard@colorL,fsr2l
  1021   000424  C01C  FFDA         	movff	readcard@colorL+1,fsr2h
  1022   000428  0EE9               	movlw	233
  1023   00042A  5CDE               	subwf	postinc2,w,c
  1024   00042C  0E03               	movlw	3
  1025   00042E  58DE               	subwfb	postinc2,w,c
  1026   000430  A0D8               	btfss	status,0,c
  1027   000432  EF1D  F002         	goto	u991
  1028   000436  EF1F  F002         	goto	u990
  1029   00043A                     u991:
  1030   00043A  EF22  F002         	goto	l1674
  1031   00043E                     u990:
  1032   00043E  0E00               	movlw	0
  1033   000440  EF23  F002         	goto	l111
  1034   000444                     l1674:
  1035                           
  1036                           ;card.c: 50:     return 3;
  1037   000444  0E03               	movlw	3
  1038   000446                     l111:
  1039   000446  0012               	return		;funcret
  1040   000448                     __end_of_readcard:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function _levels *****************
  1044 ;; Defined at:
  1045 ;;		line 53 in file "card.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  i               2   16[COMRAM] int 
  1048 ;;  colorL          2   18[COMRAM] PTR struct RGB_val
  1049 ;;		 -> main@colorL(6), 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1064 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;Total ram usage:        6 bytes
  1066 ;; Hardware stack levels used: 1
  1067 ;; Hardware stack levels required when called: 5
  1068 ;; This function calls:
  1069 ;;		_Light
  1070 ;;		_color_read_Blue
  1071 ;;		_color_read_Green
  1072 ;;		_color_read_Red
  1073 ;; This function is called by:
  1074 ;;		_readcard
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text2
  1079   000824                     __ptext2:
  1080                           	callstack 0
  1081   000824                     _levels:
  1082                           	callstack 24
  1083   000824                     
  1084                           ;card.c: 54:         Light(i);
  1085   000824  5011               	movf	levels@i^0,w,c
  1086   000826  EC88  F004         	call	_Light
  1087   00082A                     
  1088                           ;card.c: 55:         _delay((unsigned long)((900)*(64000000/4000.0)));
  1089   00082A  0E4A               	movlw	74
  1090   00082C  6E16               	movwf	(??_levels+1)^0,c
  1091   00082E  0E0E               	movlw	14
  1092   000830  6E15               	movwf	??_levels^0,c
  1093   000832  0E19               	movlw	25
  1094   000834                     u1137:
  1095   000834  2EE8               	decfsz	wreg,f,c
  1096   000836  D7FE               	bra	u1137
  1097   000838  2E15               	decfsz	??_levels^0,f,c
  1098   00083A  D7FC               	bra	u1137
  1099   00083C  2E16               	decfsz	(??_levels+1)^0,f,c
  1100   00083E  D7FA               	bra	u1137
  1101   000840  F000               	nop	
  1102   000842                     
  1103                           ;card.c: 56:         if (i==1){LATFbits.LATF7=1;}
  1104   000842  0411               	decf	levels@i^0,w,c
  1105   000844  1012               	iorwf	(levels@i+1)^0,w,c
  1106   000846  A4D8               	btfss	status,2,c
  1107   000848  EF28  F004         	goto	u681
  1108   00084C  EF2A  F004         	goto	u680
  1109   000850                     u681:
  1110   000850  EF2B  F004         	goto	l1508
  1111   000854                     u680:
  1112   000854  8E7E               	bsf	126,7,c	;volatile
  1113   000856                     l1508:
  1114                           
  1115                           ;card.c: 57:         colorL->R = color_read_Red();
  1116   000856  ECB8  F004         	call	_color_read_Red	;wreg free
  1117   00085A  C013  FFD9         	movff	levels@colorL,fsr2l
  1118   00085E  C014  FFDA         	movff	levels@colorL+1,fsr2h
  1119   000862  C00A  FFDE         	movff	?_color_read_Red,postinc2
  1120   000866  C00B  FFDD         	movff	?_color_read_Red+1,postdec2
  1121                           
  1122                           ;card.c: 58:         colorL->B = color_read_Blue();
  1123   00086A  EC08  F005         	call	_color_read_Blue	;wreg free
  1124   00086E  EE20 F004          	lfsr	2,4
  1125   000872  5013               	movf	levels@colorL^0,w,c
  1126   000874  26D9               	addwf	fsr2l,f,c
  1127   000876  5014               	movf	(levels@colorL+1)^0,w,c
  1128   000878  22DA               	addwfc	fsr2h,f,c
  1129   00087A  C00A  FFDE         	movff	?_color_read_Blue,postinc2
  1130   00087E  C00B  FFDD         	movff	?_color_read_Blue+1,postdec2
  1131                           
  1132                           ;card.c: 59:         colorL->G = color_read_Green();
  1133   000882  ECE0  F004         	call	_color_read_Green	;wreg free
  1134   000886  EE20 F002          	lfsr	2,2
  1135   00088A  5013               	movf	levels@colorL^0,w,c
  1136   00088C  26D9               	addwf	fsr2l,f,c
  1137   00088E  5014               	movf	(levels@colorL+1)^0,w,c
  1138   000890  22DA               	addwfc	fsr2h,f,c
  1139   000892  C00A  FFDE         	movff	?_color_read_Green,postinc2
  1140   000896  C00B  FFDD         	movff	?_color_read_Green+1,postdec2
  1141   00089A  0012               	return		;funcret
  1142   00089C                     __end_of_levels:
  1143                           	callstack 0
  1144                           
  1145 ;; *************** function _color_read_Red *****************
  1146 ;; Defined at:
  1147 ;;		line 29 in file "color.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  tmp             2   14[COMRAM] unsigned int 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  2    9[COMRAM] unsigned int 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1163 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1164 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1165 ;;Total ram usage:        7 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; Hardware stack levels required when called: 4
  1168 ;; This function calls:
  1169 ;;		_I2C_2_Master_Read
  1170 ;;		_I2C_2_Master_RepStart
  1171 ;;		_I2C_2_Master_Start
  1172 ;;		_I2C_2_Master_Stop
  1173 ;;		_I2C_2_Master_Write
  1174 ;; This function is called by:
  1175 ;;		_levels
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text3
  1180   000970                     __ptext3:
  1181                           	callstack 0
  1182   000970                     _color_read_Red:
  1183                           	callstack 24
  1184   000970                     
  1185                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  1186   000970  EC5A  F006         	call	_I2C_2_Master_Start	;wreg free
  1187                           
  1188                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  1189   000974  0E52               	movlw	82
  1190   000976  EC4A  F006         	call	_I2C_2_Master_Write
  1191                           
  1192                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  1193   00097A  0EB6               	movlw	182
  1194   00097C  EC4A  F006         	call	_I2C_2_Master_Write
  1195                           
  1196                           ;color.c: 35:  I2C_2_Master_RepStart();
  1197   000980  EC50  F006         	call	_I2C_2_Master_RepStart	;wreg free
  1198                           
  1199                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  1200   000984  0E53               	movlw	83
  1201   000986  EC4A  F006         	call	_I2C_2_Master_Write
  1202                           
  1203                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  1204   00098A  0E01               	movlw	1
  1205   00098C  EC30  F005         	call	_I2C_2_Master_Read
  1206   000990  6E0C               	movwf	??_color_read_Red^0,c
  1207   000992  500C               	movf	??_color_read_Red^0,w,c
  1208   000994  6E0F               	movwf	color_read_Red@tmp^0,c
  1209   000996  6A10               	clrf	(color_read_Red@tmp+1)^0,c
  1210                           
  1211                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1212   000998  0E00               	movlw	0
  1213   00099A  EC30  F005         	call	_I2C_2_Master_Read
  1214   00099E  6E0C               	movwf	??_color_read_Red^0,c
  1215   0009A0  500C               	movf	??_color_read_Red^0,w,c
  1216   0009A2  6E0E               	movwf	(??_color_read_Red+2)^0,c
  1217   0009A4  6A0D               	clrf	(??_color_read_Red+1)^0,c
  1218   0009A6  500F               	movf	color_read_Red@tmp^0,w,c
  1219   0009A8  100D               	iorwf	(??_color_read_Red+1)^0,w,c
  1220   0009AA  6E0F               	movwf	color_read_Red@tmp^0,c
  1221   0009AC  5010               	movf	(color_read_Red@tmp+1)^0,w,c
  1222   0009AE  100E               	iorwf	(??_color_read_Red+2)^0,w,c
  1223   0009B0  6E10               	movwf	(color_read_Red@tmp+1)^0,c
  1224                           
  1225                           ;color.c: 39:  I2C_2_Master_Stop();
  1226   0009B2  EC55  F006         	call	_I2C_2_Master_Stop	;wreg free
  1227   0009B6                     
  1228                           ;color.c: 40:  return tmp;
  1229   0009B6  C00F  F00A         	movff	color_read_Red@tmp,?_color_read_Red
  1230   0009BA  C010  F00B         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1231   0009BE  0012               	return		;funcret
  1232   0009C0                     __end_of_color_read_Red:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function _color_read_Green *****************
  1236 ;; Defined at:
  1237 ;;		line 59 in file "color.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  tmp             2   14[COMRAM] unsigned int 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  2    9[COMRAM] unsigned int 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1253 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1254 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1255 ;;Total ram usage:        7 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 4
  1258 ;; This function calls:
  1259 ;;		_I2C_2_Master_Read
  1260 ;;		_I2C_2_Master_RepStart
  1261 ;;		_I2C_2_Master_Start
  1262 ;;		_I2C_2_Master_Stop
  1263 ;;		_I2C_2_Master_Write
  1264 ;; This function is called by:
  1265 ;;		_levels
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text4
  1270   0009C0                     __ptext4:
  1271                           	callstack 0
  1272   0009C0                     _color_read_Green:
  1273                           	callstack 24
  1274   0009C0                     
  1275                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  1276   0009C0  EC5A  F006         	call	_I2C_2_Master_Start	;wreg free
  1277                           
  1278                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  1279   0009C4  0E52               	movlw	82
  1280   0009C6  EC4A  F006         	call	_I2C_2_Master_Write
  1281                           
  1282                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x18);
  1283   0009CA  0EB8               	movlw	184
  1284   0009CC  EC4A  F006         	call	_I2C_2_Master_Write
  1285                           
  1286                           ;color.c: 65:  I2C_2_Master_RepStart();
  1287   0009D0  EC50  F006         	call	_I2C_2_Master_RepStart	;wreg free
  1288                           
  1289                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  1290   0009D4  0E53               	movlw	83
  1291   0009D6  EC4A  F006         	call	_I2C_2_Master_Write
  1292                           
  1293                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  1294   0009DA  0E01               	movlw	1
  1295   0009DC  EC30  F005         	call	_I2C_2_Master_Read
  1296   0009E0  6E0C               	movwf	??_color_read_Green^0,c
  1297   0009E2  500C               	movf	??_color_read_Green^0,w,c
  1298   0009E4  6E0F               	movwf	color_read_Green@tmp^0,c
  1299   0009E6  6A10               	clrf	(color_read_Green@tmp+1)^0,c
  1300                           
  1301                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1302   0009E8  0E00               	movlw	0
  1303   0009EA  EC30  F005         	call	_I2C_2_Master_Read
  1304   0009EE  6E0C               	movwf	??_color_read_Green^0,c
  1305   0009F0  500C               	movf	??_color_read_Green^0,w,c
  1306   0009F2  6E0E               	movwf	(??_color_read_Green+2)^0,c
  1307   0009F4  6A0D               	clrf	(??_color_read_Green+1)^0,c
  1308   0009F6  500F               	movf	color_read_Green@tmp^0,w,c
  1309   0009F8  100D               	iorwf	(??_color_read_Green+1)^0,w,c
  1310   0009FA  6E0F               	movwf	color_read_Green@tmp^0,c
  1311   0009FC  5010               	movf	(color_read_Green@tmp+1)^0,w,c
  1312   0009FE  100E               	iorwf	(??_color_read_Green+2)^0,w,c
  1313   000A00  6E10               	movwf	(color_read_Green@tmp+1)^0,c
  1314                           
  1315                           ;color.c: 69:  I2C_2_Master_Stop();
  1316   000A02  EC55  F006         	call	_I2C_2_Master_Stop	;wreg free
  1317   000A06                     
  1318                           ;color.c: 70:  return tmp;
  1319   000A06  C00F  F00A         	movff	color_read_Green@tmp,?_color_read_Green
  1320   000A0A  C010  F00B         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1321   000A0E  0012               	return		;funcret
  1322   000A10                     __end_of_color_read_Green:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function _color_read_Blue *****************
  1326 ;; Defined at:
  1327 ;;		line 45 in file "color.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  tmp             2   14[COMRAM] unsigned int 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  2    9[COMRAM] unsigned int 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1342 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1343 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1344 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1345 ;;Total ram usage:        7 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 4
  1348 ;; This function calls:
  1349 ;;		_I2C_2_Master_Read
  1350 ;;		_I2C_2_Master_RepStart
  1351 ;;		_I2C_2_Master_Start
  1352 ;;		_I2C_2_Master_Stop
  1353 ;;		_I2C_2_Master_Write
  1354 ;; This function is called by:
  1355 ;;		_levels
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text5
  1360   000A10                     __ptext5:
  1361                           	callstack 0
  1362   000A10                     _color_read_Blue:
  1363                           	callstack 24
  1364   000A10                     
  1365                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  1366   000A10  EC5A  F006         	call	_I2C_2_Master_Start	;wreg free
  1367                           
  1368                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  1369   000A14  0E52               	movlw	82
  1370   000A16  EC4A  F006         	call	_I2C_2_Master_Write
  1371                           
  1372                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x1A);
  1373   000A1A  0EBA               	movlw	186
  1374   000A1C  EC4A  F006         	call	_I2C_2_Master_Write
  1375                           
  1376                           ;color.c: 51:  I2C_2_Master_RepStart();
  1377   000A20  EC50  F006         	call	_I2C_2_Master_RepStart	;wreg free
  1378                           
  1379                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  1380   000A24  0E53               	movlw	83
  1381   000A26  EC4A  F006         	call	_I2C_2_Master_Write
  1382                           
  1383                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  1384   000A2A  0E01               	movlw	1
  1385   000A2C  EC30  F005         	call	_I2C_2_Master_Read
  1386   000A30  6E0C               	movwf	??_color_read_Blue^0,c
  1387   000A32  500C               	movf	??_color_read_Blue^0,w,c
  1388   000A34  6E0F               	movwf	color_read_Blue@tmp^0,c
  1389   000A36  6A10               	clrf	(color_read_Blue@tmp+1)^0,c
  1390                           
  1391                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1392   000A38  0E00               	movlw	0
  1393   000A3A  EC30  F005         	call	_I2C_2_Master_Read
  1394   000A3E  6E0C               	movwf	??_color_read_Blue^0,c
  1395   000A40  500C               	movf	??_color_read_Blue^0,w,c
  1396   000A42  6E0E               	movwf	(??_color_read_Blue+2)^0,c
  1397   000A44  6A0D               	clrf	(??_color_read_Blue+1)^0,c
  1398   000A46  500F               	movf	color_read_Blue@tmp^0,w,c
  1399   000A48  100D               	iorwf	(??_color_read_Blue+1)^0,w,c
  1400   000A4A  6E0F               	movwf	color_read_Blue@tmp^0,c
  1401   000A4C  5010               	movf	(color_read_Blue@tmp+1)^0,w,c
  1402   000A4E  100E               	iorwf	(??_color_read_Blue+2)^0,w,c
  1403   000A50  6E10               	movwf	(color_read_Blue@tmp+1)^0,c
  1404                           
  1405                           ;color.c: 55:  I2C_2_Master_Stop();
  1406   000A52  EC55  F006         	call	_I2C_2_Master_Stop	;wreg free
  1407   000A56                     
  1408                           ;color.c: 56:  return tmp;
  1409   000A56  C00F  F00A         	movff	color_read_Blue@tmp,?_color_read_Blue
  1410   000A5A  C010  F00B         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1411   000A5E  0012               	return		;funcret
  1412   000A60                     __end_of_color_read_Blue:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function _I2C_2_Master_RepStart *****************
  1416 ;; Defined at:
  1417 ;;		line 33 in file "i2c.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1435 ;;Total ram usage:        0 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 3
  1438 ;; This function calls:
  1439 ;;		_I2C_2_Master_Idle
  1440 ;; This function is called by:
  1441 ;;		_color_read_Red
  1442 ;;		_color_read_Blue
  1443 ;;		_color_read_Green
  1444 ;;		_color_read_Clear
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text6
  1449   000CA0                     __ptext6:
  1450                           	callstack 0
  1451   000CA0                     _I2C_2_Master_RepStart:
  1452                           	callstack 24
  1453   000CA0                     
  1454                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1455   000CA0  ECFC  F005         	call	_I2C_2_Master_Idle	;wreg free
  1456   000CA4                     
  1457                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1458   000CA4  010E               	movlb	14	; () banked
  1459   000CA6  83DA               	bsf	218,1,b	;volatile
  1460   000CA8                     
  1461                           ; BSR set to: 14
  1462   000CA8  0012               	return		;funcret
  1463   000CAA                     __end_of_I2C_2_Master_RepStart:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _I2C_2_Master_Read *****************
  1467 ;; Defined at:
  1468 ;;		line 51 in file "i2c.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  ack             1    wreg     unsigned char 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  ack             1    7[COMRAM] unsigned char 
  1473 ;;  tmp             1    8[COMRAM] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      unsigned char 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;Total ram usage:        3 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 3
  1490 ;; This function calls:
  1491 ;;		_I2C_2_Master_Idle
  1492 ;; This function is called by:
  1493 ;;		_color_read_Red
  1494 ;;		_color_read_Blue
  1495 ;;		_color_read_Green
  1496 ;;		_color_read_Clear
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text7
  1501   000A60                     __ptext7:
  1502                           	callstack 0
  1503   000A60                     _I2C_2_Master_Read:
  1504                           	callstack 24
  1505                           
  1506                           ; BSR set to: 14
  1507                           ;incstack = 0
  1508                           ;I2C_2_Master_Read@ack stored from wreg
  1509   000A60  6E08               	movwf	I2C_2_Master_Read@ack^0,c
  1510   000A62                     
  1511                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1512   000A62  ECFC  F005         	call	_I2C_2_Master_Idle	;wreg free
  1513   000A66                     
  1514                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1515   000A66  010E               	movlb	14	; () banked
  1516   000A68  87DA               	bsf	218,3,b	;volatile
  1517                           
  1518                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1519   000A6A  ECFC  F005         	call	_I2C_2_Master_Idle	;wreg free
  1520   000A6E                     
  1521                           ;i2c.c: 57:   tmp = SSP2BUF;
  1522   000A6E  CED5 F009          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1523                           
  1524                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1525   000A72  ECFC  F005         	call	_I2C_2_Master_Idle	;wreg free
  1526   000A76                     
  1527                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1528   000A76  5008               	movf	I2C_2_Master_Read@ack^0,w,c
  1529   000A78  B4D8               	btfsc	status,2,c
  1530   000A7A  EF41  F005         	goto	u31
  1531   000A7E  EF45  F005         	goto	u30
  1532   000A82                     u31:
  1533   000A82  6A07               	clrf	??_I2C_2_Master_Read^0,c
  1534   000A84  2A07               	incf	??_I2C_2_Master_Read^0,f,c
  1535   000A86  EF46  F005         	goto	u48
  1536   000A8A                     u30:
  1537   000A8A  6A07               	clrf	??_I2C_2_Master_Read^0,c
  1538   000A8C                     u48:
  1539   000A8C  3A07               	swapf	??_I2C_2_Master_Read^0,f,c
  1540   000A8E  4607               	rlncf	??_I2C_2_Master_Read^0,f,c
  1541   000A90  010E               	movlb	14	; () banked
  1542   000A92  51DA               	movf	218,w,b	;volatile
  1543   000A94  1807               	xorwf	??_I2C_2_Master_Read^0,w,c
  1544   000A96  0BDF               	andlw	-33
  1545   000A98  1807               	xorwf	??_I2C_2_Master_Read^0,w,c
  1546   000A9A  6FDA               	movwf	218,b	;volatile
  1547   000A9C                     
  1548                           ; BSR set to: 14
  1549                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1550   000A9C  89DA               	bsf	218,4,b	;volatile
  1551   000A9E                     
  1552                           ; BSR set to: 14
  1553                           ;i2c.c: 61:   return tmp;
  1554   000A9E  5009               	movf	I2C_2_Master_Read@tmp^0,w,c
  1555   000AA0                     
  1556                           ; BSR set to: 14
  1557   000AA0  0012               	return		;funcret
  1558   000AA2                     __end_of_I2C_2_Master_Read:
  1559                           	callstack 0
  1560                           
  1561 ;; *************** function _Light *****************
  1562 ;; Defined at:
  1563 ;;		line 14 in file "lights.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  colorcode       1    wreg     unsigned char 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  colorcode       1    5[COMRAM] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1581 ;;Total ram usage:        1 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 2
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;;		_levels
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text8
  1593   000910                     __ptext8:
  1594                           	callstack 0
  1595   000910                     _Light:
  1596                           	callstack 26
  1597                           
  1598                           ; BSR set to: 14
  1599                           ;incstack = 0
  1600                           ;Light@colorcode stored from wreg
  1601   000910  6E06               	movwf	Light@colorcode^0,c
  1602   000912                     
  1603                           ;lights.c: 15:     if (colorcode==0){
  1604   000912  5006               	movf	Light@colorcode^0,w,c
  1605   000914  A4D8               	btfss	status,2,c
  1606   000916  EF8F  F004         	goto	u51
  1607   00091A  EF91  F004         	goto	u50
  1608   00091E                     u51:
  1609   00091E  EF94  F004         	goto	l1064
  1610   000922                     u50:
  1611   000922                     
  1612                           ;lights.c: 16:         LATGbits.LATG1=1;
  1613   000922  827F               	bsf	127,1,c	;volatile
  1614                           
  1615                           ;lights.c: 17:         LATFbits.LATF7=1;
  1616   000924  8E7E               	bsf	126,7,c	;volatile
  1617                           
  1618                           ;lights.c: 18:         LATAbits.LATA4=1;
  1619   000926  8879               	bsf	121,4,c	;volatile
  1620   000928                     l1064:
  1621                           
  1622                           ;lights.c: 20:     if (colorcode==1){
  1623   000928  0406               	decf	Light@colorcode^0,w,c
  1624   00092A  A4D8               	btfss	status,2,c
  1625   00092C  EF9A  F004         	goto	u61
  1626   000930  EF9C  F004         	goto	u60
  1627   000934                     u61:
  1628   000934  EF9F  F004         	goto	l1068
  1629   000938                     u60:
  1630   000938                     
  1631                           ;lights.c: 21:         LATGbits.LATG1=1;
  1632   000938  827F               	bsf	127,1,c	;volatile
  1633                           
  1634                           ;lights.c: 22:         LATFbits.LATF7=0;
  1635   00093A  9E7E               	bcf	126,7,c	;volatile
  1636                           
  1637                           ;lights.c: 23:         LATAbits.LATA4=0;
  1638   00093C  9879               	bcf	121,4,c	;volatile
  1639   00093E                     l1068:
  1640                           
  1641                           ;lights.c: 25:     if (colorcode==2){
  1642   00093E  0E02               	movlw	2
  1643   000940  1806               	xorwf	Light@colorcode^0,w,c
  1644   000942  A4D8               	btfss	status,2,c
  1645   000944  EFA6  F004         	goto	u71
  1646   000948  EFA8  F004         	goto	u70
  1647   00094C                     u71:
  1648   00094C  EFAB  F004         	goto	l1072
  1649   000950                     u70:
  1650   000950                     
  1651                           ;lights.c: 26:         LATGbits.LATG1=0;
  1652   000950  927F               	bcf	127,1,c	;volatile
  1653                           
  1654                           ;lights.c: 27:         LATFbits.LATF7=1;
  1655   000952  8E7E               	bsf	126,7,c	;volatile
  1656                           
  1657                           ;lights.c: 28:         LATAbits.LATA4=0;
  1658   000954  9879               	bcf	121,4,c	;volatile
  1659   000956                     l1072:
  1660                           
  1661                           ;lights.c: 30:     if (colorcode==3){
  1662   000956  0E03               	movlw	3
  1663   000958  1806               	xorwf	Light@colorcode^0,w,c
  1664   00095A  A4D8               	btfss	status,2,c
  1665   00095C  EFB2  F004         	goto	u81
  1666   000960  EFB4  F004         	goto	u80
  1667   000964                     u81:
  1668   000964  EFB7  F004         	goto	l194
  1669   000968                     u80:
  1670   000968                     
  1671                           ;lights.c: 31:         LATGbits.LATG1=0;
  1672   000968  927F               	bcf	127,1,c	;volatile
  1673                           
  1674                           ;lights.c: 32:         LATFbits.LATF7=0;
  1675   00096A  9E7E               	bcf	126,7,c	;volatile
  1676                           
  1677                           ;lights.c: 33:         LATAbits.LATA4=1;
  1678   00096C  8879               	bsf	121,4,c	;volatile
  1679   00096E                     l194:
  1680   00096E  0012               	return		;funcret
  1681   000970                     __end_of_Light:
  1682                           	callstack 0
  1683                           
  1684 ;; *************** function ___xxtofl *****************
  1685 ;; Defined at:
  1686 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  sign            1    wreg     unsigned char 
  1689 ;;  val             4   12[COMRAM] long 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  sign            1   20[COMRAM] unsigned char 
  1692 ;;  arg             4   22[COMRAM] unsigned long 
  1693 ;;  exp             1   21[COMRAM] unsigned char 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  4   12[COMRAM] unsigned char 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1707 ;;Total ram usage:       14 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 2
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_readcard
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text9
  1718   000448                     __ptext9:
  1719                           	callstack 0
  1720   000448                     ___xxtofl:
  1721                           	callstack 27
  1722                           
  1723                           ;incstack = 0
  1724                           ;___xxtofl@sign stored from wreg
  1725   000448  6E15               	movwf	___xxtofl@sign^0,c
  1726   00044A  5015               	movf	___xxtofl@sign^0,w,c
  1727   00044C  B4D8               	btfsc	status,2,c
  1728   00044E  EF2B  F002         	goto	u771
  1729   000452  EF2D  F002         	goto	u770
  1730   000456                     u771:
  1731   000456  EF4F  F002         	goto	l1008
  1732   00045A                     u770:
  1733   00045A  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  1734   00045C  EF34  F002         	goto	u780
  1735   000460  EF32  F002         	goto	u781
  1736   000464                     u781:
  1737   000464  EF4F  F002         	goto	l1008
  1738   000468                     u780:
  1739   000468  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  1740   00046C  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  1741   000470  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  1742   000474  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  1743   000478  1E11               	comf	??___xxtofl^0,f,c
  1744   00047A  1E12               	comf	(??___xxtofl+1)^0,f,c
  1745   00047C  1E13               	comf	(??___xxtofl+2)^0,f,c
  1746   00047E  1E14               	comf	(??___xxtofl+3)^0,f,c
  1747   000480  2A11               	incf	??___xxtofl^0,f,c
  1748   000482  0E00               	movlw	0
  1749   000484  2212               	addwfc	(??___xxtofl+1)^0,f,c
  1750   000486  2213               	addwfc	(??___xxtofl+2)^0,f,c
  1751   000488  2214               	addwfc	(??___xxtofl+3)^0,f,c
  1752   00048A  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  1753   00048E  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  1754   000492  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  1755   000496  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  1756   00049A  EF57  F002         	goto	l1560
  1757   00049E                     l1008:
  1758   00049E  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  1759   0004A2  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1760   0004A6  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1761   0004AA  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1762   0004AE                     l1560:
  1763   0004AE  500D               	movf	___xxtofl@val^0,w,c
  1764   0004B0  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  1765   0004B2  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  1766   0004B4  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  1767   0004B6  A4D8               	btfss	status,2,c
  1768   0004B8  EF60  F002         	goto	u791
  1769   0004BC  EF62  F002         	goto	u790
  1770   0004C0                     u791:
  1771   0004C0  EF6C  F002         	goto	l1566
  1772   0004C4                     u790:
  1773   0004C4  0E00               	movlw	0
  1774   0004C6  6E0D               	movwf	?___xxtofl^0,c
  1775   0004C8  0E00               	movlw	0
  1776   0004CA  6E0E               	movwf	(?___xxtofl+1)^0,c
  1777   0004CC  0E00               	movlw	0
  1778   0004CE  6E0F               	movwf	(?___xxtofl+2)^0,c
  1779   0004D0  0E00               	movlw	0
  1780   0004D2  6E10               	movwf	(?___xxtofl+3)^0,c
  1781   0004D4  EFFD  F002         	goto	l1011
  1782   0004D8                     l1566:
  1783   0004D8  0E96               	movlw	150
  1784   0004DA  6E16               	movwf	___xxtofl@exp^0,c
  1785   0004DC  EF76  F002         	goto	l1570
  1786   0004E0                     l1568:
  1787   0004E0  2A16               	incf	___xxtofl@exp^0,f,c
  1788   0004E2  90D8               	bcf	status,0,c
  1789   0004E4  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  1790   0004E6  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  1791   0004E8  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  1792   0004EA  3217               	rrcf	___xxtofl@arg^0,f,c
  1793   0004EC                     l1570:
  1794   0004EC  0E00               	movlw	0
  1795   0004EE  1417               	andwf	___xxtofl@arg^0,w,c
  1796   0004F0  6E11               	movwf	??___xxtofl^0,c
  1797   0004F2  0E00               	movlw	0
  1798   0004F4  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  1799   0004F6  6E12               	movwf	(??___xxtofl+1)^0,c
  1800   0004F8  0E00               	movlw	0
  1801   0004FA  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  1802   0004FC  6E13               	movwf	(??___xxtofl+2)^0,c
  1803   0004FE  0EFE               	movlw	254
  1804   000500  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  1805   000502  6E14               	movwf	(??___xxtofl+3)^0,c
  1806   000504  5011               	movf	??___xxtofl^0,w,c
  1807   000506  1012               	iorwf	(??___xxtofl+1)^0,w,c
  1808   000508  1013               	iorwf	(??___xxtofl+2)^0,w,c
  1809   00050A  1014               	iorwf	(??___xxtofl+3)^0,w,c
  1810   00050C  A4D8               	btfss	status,2,c
  1811   00050E  EF8B  F002         	goto	u801
  1812   000512  EF8D  F002         	goto	u800
  1813   000516                     u801:
  1814   000516  EF70  F002         	goto	l1568
  1815   00051A                     u800:
  1816   00051A  EF9B  F002         	goto	l1015
  1817   00051E                     l1572:
  1818   00051E  2A16               	incf	___xxtofl@exp^0,f,c
  1819   000520  0E01               	movlw	1
  1820   000522  2617               	addwf	___xxtofl@arg^0,f,c
  1821   000524  0E00               	movlw	0
  1822   000526  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  1823   000528  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  1824   00052A  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  1825   00052C  90D8               	bcf	status,0,c
  1826   00052E  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  1827   000530  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  1828   000532  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  1829   000534  3217               	rrcf	___xxtofl@arg^0,f,c
  1830   000536                     l1015:
  1831   000536  0E00               	movlw	0
  1832   000538  1417               	andwf	___xxtofl@arg^0,w,c
  1833   00053A  6E11               	movwf	??___xxtofl^0,c
  1834   00053C  0E00               	movlw	0
  1835   00053E  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  1836   000540  6E12               	movwf	(??___xxtofl+1)^0,c
  1837   000542  0E00               	movlw	0
  1838   000544  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  1839   000546  6E13               	movwf	(??___xxtofl+2)^0,c
  1840   000548  0EFF               	movlw	255
  1841   00054A  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  1842   00054C  6E14               	movwf	(??___xxtofl+3)^0,c
  1843   00054E  5011               	movf	??___xxtofl^0,w,c
  1844   000550  1012               	iorwf	(??___xxtofl+1)^0,w,c
  1845   000552  1013               	iorwf	(??___xxtofl+2)^0,w,c
  1846   000554  1014               	iorwf	(??___xxtofl+3)^0,w,c
  1847   000556  A4D8               	btfss	status,2,c
  1848   000558  EFB0  F002         	goto	u811
  1849   00055C  EFB2  F002         	goto	u810
  1850   000560                     u811:
  1851   000560  EF8F  F002         	goto	l1572
  1852   000564                     u810:
  1853   000564  EFBA  F002         	goto	l1580
  1854   000568                     l1578:
  1855   000568  0616               	decf	___xxtofl@exp^0,f,c
  1856   00056A  90D8               	bcf	status,0,c
  1857   00056C  3617               	rlcf	___xxtofl@arg^0,f,c
  1858   00056E  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  1859   000570  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  1860   000572  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  1861   000574                     l1580:
  1862   000574  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  1863   000576  EFBF  F002         	goto	u821
  1864   00057A  EFC1  F002         	goto	u820
  1865   00057E                     u821:
  1866   00057E  EFC9  F002         	goto	l1022
  1867   000582                     u820:
  1868   000582  0E02               	movlw	2
  1869   000584  6016               	cpfslt	___xxtofl@exp^0,c
  1870   000586  EFC7  F002         	goto	u831
  1871   00058A  EFC9  F002         	goto	u830
  1872   00058E                     u831:
  1873   00058E  EFB4  F002         	goto	l1578
  1874   000592                     u830:
  1875   000592                     l1022:
  1876   000592  B016               	btfsc	___xxtofl@exp^0,0,c
  1877   000594  EFCE  F002         	goto	u841
  1878   000598  EFD0  F002         	goto	u840
  1879   00059C                     u841:
  1880   00059C  EFD1  F002         	goto	l1586
  1881   0005A0                     u840:
  1882   0005A0  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  1883   0005A2                     l1586:
  1884   0005A2  90D8               	bcf	status,0,c
  1885   0005A4  3216               	rrcf	___xxtofl@exp^0,f,c
  1886   0005A6  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  1887   0005AA  6A12               	clrf	(??___xxtofl+1)^0,c
  1888   0005AC  6A13               	clrf	(??___xxtofl+2)^0,c
  1889   0005AE  6A14               	clrf	(??___xxtofl+3)^0,c
  1890   0005B0  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  1891   0005B4  6A13               	clrf	(??___xxtofl+2)^0,c
  1892   0005B6  6A12               	clrf	(??___xxtofl+1)^0,c
  1893   0005B8  6A11               	clrf	??___xxtofl^0,c
  1894   0005BA  5011               	movf	??___xxtofl^0,w,c
  1895   0005BC  1217               	iorwf	___xxtofl@arg^0,f,c
  1896   0005BE  5012               	movf	(??___xxtofl+1)^0,w,c
  1897   0005C0  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  1898   0005C2  5013               	movf	(??___xxtofl+2)^0,w,c
  1899   0005C4  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  1900   0005C6  5014               	movf	(??___xxtofl+3)^0,w,c
  1901   0005C8  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  1902   0005CA  5015               	movf	___xxtofl@sign^0,w,c
  1903   0005CC  B4D8               	btfsc	status,2,c
  1904   0005CE  EFEB  F002         	goto	u851
  1905   0005D2  EFED  F002         	goto	u850
  1906   0005D6                     u851:
  1907   0005D6  EFF5  F002         	goto	l1596
  1908   0005DA                     u850:
  1909   0005DA  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  1910   0005DC  EFF4  F002         	goto	u860
  1911   0005E0  EFF2  F002         	goto	u861
  1912   0005E4                     u861:
  1913   0005E4  EFF5  F002         	goto	l1596
  1914   0005E8                     u860:
  1915   0005E8  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  1916   0005EA                     l1596:
  1917   0005EA  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  1918   0005EE  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  1919   0005F2  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  1920   0005F6  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  1921   0005FA                     l1011:
  1922   0005FA  0012               	return		;funcret
  1923   0005FC                     __end_of___xxtofl:
  1924                           	callstack 0
  1925                           
  1926 ;; *************** function ___lwdiv *****************
  1927 ;; Defined at:
  1928 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  dividend        2    5[COMRAM] unsigned int 
  1931 ;;  divisor         2    7[COMRAM] unsigned int 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  quotient        2    9[COMRAM] unsigned int 
  1934 ;;  counter         1   11[COMRAM] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  2    5[COMRAM] unsigned int 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1945 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;Total ram usage:        7 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 2
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_readcard
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text10
  1959   00089C                     __ptext10:
  1960                           	callstack 0
  1961   00089C                     ___lwdiv:
  1962                           	callstack 27
  1963   00089C  0E00               	movlw	0
  1964   00089E  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  1965   0008A0  0E00               	movlw	0
  1966   0008A2  6E0A               	movwf	___lwdiv@quotient^0,c
  1967   0008A4  5008               	movf	___lwdiv@divisor^0,w,c
  1968   0008A6  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1969   0008A8  B4D8               	btfsc	status,2,c
  1970   0008AA  EF59  F004         	goto	u741
  1971   0008AE  EF5B  F004         	goto	u740
  1972   0008B2                     u741:
  1973   0008B2  EF83  F004         	goto	l844
  1974   0008B6                     u740:
  1975   0008B6  0E01               	movlw	1
  1976   0008B8  6E0C               	movwf	___lwdiv@counter^0,c
  1977   0008BA  EF63  F004         	goto	l1540
  1978   0008BE                     l1538:
  1979   0008BE  90D8               	bcf	status,0,c
  1980   0008C0  3608               	rlcf	___lwdiv@divisor^0,f,c
  1981   0008C2  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1982   0008C4  2A0C               	incf	___lwdiv@counter^0,f,c
  1983   0008C6                     l1540:
  1984   0008C6  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1985   0008C8  EF68  F004         	goto	u751
  1986   0008CC  EF6A  F004         	goto	u750
  1987   0008D0                     u751:
  1988   0008D0  EF5F  F004         	goto	l1538
  1989   0008D4                     u750:
  1990   0008D4                     l1542:
  1991   0008D4  90D8               	bcf	status,0,c
  1992   0008D6  360A               	rlcf	___lwdiv@quotient^0,f,c
  1993   0008D8  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1994   0008DA  5008               	movf	___lwdiv@divisor^0,w,c
  1995   0008DC  5C06               	subwf	___lwdiv@dividend^0,w,c
  1996   0008DE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1997   0008E0  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1998   0008E2  A0D8               	btfss	status,0,c
  1999   0008E4  EF76  F004         	goto	u761
  2000   0008E8  EF78  F004         	goto	u760
  2001   0008EC                     u761:
  2002   0008EC  EF7D  F004         	goto	l1550
  2003   0008F0                     u760:
  2004   0008F0  5008               	movf	___lwdiv@divisor^0,w,c
  2005   0008F2  5E06               	subwf	___lwdiv@dividend^0,f,c
  2006   0008F4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  2007   0008F6  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2008   0008F8  800A               	bsf	___lwdiv@quotient^0,0,c
  2009   0008FA                     l1550:
  2010   0008FA  90D8               	bcf	status,0,c
  2011   0008FC  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2012   0008FE  3208               	rrcf	___lwdiv@divisor^0,f,c
  2013   000900  2E0C               	decfsz	___lwdiv@counter^0,f,c
  2014   000902  EF6A  F004         	goto	l1542
  2015   000906                     l844:
  2016   000906  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  2017   00090A  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2018   00090E  0012               	return		;funcret
  2019   000910                     __end_of___lwdiv:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function ___flge *****************
  2023 ;; Defined at:
  2024 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  ff1             4    5[COMRAM] unsigned int 
  2027 ;;  ff2             4    9[COMRAM] unsigned int 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;		None               void
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2039 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2043 ;;Total ram usage:       12 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 2
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_readcard
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text11
  2054   000720                     __ptext11:
  2055                           	callstack 0
  2056   000720                     ___flge:
  2057                           	callstack 27
  2058   000720  0E00               	movlw	0
  2059   000722  1406               	andwf	___flge@ff1^0,w,c
  2060   000724  6E0E               	movwf	??___flge^0,c
  2061   000726  0E00               	movlw	0
  2062   000728  1407               	andwf	(___flge@ff1+1)^0,w,c
  2063   00072A  6E0F               	movwf	(??___flge+1)^0,c
  2064   00072C  0E80               	movlw	128
  2065   00072E  1408               	andwf	(___flge@ff1+2)^0,w,c
  2066   000730  6E10               	movwf	(??___flge+2)^0,c
  2067   000732  0E7F               	movlw	127
  2068   000734  1409               	andwf	(___flge@ff1+3)^0,w,c
  2069   000736  6E11               	movwf	(??___flge+3)^0,c
  2070   000738  500E               	movf	??___flge^0,w,c
  2071   00073A  100F               	iorwf	(??___flge+1)^0,w,c
  2072   00073C  1010               	iorwf	(??___flge+2)^0,w,c
  2073   00073E  1011               	iorwf	(??___flge+3)^0,w,c
  2074   000740  A4D8               	btfss	status,2,c
  2075   000742  EFA5  F003         	goto	u691
  2076   000746  EFA7  F003         	goto	u690
  2077   00074A                     u691:
  2078   00074A  EFAF  F003         	goto	l1514
  2079   00074E                     u690:
  2080   00074E  0E00               	movlw	0
  2081   000750  6E06               	movwf	___flge@ff1^0,c
  2082   000752  0E00               	movlw	0
  2083   000754  6E07               	movwf	(___flge@ff1+1)^0,c
  2084   000756  0E00               	movlw	0
  2085   000758  6E08               	movwf	(___flge@ff1+2)^0,c
  2086   00075A  0E00               	movlw	0
  2087   00075C  6E09               	movwf	(___flge@ff1+3)^0,c
  2088   00075E                     l1514:
  2089   00075E  0E00               	movlw	0
  2090   000760  140A               	andwf	___flge@ff2^0,w,c
  2091   000762  6E0E               	movwf	??___flge^0,c
  2092   000764  0E00               	movlw	0
  2093   000766  140B               	andwf	(___flge@ff2+1)^0,w,c
  2094   000768  6E0F               	movwf	(??___flge+1)^0,c
  2095   00076A  0E80               	movlw	128
  2096   00076C  140C               	andwf	(___flge@ff2+2)^0,w,c
  2097   00076E  6E10               	movwf	(??___flge+2)^0,c
  2098   000770  0E7F               	movlw	127
  2099   000772  140D               	andwf	(___flge@ff2+3)^0,w,c
  2100   000774  6E11               	movwf	(??___flge+3)^0,c
  2101   000776  500E               	movf	??___flge^0,w,c
  2102   000778  100F               	iorwf	(??___flge+1)^0,w,c
  2103   00077A  1010               	iorwf	(??___flge+2)^0,w,c
  2104   00077C  1011               	iorwf	(??___flge+3)^0,w,c
  2105   00077E  A4D8               	btfss	status,2,c
  2106   000780  EFC4  F003         	goto	u701
  2107   000784  EFC6  F003         	goto	u700
  2108   000788                     u701:
  2109   000788  EFCE  F003         	goto	l1518
  2110   00078C                     u700:
  2111   00078C  0E00               	movlw	0
  2112   00078E  6E0A               	movwf	___flge@ff2^0,c
  2113   000790  0E00               	movlw	0
  2114   000792  6E0B               	movwf	(___flge@ff2+1)^0,c
  2115   000794  0E00               	movlw	0
  2116   000796  6E0C               	movwf	(___flge@ff2+2)^0,c
  2117   000798  0E00               	movlw	0
  2118   00079A  6E0D               	movwf	(___flge@ff2+3)^0,c
  2119   00079C                     l1518:
  2120   00079C  AE09               	btfss	(___flge@ff1+3)^0,7,c
  2121   00079E  EFD3  F003         	goto	u711
  2122   0007A2  EFD5  F003         	goto	u710
  2123   0007A6                     u711:
  2124   0007A6  EFDE  F003         	goto	l1522
  2125   0007AA                     u710:
  2126   0007AA  6C06               	negf	___flge@ff1^0,c
  2127   0007AC  1E07               	comf	(___flge@ff1+1)^0,f,c
  2128   0007AE  B0D8               	btfsc	status,0,c
  2129   0007B0  2A07               	incf	(___flge@ff1+1)^0,f,c
  2130   0007B2  1E08               	comf	(___flge@ff1+2)^0,f,c
  2131   0007B4  B0D8               	btfsc	status,0,c
  2132   0007B6  2A08               	incf	(___flge@ff1+2)^0,f,c
  2133   0007B8  0E80               	movlw	128
  2134   0007BA  5609               	subfwb	(___flge@ff1+3)^0,f,c
  2135   0007BC                     l1522:
  2136   0007BC  AE0D               	btfss	(___flge@ff2+3)^0,7,c
  2137   0007BE  EFE3  F003         	goto	u721
  2138   0007C2  EFE5  F003         	goto	u720
  2139   0007C6                     u721:
  2140   0007C6  EFEE  F003         	goto	l618
  2141   0007CA                     u720:
  2142   0007CA  6C0A               	negf	___flge@ff2^0,c
  2143   0007CC  1E0B               	comf	(___flge@ff2+1)^0,f,c
  2144   0007CE  B0D8               	btfsc	status,0,c
  2145   0007D0  2A0B               	incf	(___flge@ff2+1)^0,f,c
  2146   0007D2  1E0C               	comf	(___flge@ff2+2)^0,f,c
  2147   0007D4  B0D8               	btfsc	status,0,c
  2148   0007D6  2A0C               	incf	(___flge@ff2+2)^0,f,c
  2149   0007D8  0E80               	movlw	128
  2150   0007DA  560D               	subfwb	(___flge@ff2+3)^0,f,c
  2151   0007DC                     l618:
  2152   0007DC  0E00               	movlw	0
  2153   0007DE  1A06               	xorwf	___flge@ff1^0,f,c
  2154   0007E0  0E00               	movlw	0
  2155   0007E2  1A07               	xorwf	(___flge@ff1+1)^0,f,c
  2156   0007E4  0E00               	movlw	0
  2157   0007E6  1A08               	xorwf	(___flge@ff1+2)^0,f,c
  2158   0007E8  0E80               	movlw	128
  2159   0007EA  1A09               	xorwf	(___flge@ff1+3)^0,f,c
  2160   0007EC  0E00               	movlw	0
  2161   0007EE  1A0A               	xorwf	___flge@ff2^0,f,c
  2162   0007F0  0E00               	movlw	0
  2163   0007F2  1A0B               	xorwf	(___flge@ff2+1)^0,f,c
  2164   0007F4  0E00               	movlw	0
  2165   0007F6  1A0C               	xorwf	(___flge@ff2+2)^0,f,c
  2166   0007F8  0E80               	movlw	128
  2167   0007FA  1A0D               	xorwf	(___flge@ff2+3)^0,f,c
  2168   0007FC  500A               	movf	___flge@ff2^0,w,c
  2169   0007FE  5C06               	subwf	___flge@ff1^0,w,c
  2170   000800  500B               	movf	(___flge@ff2+1)^0,w,c
  2171   000802  5807               	subwfb	(___flge@ff1+1)^0,w,c
  2172   000804  500C               	movf	(___flge@ff2+2)^0,w,c
  2173   000806  5808               	subwfb	(___flge@ff1+2)^0,w,c
  2174   000808  500D               	movf	(___flge@ff2+3)^0,w,c
  2175   00080A  5809               	subwfb	(___flge@ff1+3)^0,w,c
  2176   00080C  B0D8               	btfsc	status,0,c
  2177   00080E  EF0B  F004         	goto	u731
  2178   000812  EF0D  F004         	goto	u730
  2179   000816                     u731:
  2180   000816  EF10  F004         	goto	l1528
  2181   00081A                     u730:
  2182   00081A  90D8               	bcf	status,0,c
  2183   00081C  EF11  F004         	goto	l623
  2184   000820                     l1528:
  2185   000820  80D8               	bsf	status,0,c
  2186   000822                     l623:
  2187   000822  0012               	return		;funcret
  2188   000824                     __end_of___flge:
  2189                           	callstack 0
  2190                           
  2191 ;; *************** function _initUSART4 *****************
  2192 ;; Defined at:
  2193 ;;		line 5 in file "serial.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 2
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text12
  2222   000C40                     __ptext12:
  2223                           	callstack 0
  2224   000C40                     _initUSART4:
  2225                           	callstack 28
  2226   000C40                     
  2227                           ;serial.c: 6:     RC0PPS = 0x12;
  2228   000C40  0E12               	movlw	18
  2229   000C42  010E               	movlb	14	; () banked
  2230   000C44  6F62               	movwf	98,b	;volatile
  2231                           
  2232                           ;serial.c: 7:     RX4PPS = 0x11;
  2233   000C46  0E11               	movlw	17
  2234   000C48  6F15               	movwf	21,b	;volatile
  2235   000C4A                     
  2236                           ; BSR set to: 14
  2237                           ;serial.c: 9:     BAUD4CONbits.BRG16 = 0;
  2238   000C4A  97E9               	bcf	233,3,b	;volatile
  2239   000C4C                     
  2240                           ; BSR set to: 14
  2241                           ;serial.c: 10:     TX4STAbits.BRGH = 0;
  2242   000C4C  95E8               	bcf	232,2,b	;volatile
  2243                           
  2244                           ;serial.c: 11:     SP4BRGL = 51;
  2245   000C4E  0E33               	movlw	51
  2246   000C50  6FE5               	movwf	229,b	;volatile
  2247                           
  2248                           ;serial.c: 12:     SP4BRGH = 0;
  2249   000C52  0E00               	movlw	0
  2250   000C54  6FE6               	movwf	230,b	;volatile
  2251   000C56                     
  2252                           ; BSR set to: 14
  2253                           ;serial.c: 14:     RC4STAbits.CREN = 1;
  2254   000C56  89E7               	bsf	231,4,b	;volatile
  2255   000C58                     
  2256                           ; BSR set to: 14
  2257                           ;serial.c: 15:     TX4STAbits.TXEN = 1;
  2258   000C58  8BE8               	bsf	232,5,b	;volatile
  2259   000C5A                     
  2260                           ; BSR set to: 14
  2261                           ;serial.c: 16:     RC4STAbits.SPEN = 1;
  2262   000C5A  8FE7               	bsf	231,7,b	;volatile
  2263   000C5C                     
  2264                           ; BSR set to: 14
  2265   000C5C  0012               	return		;funcret
  2266   000C5E                     __end_of_initUSART4:
  2267                           	callstack 0
  2268                           
  2269 ;; *************** function _color_click_init *****************
  2270 ;; Defined at:
  2271 ;;		line 5 in file "color.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2289 ;;Total ram usage:        1 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 5
  2292 ;; This function calls:
  2293 ;;		_I2C_2_Master_Init
  2294 ;;		_color_writetoaddr
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text13
  2301   000B1A                     __ptext13:
  2302                           	callstack 0
  2303   000B1A                     _color_click_init:
  2304                           	callstack 25
  2305   000B1A                     
  2306                           ;color.c: 8:     I2C_2_Master_Init();
  2307   000B1A  ECBD  F005         	call	_I2C_2_Master_Init	;wreg free
  2308   000B1E                     
  2309                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2310   000B1E  0E01               	movlw	1
  2311   000B20  6E08               	movwf	color_writetoaddr@value^0,c
  2312   000B22  0E00               	movlw	0
  2313   000B24  EC10  F006         	call	_color_writetoaddr
  2314   000B28                     
  2315                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2316   000B28  0E3F               	movlw	63
  2317   000B2A  6E0A               	movwf	??_color_click_init^0,c
  2318   000B2C  0E55               	movlw	85
  2319   000B2E                     u1147:
  2320   000B2E  2EE8               	decfsz	wreg,f,c
  2321   000B30  D7FE               	bra	u1147
  2322   000B32  2E0A               	decfsz	??_color_click_init^0,f,c
  2323   000B34  D7FC               	bra	u1147
  2324   000B36  F000               	nop	
  2325   000B38                     
  2326                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2327   000B38  0E03               	movlw	3
  2328   000B3A  6E08               	movwf	color_writetoaddr@value^0,c
  2329   000B3C  0E00               	movlw	0
  2330   000B3E  EC10  F006         	call	_color_writetoaddr
  2331   000B42                     
  2332                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2333   000B42  0ED5               	movlw	213
  2334   000B44  6E08               	movwf	color_writetoaddr@value^0,c
  2335   000B46  0E01               	movlw	1
  2336   000B48  EC10  F006         	call	_color_writetoaddr
  2337   000B4C  0012               	return		;funcret
  2338   000B4E                     __end_of_color_click_init:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _color_writetoaddr *****************
  2342 ;; Defined at:
  2343 ;;		line 21 in file "color.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  address         1    wreg     unsigned char 
  2346 ;;  value           1    7[COMRAM] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  address         1    8[COMRAM] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2358 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;Total ram usage:        2 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 4
  2365 ;; This function calls:
  2366 ;;		_I2C_2_Master_Start
  2367 ;;		_I2C_2_Master_Stop
  2368 ;;		_I2C_2_Master_Write
  2369 ;; This function is called by:
  2370 ;;		_color_click_init
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text14
  2375   000C20                     __ptext14:
  2376                           	callstack 0
  2377   000C20                     _color_writetoaddr:
  2378                           	callstack 25
  2379                           
  2380                           ;incstack = 0
  2381                           ;color_writetoaddr@address stored from wreg
  2382   000C20  6E09               	movwf	color_writetoaddr@address^0,c
  2383   000C22                     
  2384                           ;color.c: 22:     I2C_2_Master_Start();
  2385   000C22  EC5A  F006         	call	_I2C_2_Master_Start	;wreg free
  2386                           
  2387                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2388   000C26  0E52               	movlw	82
  2389   000C28  EC4A  F006         	call	_I2C_2_Master_Write
  2390                           
  2391                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2392   000C2C  5009               	movf	color_writetoaddr@address^0,w,c
  2393   000C2E  0980               	iorlw	128
  2394   000C30  EC4A  F006         	call	_I2C_2_Master_Write
  2395                           
  2396                           ;color.c: 25:     I2C_2_Master_Write(value);
  2397   000C34  5008               	movf	color_writetoaddr@value^0,w,c
  2398   000C36  EC4A  F006         	call	_I2C_2_Master_Write
  2399                           
  2400                           ;color.c: 26:     I2C_2_Master_Stop();
  2401   000C3A  EC55  F006         	call	_I2C_2_Master_Stop	;wreg free
  2402   000C3E  0012               	return		;funcret
  2403   000C40                     __end_of_color_writetoaddr:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _I2C_2_Master_Write *****************
  2407 ;; Defined at:
  2408 ;;		line 45 in file "i2c.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  data_byte       1    wreg     unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  data_byte       1    6[COMRAM] unsigned char 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;Total ram usage:        1 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 3
  2429 ;; This function calls:
  2430 ;;		_I2C_2_Master_Idle
  2431 ;; This function is called by:
  2432 ;;		_color_writetoaddr
  2433 ;;		_color_read_Red
  2434 ;;		_color_read_Blue
  2435 ;;		_color_read_Green
  2436 ;;		_color_read_Clear
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text15
  2441   000C94                     __ptext15:
  2442                           	callstack 0
  2443   000C94                     _I2C_2_Master_Write:
  2444                           	callstack 24
  2445                           
  2446                           ;incstack = 0
  2447                           ;I2C_2_Master_Write@data_byte stored from wreg
  2448   000C94  6E07               	movwf	I2C_2_Master_Write@data_byte^0,c
  2449   000C96                     
  2450                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2451   000C96  ECFC  F005         	call	_I2C_2_Master_Idle	;wreg free
  2452   000C9A                     
  2453                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2454   000C9A  C007  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2455   000C9E  0012               	return		;funcret
  2456   000CA0                     __end_of_I2C_2_Master_Write:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _I2C_2_Master_Stop *****************
  2460 ;; Defined at:
  2461 ;;		line 39 in file "i2c.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 3
  2482 ;; This function calls:
  2483 ;;		_I2C_2_Master_Idle
  2484 ;; This function is called by:
  2485 ;;		_color_writetoaddr
  2486 ;;		_color_read_Red
  2487 ;;		_color_read_Blue
  2488 ;;		_color_read_Green
  2489 ;;		_color_read_Clear
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text16
  2494   000CAA                     __ptext16:
  2495                           	callstack 0
  2496   000CAA                     _I2C_2_Master_Stop:
  2497                           	callstack 24
  2498   000CAA                     
  2499                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2500   000CAA  ECFC  F005         	call	_I2C_2_Master_Idle	;wreg free
  2501   000CAE                     
  2502                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2503   000CAE  010E               	movlb	14	; () banked
  2504   000CB0  85DA               	bsf	218,2,b	;volatile
  2505   000CB2                     
  2506                           ; BSR set to: 14
  2507   000CB2  0012               	return		;funcret
  2508   000CB4                     __end_of_I2C_2_Master_Stop:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _I2C_2_Master_Start *****************
  2512 ;; Defined at:
  2513 ;;		line 27 in file "i2c.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;Total ram usage:        0 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; Hardware stack levels required when called: 3
  2534 ;; This function calls:
  2535 ;;		_I2C_2_Master_Idle
  2536 ;; This function is called by:
  2537 ;;		_color_writetoaddr
  2538 ;;		_color_read_Red
  2539 ;;		_color_read_Blue
  2540 ;;		_color_read_Green
  2541 ;;		_color_read_Clear
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text17
  2546   000CB4                     __ptext17:
  2547                           	callstack 0
  2548   000CB4                     _I2C_2_Master_Start:
  2549                           	callstack 24
  2550   000CB4                     
  2551                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2552   000CB4  ECFC  F005         	call	_I2C_2_Master_Idle	;wreg free
  2553   000CB8                     
  2554                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2555   000CB8  010E               	movlb	14	; () banked
  2556   000CBA  81DA               	bsf	218,0,b	;volatile
  2557   000CBC                     
  2558                           ; BSR set to: 14
  2559   000CBC  0012               	return		;funcret
  2560   000CBE                     __end_of_I2C_2_Master_Start:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _I2C_2_Master_Idle *****************
  2564 ;; Defined at:
  2565 ;;		line 22 in file "i2c.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;Total ram usage:        1 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 2
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_I2C_2_Master_Start
  2590 ;;		_I2C_2_Master_RepStart
  2591 ;;		_I2C_2_Master_Stop
  2592 ;;		_I2C_2_Master_Write
  2593 ;;		_I2C_2_Master_Read
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text18
  2598   000BF8                     __ptext18:
  2599                           	callstack 0
  2600   000BF8                     _I2C_2_Master_Idle:
  2601                           	callstack 24
  2602   000BF8                     l332:
  2603   000BF8  010E               	movlb	14	; () banked
  2604   000BFA  B5D8               	btfsc	216,2,b	;volatile
  2605   000BFC  EF02  F006         	goto	u11
  2606   000C00  EF04  F006         	goto	u10
  2607   000C04                     u11:
  2608   000C04  EFFC  F005         	goto	l332
  2609   000C08                     u10:
  2610   000C08                     
  2611                           ; BSR set to: 14
  2612   000C08  CEDA F006          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2613   000C0C  0E1F               	movlw	31
  2614   000C0E  1606               	andwf	??_I2C_2_Master_Idle^0,f,c
  2615   000C10  A4D8               	btfss	status,2,c
  2616   000C12  EF0D  F006         	goto	u21
  2617   000C16  EF0F  F006         	goto	u20
  2618   000C1A                     u21:
  2619   000C1A  EFFC  F005         	goto	l332
  2620   000C1E                     u20:
  2621   000C1E                     
  2622                           ; BSR set to: 14
  2623   000C1E  0012               	return		;funcret
  2624   000C20                     __end_of_I2C_2_Master_Idle:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _I2C_2_Master_Init *****************
  2628 ;; Defined at:
  2629 ;;		line 4 in file "i2c.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 2
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_color_click_init
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text19
  2658   000B7A                     __ptext19:
  2659                           	callstack 0
  2660   000B7A                     _I2C_2_Master_Init:
  2661                           	callstack 27
  2662   000B7A                     
  2663                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2664   000B7A  010E               	movlb	14	; () banked
  2665   000B7C  51D9               	movf	217,w,b	;volatile
  2666   000B7E  0BF0               	andlw	-16
  2667   000B80  0908               	iorlw	8
  2668   000B82  6FD9               	movwf	217,b	;volatile
  2669   000B84                     
  2670                           ; BSR set to: 14
  2671                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2672   000B84  8BD9               	bsf	217,5,b	;volatile
  2673                           
  2674                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2675   000B86  0E9F               	movlw	159
  2676   000B88  6FD6               	movwf	214,b	;volatile
  2677   000B8A                     
  2678                           ; BSR set to: 14
  2679                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2680   000B8A  8A84               	bsf	132,5,c	;volatile
  2681   000B8C                     
  2682                           ; BSR set to: 14
  2683                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2684   000B8C  8C84               	bsf	132,6,c	;volatile
  2685   000B8E                     
  2686                           ; BSR set to: 14
  2687                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2688   000B8E  9BA7               	bcf	167,5,b	;volatile
  2689   000B90                     
  2690                           ; BSR set to: 14
  2691                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2692   000B90  9DA7               	bcf	167,6,b	;volatile
  2693                           
  2694                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2695   000B92  0E1D               	movlw	29
  2696   000B94  6F1D               	movwf	29,b	;volatile
  2697                           
  2698                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2699   000B96  0E1E               	movlw	30
  2700   000B98  6F1C               	movwf	28,b	;volatile
  2701                           
  2702                           ;i2c.c: 18:   RD5PPS=0x1C;
  2703   000B9A  0E1C               	movlw	28
  2704   000B9C  6F6F               	movwf	111,b	;volatile
  2705                           
  2706                           ;i2c.c: 19:   RD6PPS=0x1B;
  2707   000B9E  0E1B               	movlw	27
  2708   000BA0  6F70               	movwf	112,b	;volatile
  2709   000BA2                     
  2710                           ; BSR set to: 14
  2711   000BA2  0012               	return		;funcret
  2712   000BA4                     __end_of_I2C_2_Master_Init:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function _TxBufferedString *****************
  2716 ;; Defined at:
  2717 ;;		line 84 in file "serial.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  string          2    6[COMRAM] PTR unsigned char 
  2720 ;;		 -> main@buf(3), 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2736 ;;Total ram usage:        2 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 3
  2739 ;; This function calls:
  2740 ;;		_putCharToTxBuf
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text20
  2747   000AE2                     __ptext20:
  2748                           	callstack 0
  2749   000AE2                     _TxBufferedString:
  2750                           	callstack 27
  2751   000AE2                     
  2752                           ;serial.c: 86:     while(*string != 0){
  2753   000AE2  EF7C  F005         	goto	l1684
  2754   000AE6                     l1680:
  2755                           
  2756                           ;serial.c: 87:   putCharToTxBuf(*string++);
  2757   000AE6  C007  FFD9         	movff	TxBufferedString@string,fsr2l
  2758   000AEA  C008  FFDA         	movff	TxBufferedString@string+1,fsr2h
  2759   000AEE  50DF               	movf	indf2,w,c
  2760   000AF0  ECD2  F005         	call	_putCharToTxBuf
  2761   000AF4  4A07               	infsnz	TxBufferedString@string^0,f,c
  2762   000AF6  2A08               	incf	(TxBufferedString@string+1)^0,f,c
  2763   000AF8                     l1684:
  2764                           
  2765                           ;serial.c: 86:     while(*string != 0){
  2766   000AF8  C007  FFD9         	movff	TxBufferedString@string,fsr2l
  2767   000AFC  C008  FFDA         	movff	TxBufferedString@string+1,fsr2h
  2768   000B00  50DF               	movf	indf2,w,c
  2769   000B02  A4D8               	btfss	status,2,c
  2770   000B04  EF86  F005         	goto	u1001
  2771   000B08  EF88  F005         	goto	u1000
  2772   000B0C                     u1001:
  2773   000B0C  EF73  F005         	goto	l1680
  2774   000B10                     u1000:
  2775   000B10                     
  2776                           ;serial.c: 89:     sendFLAG=1;
  2777   000B10  0E01               	movlw	1
  2778   000B12  6E52               	movwf	_sendFLAG^0,c
  2779   000B14                     
  2780                           ;serial.c: 90:     PIE4bits.TX4IE=1;
  2781   000B14  010E               	movlb	14	; () banked
  2782   000B16  852D               	bsf	45,2,b	;volatile
  2783   000B18                     
  2784                           ; BSR set to: 14
  2785   000B18  0012               	return		;funcret
  2786   000B1A                     __end_of_TxBufferedString:
  2787                           	callstack 0
  2788                           
  2789 ;; *************** function _putCharToTxBuf *****************
  2790 ;; Defined at:
  2791 ;;		line 71 in file "serial.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  byte            1    wreg     unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  byte            1    5[COMRAM] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;Total ram usage:        1 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 2
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_TxBufferedString
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text21
  2820   000BA4                     __ptext21:
  2821                           	callstack 0
  2822   000BA4                     _putCharToTxBuf:
  2823                           	callstack 27
  2824                           
  2825                           ; BSR set to: 14
  2826                           ;incstack = 0
  2827                           ;putCharToTxBuf@byte stored from wreg
  2828   000BA4  6E06               	movwf	putCharToTxBuf@byte^0,c
  2829   000BA6                     
  2830                           ;serial.c: 72:     if (TxBufWriteCnt>=100) {TxBufWriteCnt=0;}
  2831   000BA6  0E63               	movlw	99
  2832   000BA8  644F               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  2833   000BAA  EFD9  F005         	goto	u101
  2834   000BAE  EFDB  F005         	goto	u100
  2835   000BB2                     u101:
  2836   000BB2  EFDD  F005         	goto	l1122
  2837   000BB6                     u100:
  2838   000BB6  0E00               	movlw	0
  2839   000BB8  6E4F               	movwf	_TxBufWriteCnt^0,c	;volatile
  2840   000BBA                     l1122:
  2841                           
  2842                           ;serial.c: 73:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  2843   000BBA  0E60               	movlw	low _EUSART4TXbuf
  2844   000BBC  244F               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  2845   000BBE  6ED9               	movwf	fsr2l,c
  2846   000BC0  6ADA               	clrf	fsr2h,c
  2847   000BC2  0E00               	movlw	high _EUSART4TXbuf
  2848   000BC4  22DA               	addwfc	fsr2h,f,c
  2849   000BC6  C006  FFDF         	movff	putCharToTxBuf@byte,indf2
  2850   000BCA  2A4F               	incf	_TxBufWriteCnt^0,f,c	;volatile
  2851   000BCC  0012               	return		;funcret
  2852   000BCE                     __end_of_putCharToTxBuf:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function _LightInit *****************
  2856 ;; Defined at:
  2857 ;;		line 4 in file "lights.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		None
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2875 ;;Total ram usage:        0 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; Hardware stack levels required when called: 2
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_main
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text22
  2886   000C86                     __ptext22:
  2887                           	callstack 0
  2888   000C86                     _LightInit:
  2889                           	callstack 28
  2890   000C86                     
  2891                           ;lights.c: 5:     TRISGbits.TRISG1=0;
  2892   000C86  9287               	bcf	135,1,c	;volatile
  2893                           
  2894                           ;lights.c: 6:     TRISFbits.TRISF7=0;
  2895   000C88  9E86               	bcf	134,7,c	;volatile
  2896                           
  2897                           ;lights.c: 7:     TRISAbits.TRISA4=0;
  2898   000C8A  9881               	bcf	129,4,c	;volatile
  2899                           
  2900                           ;lights.c: 8:     LATGbits.LATG1=0;
  2901   000C8C  927F               	bcf	127,1,c	;volatile
  2902                           
  2903                           ;lights.c: 9:     LATFbits.LATF7=0;
  2904   000C8E  9E7E               	bcf	126,7,c	;volatile
  2905                           
  2906                           ;lights.c: 10:     LATAbits.LATA4=0;
  2907   000C90  9879               	bcf	121,4,c	;volatile
  2908   000C92  0012               	return		;funcret
  2909   000C94                     __end_of_LightInit:
  2910                           	callstack 0
  2911                           
  2912 ;; *************** function _Interrupts_init *****************
  2913 ;; Defined at:
  2914 ;;		line 9 in file "interrupts.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		None
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2932 ;;Total ram usage:        0 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; Hardware stack levels required when called: 2
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text23
  2943   000C76                     __ptext23:
  2944                           	callstack 0
  2945   000C76                     _Interrupts_init:
  2946                           	callstack 28
  2947   000C76                     
  2948                           ;interrupts.c: 11:     INTCONbits.PEIE=1;
  2949   000C76  8CF2               	bsf	242,6,c	;volatile
  2950                           
  2951                           ;interrupts.c: 12:     INTCONbits.IPEN=1;
  2952   000C78  8AF2               	bsf	242,5,c	;volatile
  2953                           
  2954                           ;interrupts.c: 13:     PIE4bits.RC4IE=1;
  2955   000C7A  010E               	movlb	14	; () banked
  2956   000C7C  872D               	bsf	45,3,b	;volatile
  2957                           
  2958                           ;interrupts.c: 14:     PIE4bits.TX4IE=0;
  2959   000C7E  952D               	bcf	45,2,b	;volatile
  2960                           
  2961                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  2962   000C80  8B29               	bsf	41,5,b	;volatile
  2963                           
  2964                           ;interrupts.c: 16:     INTCONbits.GIE=1;
  2965   000C82  8EF2               	bsf	242,7,c	;volatile
  2966   000C84                     
  2967                           ; BSR set to: 14
  2968   000C84  0012               	return		;funcret
  2969   000C86                     __end_of_Interrupts_init:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _HighISR *****************
  2973 ;; Defined at:
  2974 ;;		line 25 in file "interrupts.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  reg             1    4[COMRAM] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2991 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2992 ;;Total ram usage:        3 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 1
  2995 ;; This function calls:
  2996 ;;		_getCharFromTxBuf
  2997 ;;		_isDataInTxBuf
  2998 ;;		_putCharToRxBuf
  2999 ;; This function is called by:
  3000 ;;		Interrupt level 2
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	intcode
  3005   000008                     __pintcode:
  3006                           	callstack 0
  3007   000008                     _HighISR:
  3008                           	callstack 24
  3009                           
  3010                           ; BSR set to: 14
  3011                           ;incstack = 0
  3012   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3013   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3014   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3015   000012                     
  3016                           ;interrupts.c: 28:  if(PIR4bits.TX4IF & sendFLAG){
  3017   000012  010E               	movlb	14	; () banked
  3018   000014  B537               	btfsc	55,2,b	;volatile
  3019   000016  EF0F  F000         	goto	i2u57_41
  3020   00001A  EF12  F000         	goto	i2u57_40
  3021   00001E                     i2u57_41:
  3022   00001E  0E01               	movlw	1
  3023   000020  EF13  F000         	goto	i2u57_46
  3024   000024                     i2u57_40:
  3025   000024  0E00               	movlw	0
  3026   000026                     i2u57_46:
  3027   000026  1452               	andwf	_sendFLAG^0,w,c
  3028   000028  0900               	iorlw	0
  3029   00002A  B4D8               	btfsc	status,2,c
  3030   00002C  EF1A  F000         	goto	i2u58_41
  3031   000030  EF1C  F000         	goto	i2u58_40
  3032   000034                     i2u58_41:
  3033   000034  EF38  F000         	goto	i2l1422
  3034   000038                     i2u58_40:
  3035   000038                     
  3036                           ; BSR set to: 14
  3037                           ;interrupts.c: 29:         if (!isDataInTxBuf()){
  3038   000038  EC2F  F006         	call	_isDataInTxBuf	;wreg free
  3039   00003C  0900               	iorlw	0
  3040   00003E  A4D8               	btfss	status,2,c
  3041   000040  EF24  F000         	goto	i2u59_41
  3042   000044  EF26  F000         	goto	i2u59_40
  3043   000048                     i2u59_41:
  3044   000048  EF2A  F000         	goto	i2l1418
  3045   00004C                     i2u59_40:
  3046   00004C                     
  3047                           ;interrupts.c: 30:             PIE4bits.TX4IE=0;
  3048   00004C  010E               	movlb	14	; () banked
  3049   00004E  952D               	bcf	45,2,b	;volatile
  3050   000050                     
  3051                           ; BSR set to: 14
  3052                           ;interrupts.c: 31:             sendFLAG=0;
  3053   000050  0E00               	movlw	0
  3054   000052  6E52               	movwf	_sendFLAG^0,c
  3055   000054                     i2l1418:
  3056                           
  3057                           ;interrupts.c: 33:         if (isDataInTxBuf()){
  3058   000054  EC2F  F006         	call	_isDataInTxBuf	;wreg free
  3059   000058  0900               	iorlw	0
  3060   00005A  B4D8               	btfsc	status,2,c
  3061   00005C  EF32  F000         	goto	i2u60_41
  3062   000060  EF34  F000         	goto	i2u60_40
  3063   000064                     i2u60_41:
  3064   000064  EF38  F000         	goto	i2l1422
  3065   000068                     i2u60_40:
  3066   000068                     
  3067                           ;interrupts.c: 34:             TX4REG = getCharFromTxBuf();
  3068   000068  ECA7  F005         	call	_getCharFromTxBuf	;wreg free
  3069   00006C  010E               	movlb	14	; () banked
  3070   00006E  6FE4               	movwf	228,b	;volatile
  3071   000070                     i2l1422:
  3072                           
  3073                           ;interrupts.c: 39:     if(PIR4bits.RC4IF){
  3074   000070  010E               	movlb	14	; () banked
  3075   000072  A737               	btfss	55,3,b	;volatile
  3076   000074  EF3E  F000         	goto	i2u61_41
  3077   000078  EF40  F000         	goto	i2u61_40
  3078   00007C                     i2u61_41:
  3079   00007C  EF47  F000         	goto	i2l172
  3080   000080                     i2u61_40:
  3081   000080                     
  3082                           ; BSR set to: 14
  3083                           ;interrupts.c: 40:         char reg = RC4REG;
  3084   000080  CEE3 F005          	movff	3811,HighISR@reg	;volatile
  3085   000084                     
  3086                           ; BSR set to: 14
  3087                           ;interrupts.c: 41:         putCharToRxBuf(reg);
  3088   000084  5005               	movf	HighISR@reg^0,w,c
  3089   000086  ECE7  F005         	call	_putCharToRxBuf
  3090   00008A                     
  3091                           ;interrupts.c: 42:         charFLAG=1;
  3092   00008A  0E01               	movlw	1
  3093   00008C  6E53               	movwf	_charFLAG^0,c
  3094   00008E                     i2l172:
  3095   00008E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3096   000092  C003  FFD9         	movff	??_HighISR,fsr2l
  3097   000096  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3098   000098  0011               	retfie		f
  3099   00009A                     __end_of_HighISR:
  3100                           	callstack 0
  3101                           
  3102 ;; *************** function _putCharToRxBuf *****************
  3103 ;; Defined at:
  3104 ;;		line 51 in file "serial.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  byte            1    wreg     unsigned char 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  byte            1    0[COMRAM] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;Total ram usage:        1 bytes
  3123 ;; Hardware stack levels used: 1
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_HighISR
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text25
  3132   000BCE                     __ptext25:
  3133                           	callstack 0
  3134   000BCE                     _putCharToRxBuf:
  3135                           	callstack 24
  3136                           
  3137                           ;incstack = 0
  3138                           ;putCharToRxBuf@byte stored from wreg
  3139   000BCE  6E01               	movwf	putCharToRxBuf@byte^0,c
  3140   000BD0                     
  3141                           ;serial.c: 52:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3142   000BD0  0E13               	movlw	19
  3143   000BD2  6451               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3144   000BD4  EFEE  F005         	goto	i2u46_41
  3145   000BD8  EFF0  F005         	goto	i2u46_40
  3146   000BDC                     i2u46_41:
  3147   000BDC  EFF2  F005         	goto	i2l1338
  3148   000BE0                     i2u46_40:
  3149   000BE0  0E00               	movlw	0
  3150   000BE2  6E51               	movwf	_RxBufWriteCnt^0,c	;volatile
  3151   000BE4                     i2l1338:
  3152                           
  3153                           ;serial.c: 53:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3154   000BE4  0E38               	movlw	low _EUSART4RXbuf
  3155   000BE6  2451               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3156   000BE8  6ED9               	movwf	fsr2l,c
  3157   000BEA  6ADA               	clrf	fsr2h,c
  3158   000BEC  0E00               	movlw	high _EUSART4RXbuf
  3159   000BEE  22DA               	addwfc	fsr2h,f,c
  3160   000BF0  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3161   000BF4  2A51               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3162   000BF6  0012               	return		;funcret
  3163   000BF8                     __end_of_putCharToRxBuf:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _isDataInTxBuf *****************
  3167 ;; Defined at:
  3168 ;;		line 79 in file "serial.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      unsigned char 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_HighISR
  3192 ;;		_sendTxBuf
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text26
  3197   000C5E                     __ptext26:
  3198                           	callstack 0
  3199   000C5E                     _isDataInTxBuf:
  3200                           	callstack 24
  3201   000C5E                     
  3202                           ;serial.c: 80:     return (TxBufWriteCnt!=TxBufReadCnt);
  3203   000C5E  504E               	movf	_TxBufReadCnt^0,w,c	;volatile
  3204   000C60  184F               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3205   000C62  A4D8               	btfss	status,2,c
  3206   000C64  EF36  F006         	goto	i2u43_41
  3207   000C68  EF39  F006         	goto	i2u43_40
  3208   000C6C                     i2u43_41:
  3209   000C6C  0E01               	movlw	1
  3210   000C6E  EF3A  F006         	goto	i2u44_40
  3211   000C72                     i2u43_40:
  3212   000C72  0E00               	movlw	0
  3213   000C74                     i2u44_40:
  3214   000C74  0012               	return		;funcret
  3215   000C76                     __end_of_isDataInTxBuf:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _getCharFromTxBuf *****************
  3219 ;; Defined at:
  3220 ;;		line 65 in file "serial.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      unsigned char 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;Total ram usage:        2 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_HighISR
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text27
  3248   000B4E                     __ptext27:
  3249                           	callstack 0
  3250   000B4E                     _getCharFromTxBuf:
  3251                           	callstack 24
  3252   000B4E                     
  3253                           ;serial.c: 66:     if (TxBufReadCnt>=100) {TxBufReadCnt=0;}
  3254   000B4E  0E63               	movlw	99
  3255   000B50  644E               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  3256   000B52  EFAD  F005         	goto	i2u45_41
  3257   000B56  EFAF  F005         	goto	i2u45_40
  3258   000B5A                     i2u45_41:
  3259   000B5A  EFB1  F005         	goto	i2l1330
  3260   000B5E                     i2u45_40:
  3261   000B5E  0E00               	movlw	0
  3262   000B60  6E4E               	movwf	_TxBufReadCnt^0,c	;volatile
  3263   000B62                     i2l1330:
  3264                           
  3265                           ;serial.c: 67:     return EUSART4TXbuf[TxBufReadCnt++];
  3266   000B62  2A4E               	incf	_TxBufReadCnt^0,f,c	;volatile
  3267   000B64  044E               	decf	_TxBufReadCnt^0,w,c	;volatile
  3268   000B66  6E01               	movwf	??_getCharFromTxBuf^0,c
  3269   000B68  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  3270   000B6A  0E60               	movlw	low _EUSART4TXbuf
  3271   000B6C  2401               	addwf	??_getCharFromTxBuf^0,w,c
  3272   000B6E  6ED9               	movwf	fsr2l,c
  3273   000B70  0E00               	movlw	high _EUSART4TXbuf
  3274   000B72  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  3275   000B74  6EDA               	movwf	fsr2h,c
  3276   000B76  50DF               	movf	indf2,w,c
  3277   000B78  0012               	return		;funcret
  3278   000B7A                     __end_of_getCharFromTxBuf:
  3279                           	callstack 0
  3280   000000                     
  3281                           	psect	rparam
  3282   000000                     
  3283                           	psect	temp
  3284   000057                     btemp:
  3285                           	callstack 0
  3286   000057                     	ds	1
  3287   000000                     int$flags	set	btemp
  3288   000000                     wtemp8	set	btemp+1
  3289   000000                     ttemp5	set	btemp+1
  3290   000000                     ttemp6	set	btemp+4
  3291   000000                     ttemp7	set	btemp+8
  3292                           
  3293                           	psect	idloc
  3294                           
  3295                           ;Config register IDLOC0 @ 0x200000
  3296                           ;	unspecified, using default values
  3297   200000                     	org	2097152
  3298   200000  0FFF               	dw	4095
  3299                           
  3300                           ;Config register IDLOC1 @ 0x200002
  3301                           ;	unspecified, using default values
  3302   200002                     	org	2097154
  3303   200002  0FFF               	dw	4095
  3304                           
  3305                           ;Config register IDLOC2 @ 0x200004
  3306                           ;	unspecified, using default values
  3307   200004                     	org	2097156
  3308   200004  0FFF               	dw	4095
  3309                           
  3310                           ;Config register IDLOC3 @ 0x200006
  3311                           ;	unspecified, using default values
  3312   200006                     	org	2097158
  3313   200006  0FFF               	dw	4095
  3314                           
  3315                           ;Config register IDLOC4 @ 0x200008
  3316                           ;	unspecified, using default values
  3317   200008                     	org	2097160
  3318   200008  0FFF               	dw	4095
  3319                           
  3320                           ;Config register IDLOC5 @ 0x20000A
  3321                           ;	unspecified, using default values
  3322   20000A                     	org	2097162
  3323   20000A  0FFF               	dw	4095
  3324                           
  3325                           ;Config register IDLOC6 @ 0x20000C
  3326                           ;	unspecified, using default values
  3327   20000C                     	org	2097164
  3328   20000C  0FFF               	dw	4095
  3329                           
  3330                           ;Config register IDLOC7 @ 0x20000E
  3331                           ;	unspecified, using default values
  3332   20000E                     	org	2097166
  3333   20000E  0FFF               	dw	4095
  3334                           
  3335                           	psect	config
  3336                           
  3337                           ;Config register CONFIG1L @ 0x300000
  3338                           ;	External Oscillator mode Selection bits
  3339                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3340                           ;	Power-up default value for COSC bits
  3341                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3342   300000                     	org	3145728
  3343   300000  AA                 	db	170
  3344                           
  3345                           ;Config register CONFIG1H @ 0x300001
  3346                           ;	unspecified, using default values
  3347                           ;	Clock Out Enable bit
  3348                           ;	CLKOUTEN = 0x1, unprogrammed default
  3349                           ;	Clock Switch Enable bit
  3350                           ;	CSWEN = 0x1, unprogrammed default
  3351                           ;	Fail-Safe Clock Monitor Enable bit
  3352                           ;	FCMEN = 0x1, unprogrammed default
  3353   300001                     	org	3145729
  3354   300001  FF                 	db	255
  3355                           
  3356                           ;Config register CONFIG2L @ 0x300002
  3357                           ;	unspecified, using default values
  3358                           ;	Master Clear Enable bit
  3359                           ;	MCLRE = 0x1, unprogrammed default
  3360                           ;	Power-up Timer Enable bit
  3361                           ;	PWRTE = 0x1, unprogrammed default
  3362                           ;	Low-power BOR enable bit
  3363                           ;	LPBOREN = 0x1, unprogrammed default
  3364                           ;	Brown-out Reset Enable bits
  3365                           ;	BOREN = 0x3, unprogrammed default
  3366   300002                     	org	3145730
  3367   300002  FF                 	db	255
  3368                           
  3369                           ;Config register CONFIG2H @ 0x300003
  3370                           ;	unspecified, using default values
  3371                           ;	Brown Out Reset Voltage selection bits
  3372                           ;	BORV = 0x3, unprogrammed default
  3373                           ;	ZCD Disable bit
  3374                           ;	ZCD = 0x1, unprogrammed default
  3375                           ;	PPSLOCK bit One-Way Set Enable bit
  3376                           ;	PPS1WAY = 0x1, unprogrammed default
  3377                           ;	Stack Full/Underflow Reset Enable bit
  3378                           ;	STVREN = 0x1, unprogrammed default
  3379                           ;	Debugger Enable bit
  3380                           ;	DEBUG = 0x1, unprogrammed default
  3381                           ;	Extended Instruction Set Enable bit
  3382                           ;	XINST = 0x1, unprogrammed default
  3383   300003                     	org	3145731
  3384   300003  FF                 	db	255
  3385                           
  3386                           ;Config register CONFIG3L @ 0x300004
  3387                           ;	WDT Period Select bits
  3388                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3389                           ;	WDT operating mode
  3390                           ;	WDTE = OFF, WDT Disabled
  3391   300004                     	org	3145732
  3392   300004  9F                 	db	159
  3393                           
  3394                           ;Config register CONFIG3H @ 0x300005
  3395                           ;	unspecified, using default values
  3396                           ;	WDT Window Select bits
  3397                           ;	WDTCWS = 0x7, unprogrammed default
  3398                           ;	WDT input clock selector
  3399                           ;	WDTCCS = 0x7, unprogrammed default
  3400   300005                     	org	3145733
  3401   300005  FF                 	db	255
  3402                           
  3403                           ;Config register CONFIG4L @ 0x300006
  3404                           ;	unspecified, using default values
  3405                           ;	Write Protection Block 0
  3406                           ;	WRT0 = 0x1, unprogrammed default
  3407                           ;	Write Protection Block 1
  3408                           ;	WRT1 = 0x1, unprogrammed default
  3409                           ;	Write Protection Block 2
  3410                           ;	WRT2 = 0x1, unprogrammed default
  3411                           ;	Write Protection Block 3
  3412                           ;	WRT3 = 0x1, unprogrammed default
  3413                           ;	Write Protection Block 3
  3414                           ;	WRT4 = 0x1, unprogrammed default
  3415                           ;	Write Protection Block 3
  3416                           ;	WRT5 = 0x1, unprogrammed default
  3417                           ;	Write Protection Block 3
  3418                           ;	WRT6 = 0x1, unprogrammed default
  3419                           ;	Write Protection Block 3
  3420                           ;	WRT7 = 0x1, unprogrammed default
  3421   300006                     	org	3145734
  3422   300006  FF                 	db	255
  3423                           
  3424                           ;Config register CONFIG4H @ 0x300007
  3425                           ;	unspecified, using default values
  3426                           ;	Configuration Register Write Protection bit
  3427                           ;	WRTC = 0x1, unprogrammed default
  3428                           ;	Boot Block Write Protection bit
  3429                           ;	WRTB = 0x1, unprogrammed default
  3430                           ;	Data EEPROM Write Protection bit
  3431                           ;	WRTD = 0x1, unprogrammed default
  3432                           ;	Scanner Enable bit
  3433                           ;	SCANE = 0x1, unprogrammed default
  3434                           ;	Low Voltage Programming Enable bit
  3435                           ;	LVP = 0x1, unprogrammed default
  3436   300007                     	org	3145735
  3437   300007  FF                 	db	255
  3438                           
  3439                           ;Config register CONFIG5L @ 0x300008
  3440                           ;	unspecified, using default values
  3441                           ;	UserNVM Program Memory Code Protection bit
  3442                           ;	CP = 0x1, unprogrammed default
  3443                           ;	DataNVM Memory Code Protection bit
  3444                           ;	CPD = 0x1, unprogrammed default
  3445   300008                     	org	3145736
  3446   300008  FF                 	db	255
  3447                           
  3448                           ;Config register CONFIG5H @ 0x300009
  3449                           ;	unspecified, using default values
  3450   300009                     	org	3145737
  3451   300009  FF                 	db	255
  3452                           
  3453                           ;Config register CONFIG6L @ 0x30000A
  3454                           ;	unspecified, using default values
  3455                           ;	Table Read Protection Block 0
  3456                           ;	EBTR0 = 0x1, unprogrammed default
  3457                           ;	Table Read Protection Block 1
  3458                           ;	EBTR1 = 0x1, unprogrammed default
  3459                           ;	Table Read Protection Block 2
  3460                           ;	EBTR2 = 0x1, unprogrammed default
  3461                           ;	Table Read Protection Block 3
  3462                           ;	EBTR3 = 0x1, unprogrammed default
  3463                           ;	Table Read Protection Block 4
  3464                           ;	EBTR4 = 0x1, unprogrammed default
  3465                           ;	Table Read Protection Block 5
  3466                           ;	EBTR5 = 0x1, unprogrammed default
  3467                           ;	Table Read Protection Block 6
  3468                           ;	EBTR6 = 0x1, unprogrammed default
  3469                           ;	Table Read Protection Block 7
  3470                           ;	EBTR7 = 0x1, unprogrammed default
  3471   30000A                     	org	3145738
  3472   30000A  FF                 	db	255
  3473                           
  3474                           ;Config register CONFIG6H @ 0x30000B
  3475                           ;	unspecified, using default values
  3476                           ;	Boot Block Table Read Protection bit
  3477                           ;	EBTRB = 0x1, unprogrammed default
  3478   30000B                     	org	3145739
  3479   30000B  FF                 	db	255
  3480                           tosu	equ	0xFFF
  3481                           tosh	equ	0xFFE
  3482                           tosl	equ	0xFFD
  3483                           stkptr	equ	0xFFC
  3484                           pclatu	equ	0xFFB
  3485                           pclath	equ	0xFFA
  3486                           pcl	equ	0xFF9
  3487                           tblptru	equ	0xFF8
  3488                           tblptrh	equ	0xFF7
  3489                           tblptrl	equ	0xFF6
  3490                           tablat	equ	0xFF5
  3491                           prodh	equ	0xFF4
  3492                           prodl	equ	0xFF3
  3493                           indf0	equ	0xFEF
  3494                           postinc0	equ	0xFEE
  3495                           postdec0	equ	0xFED
  3496                           preinc0	equ	0xFEC
  3497                           plusw0	equ	0xFEB
  3498                           fsr0h	equ	0xFEA
  3499                           fsr0l	equ	0xFE9
  3500                           wreg	equ	0xFE8
  3501                           indf1	equ	0xFE7
  3502                           postinc1	equ	0xFE6
  3503                           postdec1	equ	0xFE5
  3504                           preinc1	equ	0xFE4
  3505                           plusw1	equ	0xFE3
  3506                           fsr1h	equ	0xFE2
  3507                           fsr1l	equ	0xFE1
  3508                           bsr	equ	0xFE0
  3509                           indf2	equ	0xFDF
  3510                           postinc2	equ	0xFDE
  3511                           postdec2	equ	0xFDD
  3512                           preinc2	equ	0xFDC
  3513                           plusw2	equ	0xFDB
  3514                           fsr2h	equ	0xFDA
  3515                           fsr2l	equ	0xFD9
  3516                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         188
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      86
    BANK0           160      0     160
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 3
		 -> main@buf(COMRAM[3]), 

    levels@colorL	PTR struct RGB_val size(2) Largest target is 6
		 -> main@colorL(COMRAM[6]), 

    readcard@colorL	PTR struct RGB_val size(2) Largest target is 6
		 -> main@colorL(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_readcard
    _readcard->___xxtofl
    _levels->_color_read_Blue
    _levels->_color_read_Green
    _levels->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->___lwdiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    4911
                                             42 COMRAM    13    13      0
                    _Interrupts_init
                              _Light
                          _LightInit
                   _TxBufferedString
                   _color_click_init
                         _initUSART4
                           _readcard
 ---------------------------------------------------------------------------------
 (1) _readcard                                            16    14      2    4133
                                             26 COMRAM    16    14      2
                             ___flge
                            ___lwdiv
                           ___xxtofl
                             _levels
 ---------------------------------------------------------------------------------
 (2) _levels                                               6     2      4    1203
                                             16 COMRAM     6     2      4
                              _Light
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2      91
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2      91
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2      91
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      30
                                              6 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _Light                                                1     1      0      60
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     469
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     456
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1398
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              7 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      15
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     136
                                              6 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LightInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              3     3      0      30
                                              2 COMRAM     3     3      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Light
   _LightInit
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _readcard
     ___flge
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _levels
       _Light
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITBIGSFRlhhhlh     8F      0       0      38        0.0%
BITBIGSFRhlh        6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      56       1       91.5%
BITBIGSFRlhhlhl     36      0       0      42        0.0%
BITBIGSFRlhhlhl     2D      0       0      41        0.0%
BITBIGSFRlhhll      2A      0       0      44        0.0%
BITBIGSFRllll       26      0       0      49        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRlhhlhl      C      0       0      43        0.0%
BITBIGSFRlllhh       B      0       0      47        0.0%
BITBIGSFRlhl         9      0       0      45        0.0%
BITBIGSFRlhhlhh      8      0       0      39        0.0%
BITBIGSFRlllhl       6      0       0      48        0.0%
BITBIGSFRlhhhh       4      0       0      37        0.0%
BITBIGSFRllh         3      0       0      46        0.0%
BITBIGSFRhllhl       2      0       0      35        0.0%
BITBIGSFRhllhh       1      0       0      34        0.0%
BITBIGSFRlhhlhl      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F6      50        0.0%
DATA                 0      0      F6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 04 13:28:44 2022

               _color_read_Red 0970                _color_read_Blue 0A10                             l80 0C3E  
                           l83 09BE                             l77 0B4C                             l86 0A5E  
                           l89 0A0E                             u10 0C08                             u11 0C04  
                           u20 0C1E                             u21 0C1A                             u30 0A8A  
                           u31 0A82                             u50 0922                             u51 091E  
                           u60 0938                             u61 0934                             u70 0950  
                           u71 094C                             u80 0968                             u48 0A8C  
                           u81 0964               _color_read_Green 09C0              ??_Interrupts_init 0006  
                          l111 0446                            l120 089A                            l241 0C5C  
                          l163 0C84                            l332 0BF8                            l341 0CA8  
                          l350 0AA0                            l335 0C1E                            l344 0CB2  
                          l329 0BA2                            l338 0CBC                            l194 096E  
                          l187 0C92                            l347 0C9E                            l278 0BCC  
                          l287 0B18                            l623 0822                            l618 07DC  
                          l851 090E                            l844 0906                            u100 0BB6  
                          u101 0BB2                            u700 078C                            u701 0788  
                          u710 07AA                            u711 07A6                            u720 07CA  
                          u800 051A                            u721 07C6                            u801 0516  
                          u730 081A                            u810 0564                            u731 0816  
                          u811 0560                            u740 08B6                            u820 0582  
                          u900 025C                            u741 08B2                            u821 057E  
                          u901 0258                            u750 08D4                            u830 0592  
                          u910 028E                            u751 08D0                            u831 058E  
                          u911 028A                            u760 08F0                            u840 05A0  
                          u680 0854                            u920 02C0                            u761 08EC  
                          u841 059C                            u681 0850                            u921 02BC  
                          u690 074E                            u850 05DA                            u770 045A  
                          u930 02E2                            u691 074A                            u851 05D6  
                          u771 0456                            u931 02DE                            u860 05E8  
                          u780 0468                            u940 0320                            u861 05E4  
                          u781 0464                            u941 031C                            u790 04C4  
                          u950 0352                            u870 01C6                            u791 04C0  
                          u951 034E                            u871 01C2                            u960 0388  
                          u880 01F8                            u961 0384                            u881 01F4  
                          u970 03C4                            u890 022A                            u971 03C0  
                          u891 0226                            u980 0400                            u981 03FC  
                          u990 043E                            u991 043A                            wreg 000FE8  
                         l1011 05FA                           l1100 0B8C                           l1102 0B8E  
                         l1030 0CB4                           l1022 0592                           l1015 0536  
                         l1120 0BB6                           l1104 0B90                           l1032 0CB8  
                         l1040 0CAE                           l1008 049E                           l1122 0BBA  
                         l1026 0BF8                           l1034 0C96                           l1050 0A6E  
                         l1042 0CA0                           l1124 0BCA                           l1028 0C08  
                         l1036 0C9A                           l1220 0C4C                           l1060 0912  
                         l1052 0A76                           l1044 0CA4                           l1118 0BA6  
                         l1038 0CAA                           l1222 0C56                           l1070 0950  
                         l1062 0922                           l1054 0A9C                           l1046 0A62  
                         l1240 0C86                           l1224 0C58                           l1216 0C40  
                         l1072 0956                           l1064 0928                           l1056 0A9E  
                         l1048 0A66                           l1226 0C5A                           l1218 0C4A  
                         l1074 0968                           l1066 0938                           l1228 0C76  
                         l1068 093E                           l1500 0824                           l1094 0B7A  
                         l1510 0720                           l1502 082A                           l1096 0B84  
                         l1600 0B1A                           l1520 07AA                           l1512 074E  
                         l1504 0842                           l1098 0B8A                           l1602 0B1E  
                         l1522 07BC                           l1514 075E                           l1506 0854  
                         l1610 009E                           l1604 0B28                           l1524 07CA  
                         l1516 078C                           l1540 08C6                           l1532 089C  
                         l1508 0856                           l1620 025C                           l1612 0194  
                         l1700 0618                           l1606 0B38                           l1526 081A  
                         l1518 079C                           l1550 08FA                           l1542 08D4  
                         l1534 08A4                           l1630 02E8                           l1622 028E  
                         l1614 01C6                           l1710 0650                           l1702 061E  
                         l1608 0B42                           l1528 0820                           l1552 0900  
                         l1544 08DA                           l1536 08B6                           l1560 04AE  
                         l1480 0970                           l1640 0366                           l1624 02C0  
                         l1616 01F8                           l1720 0680                           l1712 0654  
                         l1704 062C                           l1546 08F0                           l1538 08BE  
                         l1570 04EC                           l1562 04C4                           l1554 044A  
                         l1482 09B6                           l1650 03C4                           l1642 0388  
                         l1626 02E2                           l1618 022A                           l1634 02EE  
                         l1730 06BE                           l1722 0692                           l1714 0666  
                         l1706 063C                           l1548 08F8                           l1580 0574  
                         l1572 051E                           l1556 045A                           l1492 09C0  
                         l1636 0320                           l1740 06EA                           l1732 06C2  
                         l1724 0696                           l1716 066A                           l1708 0640  
                         l1590 05CA                           l1582 0582                           l1574 0520  
                         l1566 04D8                           l1558 0468                           l1486 0A10  
                         l1494 0A06                           l1670 043E                           l1662 0406  
                         l1654 03CA                           l1646 038E                           l1638 0352  
                         l1734 06D4                           l1726 06A8                           l1718 067C  
                         l1680 0AE6                           l1592 05DA                           l1584 05A0  
                         l1576 052C                           l1568 04E0                           l1488 0A56  
                         l1656 03DE                           l1648 03A2                           l1736 06D8  
                         l1728 06AC                           l1682 0AF4                           l1498 0C22  
                         l1594 05E8                           l1586 05A2                           l1578 0568  
                         l1674 0444                           l1658 0400                           l1666 040C  
                         l1746 06EE                           l1738 06E4                           l1690 05FC  
                         l1684 0AF8                           l1596 05EA                           l1588 05A6  
                         l1668 0420                           l1748 0706                           l1692 0600  
                         l1686 0B10                           l1678 0AE2                           l1694 0604  
                         l1688 0B14                           l1696 0608                           l1698 060C  
                         u1000 0B10                           u1001 0B0C                           u1010 063C  
                         u1011 0638                           u1020 0650                           u1021 064C  
                         u1030 0666                           u1031 0662                           u1040 067C  
                         u1041 0678                           u1050 0692                           u1051 068E  
                         u1060 06A8                           u1061 06A4                           u1070 06BE  
                         u1127 06F8                           u1071 06BA                           u1080 06D4  
                         u1137 0834                           u1081 06D0                           u1090 0718  
                         u1147 0B2E                           u1091 0714                   _BAUD4CONbits 000EE9  
                         _main 05FC                           fsr2h 000FDA                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 0057                           start 009A  
       __end_of_color_read_Red 09C0                __end_of_HighISR 009A                   ___param_bank 000000  
                        ?_main 0001                __end_of___lwdiv 0910                          i2l172 008E  
                        i2l281 0C74                          i2l274 0B78                          i2l267 0BF6  
                        _Light 0910     __end_of_I2C_2_Master_Start 0CBE     __end_of_I2C_2_Master_Write 0CA0  
                        main@j 0030                          tablat 000FF5                          ttemp5 0058  
                        ttemp6 005B                          ttemp7 005F                          status 000FD8  
                        wtemp8 0058        __end_of_color_read_Blue 0A60          _I2C_2_Master_RepStart 0CA0  
           putCharToRxBuf@byte 0001                ?_color_read_Red 000A                __initialization 0AA2  
                 __end_of_main 0720             putCharToTxBuf@byte 0006                         ??_main 002B  
                __activetblptr 000000                         ?_Light 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RD5PPS 000E6F                         _RD6PPS 000E70  
                       i2l1330 0B62                         i2l1322 0C5E                         i2l1410 0012  
                       i2l1340 0BF4                         i2l1420 0068                         i2l1412 0038  
                       i2l1326 0B4E                         i2l1334 0BD0                         i2l1414 004C  
                       i2l1422 0070                         i2l1328 0B5E                         i2l1336 0BE0  
                       i2l1424 0080                         i2l1416 0050                         i2l1338 0BE4  
                       i2l1426 0084                         i2l1418 0054                         i2l1428 008A  
                    ??_HighISR 0003       __end_of_color_click_init 0B4E                         _RX4PPS 000E15  
                       _TX4REG 000EE4               __end_of___xxtofl 05FC                         ___flge 0720  
             _getCharFromTxBuf 0B4E                      ??___lwdiv 000A                         _levels 0824  
                       clear_0 0AC6                         clear_1 0AD2               __end_of_readcard 0448  
                       isa$std 000001              ?_TxBufferedString 0007                   __pdataCOMRAM 0054  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
           ??_TxBufferedString 0009                     ___flge@ff1 0006                     ___flge@ff2 000A  
                 ___xxtofl@arg 0017                   ___xxtofl@exp 0016                   ___xxtofl@val 000D  
        __end_of_isDataInTxBuf 0C76                     __accesstop 0060        __end_of__initialization 0AD8  
     __end_of_color_read_Green 0A10         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 000A                _Interrupts_init 0C76                  __end_of_Light 0970  
               __pcstackCOMRAM 0001              __end_of_LightInit 0C94                        ??_Light 0006  
                   __pbssBANK0 0060              _color_writetoaddr 0C20                        ?___flge 0006  
           ?_color_writetoaddr 0008                        ?_levels 0011            ??_color_writetoaddr 0009  
                    ?___xxtofl 000D                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      i2u43_40 0C72                        i2u43_41 0C6C                        i2u44_40 0C74  
                      i2u60_40 0068                        i2u60_41 0064                        i2u45_40 0B5E  
                      i2u61_40 0080                        i2u45_41 0B5A                        i2u61_41 007C  
                      i2u46_40 0BE0                        i2u46_41 0BDC                        i2u57_40 0024  
                      i2u57_41 001E                        i2u57_46 0026                        i2u58_40 0038  
                      i2u58_41 0034                        i2u59_40 004C                        i2u59_41 0048  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5        __end_of_Interrupts_init 0C86  
       color_writetoaddr@value 0008               ??_color_read_Red 000C                        _HighISR 0008  
                    ?_readcard 001B      __end_of_color_writetoaddr 0C40             _I2C_2_Master_Start 0CB4  
                   _initUSART4 0C40             _I2C_2_Master_Write 0C94                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000F            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 089C            ?_I2C_2_Master_Write 0001                        __pcinit 0AA2  
                      __ramtop 0E00                        __ptext0 05FC                        __ptext1 009E  
                      __ptext2 0824                        __ptext3 0970                        __ptext4 09C0  
                      __ptext5 0A10                        __ptext6 0CA0                        __ptext7 0A60  
                      __ptext8 0910                        __ptext9 0448                     ??___xxtofl 0011  
                _RxBufWriteCnt 0051       __end_of_getCharFromTxBuf 0B7A                        main@buf 002D  
         ??_I2C_2_Master_Start 0007           ??_I2C_2_Master_Write 0007           end_of_initialization 0AD8  
                      levels@i 0011                     ??_readcard 001D              ?_color_click_init 0001  
           ??_color_click_init 000A                   levels@colorL 0013                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                     main@F14591 0054  
                ___xxtofl@sign 0015                      _TRISAbits 000F81                      _TRISDbits 000F84  
                    _TRISFbits 000F86                      _TRISGbits 000F87       color_writetoaddr@address 0009  
      ??_I2C_2_Master_RepStart 0007               ?_Interrupts_init 0001                     main@colorL 0031  
                 _EUSART4RXbuf 0038                   _EUSART4TXbuf 0060                   _EUSART4VXbuf 00C4  
            ?_color_read_Green 000A                    ?_initUSART4 0001             ??_color_read_Green 000C  
               __end_of___flge 0824                  __pidataCOMRAM 0CBE                 __end_of_levels 089C  
          start_initialization 0AA2                      _LightInit 0C86                  _TxBufWriteCnt 004F  
          color_read_Green@tmp 000F                       ??___flge 000E                 _putCharToRxBuf 0BCE  
               _putCharToTxBuf 0BA4                       ??_levels 0015                    __pbssCOMRAM 0038  
                   ?_LightInit 0001                       ?_HighISR 0001               ___lwdiv@dividend 0006  
       __end_of_putCharToRxBuf 0BF8         __end_of_putCharToTxBuf 0BCE                      __pintcode 0008  
                     ?___lwdiv 0006         TxBufferedString@string 0007           I2C_2_Master_Read@ack 0008  
               Light@colorcode 0006           I2C_2_Master_Read@tmp 0009              _I2C_2_Master_Idle 0BF8  
            _I2C_2_Master_Init 0B7A              _I2C_2_Master_Read 0A60              _I2C_2_Master_Stop 0CAA  
                 _RxBufReadCnt 0050             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000A  
                _VxBufWriteCnt 004D              ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001  
          ??_I2C_2_Master_Idle 0006            ??_I2C_2_Master_Init 0006            ??_I2C_2_Master_Read 0007  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0007                  _isDataInTxBuf 0C5E  
                     _LATFbits 000F7E               _TxBufferedString 0AE2                       _LATGbits 000F7F  
                     _PIE0bits 000E29                       _PIE4bits 000E2D                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA  
                     _SSP2STAT 000ED8      __end_of_I2C_2_Master_Idle 0C20      __end_of_I2C_2_Master_Init 0BA4  
    __end_of_I2C_2_Master_Read 0AA2      __end_of_I2C_2_Master_Stop 0CB4    I2C_2_Master_Write@data_byte 0007  
                    main@color 0037              ??_color_read_Blue 000C                    ??_LightInit 0006  
                 _TxBufReadCnt 004E                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 0CAA  
           color_read_Blue@tmp 000F                   ??_initUSART4 0006                       __Hrparam 0000  
                     __Lrparam 0000                       _charFLAG 0053                     _ANSELDbits 000EA7  
                     ___xxtofl 0448                ___lwdiv@divisor 0008             __end_of_initUSART4 0C5E  
                 _VxBufReadCnt 004C                ___lwdiv@counter 000C                       __ptext10 089C  
                     __ptext11 0720                       __ptext20 0AE2                       __ptext12 0C40  
                     __ptext21 0BA4                       __ptext13 0B1A                       __ptext22 0C86  
                     __ptext14 0C20                       __ptext23 0C76                       __ptext15 0C94  
                     __ptext16 0CAA                       __ptext25 0BCE                       __ptext17 0CB4  
                     __ptext26 0C5E                       __ptext18 0BF8                       __ptext27 0B4E  
                     __ptext19 0B7A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     _readcard 009E                       _sendFLAG 0052                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 0057                 readcard@colorL 001B  
               readcard@ratio1 0023                 readcard@ratio2 0027                 readcard@ratio3 001F  
                   _INTCONbits 000FF2                ??_isDataInTxBuf 0001                       intlevel2 0000  
                   HighISR@reg 0005               _color_click_init 0B1A       __end_of_TxBufferedString 0B1A  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
             ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0006  
