

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 04 14:25:14 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Version 2.35
    48                           ; Generated 05/05/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F67K40 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataBANK0
    84   000C26                     __pidataBANK0:
    85                           	callstack 0
    86                           
    87                           ;initializer for main@F14607
    88   000C26  6C                 	db	108
    89   000C27  69                 	db	105
    90   000C28  67                 	db	103
    91   000C29  68                 	db	104
    92   000C2A  74                 	db	116
    93   000C2B  20                 	db	32
    94   000C2C  62                 	db	98
    95   000C2D  6C                 	db	108
    96   000C2E  75                 	db	117
    97   000C2F  65                 	db	101
    98   000C30  20                 	db	32
    99   000C31  00                 	db	0
   100                           
   101                           ;initializer for main@F14605
   102   000C32  6F                 	db	111
   103   000C33  72                 	db	114
   104   000C34  61                 	db	97
   105   000C35  6E                 	db	110
   106   000C36  67                 	db	103
   107   000C37  65                 	db	101
   108   000C38  20                 	db	32
   109   000C39  00                 	db	0
   110                           
   111                           ;initializer for main@F14603
   112   000C3A  79                 	db	121
   113   000C3B  65                 	db	101
   114   000C3C  6C                 	db	108
   115   000C3D  6C                 	db	108
   116   000C3E  6F                 	db	111
   117   000C3F  77                 	db	119
   118   000C40  20                 	db	32
   119   000C41  00                 	db	0
   120                           
   121                           ;initializer for main@F14599
   122   000C42  67                 	db	103
   123   000C43  72                 	db	114
   124   000C44  65                 	db	101
   125   000C45  65                 	db	101
   126   000C46  6E                 	db	110
   127   000C47  20                 	db	32
   128   000C48  00                 	db	0
   129                           
   130                           ;initializer for main@F14593
   131   000C49  77                 	db	119
   132   000C4A  68                 	db	104
   133   000C4B  69                 	db	105
   134   000C4C  74                 	db	116
   135   000C4D  65                 	db	101
   136   000C4E  20                 	db	32
   137   000C4F  00                 	db	0
   138                           
   139                           ;initializer for main@F14601
   140   000C50  70                 	db	112
   141   000C51  69                 	db	105
   142   000C52  6E                 	db	110
   143   000C53  6B                 	db	107
   144   000C54  20                 	db	32
   145   000C55  00                 	db	0
   146                           
   147                           ;initializer for main@F14597
   148   000C56  62                 	db	98
   149   000C57  6C                 	db	108
   150   000C58  75                 	db	117
   151   000C59  65                 	db	101
   152   000C5A  20                 	db	32
   153   000C5B  00                 	db	0
   154                           
   155                           ;initializer for main@F14595
   156   000C5C  72                 	db	114
   157   000C5D  65                 	db	101
   158   000C5E  64                 	db	100
   159   000C5F  20                 	db	32
   160   000C60  00                 	db	0
   161   000000                     _RC4STAbits	set	3815
   162   000000                     _SP4BRGH	set	3814
   163   000000                     _SP4BRGL	set	3813
   164   000000                     _TX4STAbits	set	3816
   165   000000                     _BAUD4CONbits	set	3817
   166   000000                     _LATAbits	set	3961
   167   000000                     _SSP2CON2bits	set	3802
   168   000000                     _RX4PPS	set	3605
   169   000000                     _PIE0bits	set	3625
   170   000000                     _PIE4bits	set	3629
   171   000000                     _LATFbits	set	3966
   172   000000                     _LATGbits	set	3967
   173   000000                     _TRISAbits	set	3969
   174   000000                     _TRISFbits	set	3974
   175   000000                     _TRISGbits	set	3975
   176   000000                     _INTCONbits	set	4082
   177   000000                     _PIR4bits	set	3639
   178   000000                     _RC0PPS	set	3682
   179   000000                     _RC4REG	set	3811
   180   000000                     _TX4REG	set	3812
   181   000000                     _TRISDbits	set	3972
   182   000000                     _RD5PPS	set	3695
   183   000000                     _ANSELDbits	set	3751
   184   000000                     _SSP2ADD	set	3798
   185   000000                     _SSP2CON1bits	set	3801
   186   000000                     _SSP2CLKPPS	set	3612
   187   000000                     _SSP2DATPPS	set	3613
   188   000000                     _SSP2CON2	set	3802
   189   000000                     _SSP2STAT	set	3800
   190   000000                     _SSP2BUF	set	3797
   191   000000                     _RD6PPS	set	3696
   192                           
   193                           ; #config settings
   194                           
   195                           	psect	cinit
   196   000BA2                     __pcinit:
   197                           	callstack 0
   198   000BA2                     start_initialization:
   199                           	callstack 0
   200   000BA2                     __initialization:
   201                           	callstack 0
   202                           
   203                           ; Initialize objects allocated to BANK0 (59 bytes)
   204                           ; load TBLPTR registers with __pidataBANK0
   205   000BA2  0E26               	movlw	low __pidataBANK0
   206   000BA4  6EF6               	movwf	tblptrl,c
   207   000BA6  0E0C               	movlw	high __pidataBANK0
   208   000BA8  6EF7               	movwf	tblptrh,c
   209   000BAA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   210   000BAC  6EF8               	movwf	tblptru,c
   211   000BAE  EE00  F0B2         	lfsr	0,__pdataBANK0
   212   000BB2  EE10 F03B          	lfsr	1,59
   213   000BB6                     copy_data0:
   214   000BB6  0009               	tblrd		*+
   215   000BB8  CFF5 FFEE          	movff	tablat,postinc0
   216   000BBC  50E5               	movf	postdec1,w,c
   217   000BBE  50E1               	movf	fsr1l,w,c
   218   000BC0  E1FA               	bnz	copy_data0
   219                           
   220                           ; Clear objects allocated to BANK1 (160 bytes)
   221   000BC2  EE01  F000         	lfsr	0,__pbssBANK1
   222   000BC6  0EA0               	movlw	160
   223   000BC8                     clear_0:
   224   000BC8  6AEE               	clrf	postinc0,c
   225   000BCA  06E8               	decf	wreg,f,c
   226   000BCC  E1FD               	bnz	clear_0
   227                           
   228                           ; Clear objects allocated to COMRAM (28 bytes)
   229   000BCE  EE00  F033         	lfsr	0,__pbssCOMRAM
   230   000BD2  0E1C               	movlw	28
   231   000BD4                     clear_1:
   232   000BD4  6AEE               	clrf	postinc0,c
   233   000BD6  06E8               	decf	wreg,f,c
   234   000BD8  E1FD               	bnz	clear_1
   235   000BDA                     end_of_initialization:
   236                           	callstack 0
   237   000BDA                     __end_of__initialization:
   238                           	callstack 0
   239   000BDA  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   240   000BDC  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   241   000BDE  0100               	movlb	0
   242   000BE0  EF6A  F003         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245   000033                     __pbssCOMRAM:
   246                           	callstack 0
   247   000033                     _EUSART4RXbuf:
   248                           	callstack 0
   249   000033                     	ds	20
   250   000047                     _VxBufReadCnt:
   251                           	callstack 0
   252   000047                     	ds	1
   253   000048                     _VxBufWriteCnt:
   254                           	callstack 0
   255   000048                     	ds	1
   256   000049                     _TxBufReadCnt:
   257                           	callstack 0
   258   000049                     	ds	1
   259   00004A                     _TxBufWriteCnt:
   260                           	callstack 0
   261   00004A                     	ds	1
   262   00004B                     _RxBufReadCnt:
   263                           	callstack 0
   264   00004B                     	ds	1
   265   00004C                     _RxBufWriteCnt:
   266                           	callstack 0
   267   00004C                     	ds	1
   268   00004D                     _sendFLAG:
   269                           	callstack 0
   270   00004D                     	ds	1
   271   00004E                     _charFLAG:
   272                           	callstack 0
   273   00004E                     	ds	1
   274                           
   275                           	psect	dataBANK0
   276   0000B2                     __pdataBANK0:
   277                           	callstack 0
   278   0000B2                     main@F14607:
   279                           	callstack 0
   280   0000B2                     	ds	12
   281   0000BE                     main@F14605:
   282                           	callstack 0
   283   0000BE                     	ds	8
   284   0000C6                     main@F14603:
   285                           	callstack 0
   286   0000C6                     	ds	8
   287   0000CE                     main@F14599:
   288                           	callstack 0
   289   0000CE                     	ds	7
   290   0000D5                     main@F14593:
   291                           	callstack 0
   292   0000D5                     	ds	7
   293   0000DC                     main@F14601:
   294                           	callstack 0
   295   0000DC                     	ds	6
   296   0000E2                     main@F14597:
   297                           	callstack 0
   298   0000E2                     	ds	6
   299   0000E8                     main@F14595:
   300                           	callstack 0
   301   0000E8                     	ds	5
   302                           
   303                           	psect	bssBANK1
   304   000100                     __pbssBANK1:
   305                           	callstack 0
   306   000100                     _EUSART4TXbuf:
   307                           	callstack 0
   308   000100                     	ds	100
   309   000164                     _EUSART4VXbuf:
   310                           	callstack 0
   311   000164                     	ds	60
   312                           
   313                           	psect	cstackBANK0
   314   000060                     __pcstackBANK0:
   315                           	callstack 0
   316   000060                     main@buf_103:
   317                           	callstack 0
   318                           
   319                           ; 12 bytes @ 0x0
   320   000060                     	ds	12
   321   00006C                     main@buf_99:
   322                           	callstack 0
   323                           
   324                           ; 8 bytes @ 0xC
   325   00006C                     	ds	8
   326   000074                     main@buf_101:
   327                           	callstack 0
   328                           
   329                           ; 8 bytes @ 0x14
   330   000074                     	ds	8
   331   00007C                     main@buf_89:
   332                           	callstack 0
   333                           
   334                           ; 7 bytes @ 0x1C
   335   00007C                     	ds	7
   336   000083                     main@buf_95:
   337                           	callstack 0
   338                           
   339                           ; 7 bytes @ 0x23
   340   000083                     	ds	7
   341   00008A                     main@buf:
   342                           	callstack 0
   343                           
   344                           ; 15 bytes @ 0x2A
   345   00008A                     	ds	15
   346   000099                     main@buf_93:
   347                           	callstack 0
   348                           
   349                           ; 6 bytes @ 0x39
   350   000099                     	ds	6
   351   00009F                     main@buf_97:
   352                           	callstack 0
   353                           
   354                           ; 6 bytes @ 0x3F
   355   00009F                     	ds	6
   356   0000A5                     main@buf_91:
   357                           	callstack 0
   358                           
   359                           ; 5 bytes @ 0x45
   360   0000A5                     	ds	5
   361   0000AA                     main@j:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x4A
   365   0000AA                     	ds	1
   366   0000AB                     main@colorL:
   367                           	callstack 0
   368                           
   369                           ; 6 bytes @ 0x4B
   370   0000AB                     	ds	6
   371   0000B1                     main@color:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x51
   375   0000B1                     	ds	1
   376                           
   377                           	psect	cstackCOMRAM
   378   000001                     __pcstackCOMRAM:
   379                           	callstack 0
   380   000001                     ??_getCharFromTxBuf:
   381   000001                     putCharToRxBuf@byte:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x0
   385   000001                     	ds	2
   386   000003                     ??_HighISR:
   387                           
   388                           ; 1 bytes @ 0x2
   389   000003                     	ds	2
   390   000005                     HighISR@reg:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x4
   394   000005                     	ds	1
   395   000006                     ??_I2C_2_Master_Idle:
   396   000006                     ?___wmul:
   397                           	callstack 0
   398   000006                     Light@colorcode:
   399                           	callstack 0
   400   000006                     putCharToTxBuf@byte:
   401                           	callstack 0
   402   000006                     ___wmul@multiplier:
   403                           	callstack 0
   404   000006                     ___flge@ff1:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x5
   408   000006                     	ds	1
   409   000007                     ??_I2C_2_Master_Read:
   410   000007                     I2C_2_Master_Write@data_byte:
   411                           	callstack 0
   412   000007                     TxBufferedString@string:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x6
   416   000007                     	ds	1
   417   000008                     color_writetoaddr@value:
   418                           	callstack 0
   419   000008                     I2C_2_Master_Read@ack:
   420                           	callstack 0
   421   000008                     ___wmul@multiplicand:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x7
   425   000008                     	ds	1
   426   000009                     color_writetoaddr@address:
   427                           	callstack 0
   428   000009                     I2C_2_Master_Read@tmp:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x8
   432   000009                     	ds	1
   433   00000A                     ??_color_click_init:
   434   00000A                     ?_color_read_Red:
   435                           	callstack 0
   436   00000A                     ?_color_read_Blue:
   437                           	callstack 0
   438   00000A                     ?_color_read_Green:
   439                           	callstack 0
   440   00000A                     ___wmul@product:
   441                           	callstack 0
   442   00000A                     ___flge@ff2:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x9
   446   00000A                     	ds	2
   447   00000C                     ??_color_read_Red:
   448   00000C                     ??_color_read_Blue:
   449   00000C                     ??_color_read_Green:
   450   00000C                     ?___lwdiv:
   451                           	callstack 0
   452   00000C                     ___lwdiv@dividend:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0xB
   456   00000C                     	ds	2
   457   00000E                     ??___flge:
   458   00000E                     ___lwdiv@divisor:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xD
   462   00000E                     	ds	1
   463   00000F                     color_read_Red@tmp:
   464                           	callstack 0
   465   00000F                     color_read_Blue@tmp:
   466                           	callstack 0
   467   00000F                     color_read_Green@tmp:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xE
   471   00000F                     	ds	1
   472   000010                     ___lwdiv@quotient:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xF
   476   000010                     	ds	1
   477   000011                     levels@i:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x10
   481   000011                     	ds	1
   482   000012                     ___lwdiv@counter:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x11
   486   000012                     	ds	1
   487   000013                     ?___xxtofl:
   488                           	callstack 0
   489   000013                     levels@colorL:
   490                           	callstack 0
   491   000013                     ___xxtofl@val:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x12
   495   000013                     	ds	2
   496   000015                     ??_levels:
   497                           
   498                           ; 1 bytes @ 0x14
   499   000015                     	ds	2
   500   000017                     ??___xxtofl:
   501                           
   502                           ; 1 bytes @ 0x16
   503   000017                     	ds	4
   504   00001B                     ___xxtofl@sign:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x1A
   508   00001B                     	ds	1
   509   00001C                     ___xxtofl@exp:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x1B
   513   00001C                     	ds	1
   514   00001D                     ___xxtofl@arg:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x1C
   518   00001D                     	ds	4
   519   000021                     readcard@colorL:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x20
   523   000021                     	ds	2
   524   000023                     
   525                           ; 1 bytes @ 0x22
   526   000023                     	ds	2
   527   000025                     readcard@ratio3:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x24
   531   000025                     	ds	4
   532   000029                     readcard@ratio1:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x28
   536   000029                     	ds	4
   537   00002D                     readcard@ratio2:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x2C
   541   00002D                     	ds	4
   542   000031                     ??_main:
   543                           
   544                           ; 1 bytes @ 0x30
   545   000031                     	ds	2
   546                           
   547 ;;
   548 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   549 ;;
   550 ;; *************** function _main *****************
   551 ;; Defined at:
   552 ;;		line 44 in file "main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  buf            12    0[BANK0 ] unsigned char [12]
   557 ;;  buf             8   20[BANK0 ] unsigned char [8]
   558 ;;  buf             8   12[BANK0 ] unsigned char [8]
   559 ;;  buf             6   63[BANK0 ] unsigned char [6]
   560 ;;  buf             7   35[BANK0 ] unsigned char [7]
   561 ;;  buf             6   57[BANK0 ] unsigned char [6]
   562 ;;  buf             5   69[BANK0 ] unsigned char [5]
   563 ;;  buf             7   28[BANK0 ] unsigned char [7]
   564 ;;  color           1   81[BANK0 ] unsigned char 
   565 ;;  buf            15   42[BANK0 ] unsigned char [15]
   566 ;;  colorL          6   75[BANK0 ] struct RGB_val
   567 ;;  j               1   74[BANK0 ] unsigned char 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   578 ;;      Locals:         0      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   580 ;;      Totals:         2      82       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   581 ;;Total ram usage:       84 bytes
   582 ;; Hardware stack levels required when called: 7
   583 ;; This function calls:
   584 ;;		_Interrupts_init
   585 ;;		_Light
   586 ;;		_LightInit
   587 ;;		_TxBufferedString
   588 ;;		_color_click_init
   589 ;;		_initUSART4
   590 ;;		_readcard
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text0
   597   0006D4                     __ptext0:
   598                           	callstack 0
   599   0006D4                     _main:
   600                           	callstack 24
   601   0006D4                     
   602                           ;main.c: 45:     struct RGB_val colorL;;main.c: 47:     initUSART4();
   603   0006D4  ECF3  F006         	call	_initUSART4	;wreg free
   604   0006D8                     
   605                           ;main.c: 48:     Interrupts_init();
   606   0006D8  EC0E  F007         	call	_Interrupts_init	;wreg free
   607   0006DC                     
   608                           ;main.c: 49:     color_click_init();
   609   0006DC  EC4D  F006         	call	_color_click_init	;wreg free
   610   0006E0                     
   611                           ;main.c: 50:     LightInit();
   612   0006E0  EC16  F007         	call	_LightInit	;wreg free
   613   0006E4                     l1820:
   614                           
   615                           ;main.c: 55:     Light(0);
   616   0006E4  0E00               	movlw	0
   617   0006E6  EC29  F005         	call	_Light
   618   0006EA                     
   619                           ;main.c: 56:         unsigned char color = readcard(&colorL);
   620   0006EA  0EAB               	movlw	low main@colorL
   621   0006EC  6E21               	movwf	readcard@colorL^0,c
   622   0006EE  0E00               	movlw	high main@colorL
   623   0006F0  6E22               	movwf	(readcard@colorL+1)^0,c
   624   0006F2  EC4F  F000         	call	_readcard	;wreg free
   625   0006F6  0100               	movlb	0	; () banked
   626   0006F8  6FB1               	movwf	main@color& (0+255),b
   627   0006FA                     
   628                           ; BSR set to: 0
   629                           ;main.c: 57:         if(color==0){unsigned char buf[]="white ";}
   630   0006FA  51B1               	movf	main@color& (0+255),w,b
   631   0006FC  A4D8               	btfss	status,2,c
   632   0006FE  EF83  F003         	goto	u1191
   633   000702  EF85  F003         	goto	u1190
   634   000706                     u1191:
   635   000706  EF8E  F003         	goto	l1828
   636   00070A                     u1190:
   637   00070A                     
   638                           ; BSR set to: 0
   639   00070A  EE20  F0D5         	lfsr	2,main@F14593
   640   00070E  EE10  F07C         	lfsr	1,main@buf_89
   641   000712  0E06               	movlw	6
   642   000714                     u1201:
   643   000714  CFDB FFE3          	movff	plusw2,plusw1
   644   000718  06E8               	decf	wreg,f,c
   645   00071A  E2FC               	bc	u1201
   646   00071C                     l1828:
   647                           
   648                           ; BSR set to: 0
   649                           ;main.c: 58:         if(color==1){unsigned char buf[]="red ";}
   650   00071C  05B1               	decf	main@color& (0+255),w,b
   651   00071E  A4D8               	btfss	status,2,c
   652   000720  EF94  F003         	goto	u1211
   653   000724  EF96  F003         	goto	u1210
   654   000728                     u1211:
   655   000728  EF9F  F003         	goto	l1832
   656   00072C                     u1210:
   657   00072C                     
   658                           ; BSR set to: 0
   659   00072C  EE20  F0E8         	lfsr	2,main@F14595
   660   000730  EE10  F0A5         	lfsr	1,main@buf_91
   661   000734  0E04               	movlw	4
   662   000736                     u1221:
   663   000736  CFDB FFE3          	movff	plusw2,plusw1
   664   00073A  06E8               	decf	wreg,f,c
   665   00073C  E2FC               	bc	u1221
   666   00073E                     l1832:
   667                           
   668                           ; BSR set to: 0
   669                           ;main.c: 59:         if(color==2){unsigned char buf[]="blue ";}
   670   00073E  0E02               	movlw	2
   671   000740  19B1               	xorwf	main@color& (0+255),w,b
   672   000742  A4D8               	btfss	status,2,c
   673   000744  EFA6  F003         	goto	u1231
   674   000748  EFA8  F003         	goto	u1230
   675   00074C                     u1231:
   676   00074C  EFB1  F003         	goto	l1836
   677   000750                     u1230:
   678   000750                     
   679                           ; BSR set to: 0
   680   000750  EE20  F0E2         	lfsr	2,main@F14597
   681   000754  EE10  F099         	lfsr	1,main@buf_93
   682   000758  0E05               	movlw	5
   683   00075A                     u1241:
   684   00075A  CFDB FFE3          	movff	plusw2,plusw1
   685   00075E  06E8               	decf	wreg,f,c
   686   000760  E2FC               	bc	u1241
   687   000762                     l1836:
   688                           
   689                           ; BSR set to: 0
   690                           ;main.c: 60:         if(color==3){unsigned char buf[]="green ";}
   691   000762  0E03               	movlw	3
   692   000764  19B1               	xorwf	main@color& (0+255),w,b
   693   000766  A4D8               	btfss	status,2,c
   694   000768  EFB8  F003         	goto	u1251
   695   00076C  EFBA  F003         	goto	u1250
   696   000770                     u1251:
   697   000770  EFC3  F003         	goto	l1840
   698   000774                     u1250:
   699   000774                     
   700                           ; BSR set to: 0
   701   000774  EE20  F0CE         	lfsr	2,main@F14599
   702   000778  EE10  F083         	lfsr	1,main@buf_95
   703   00077C  0E06               	movlw	6
   704   00077E                     u1261:
   705   00077E  CFDB FFE3          	movff	plusw2,plusw1
   706   000782  06E8               	decf	wreg,f,c
   707   000784  E2FC               	bc	u1261
   708   000786                     l1840:
   709                           
   710                           ; BSR set to: 0
   711                           ;main.c: 61:         if(color==4){unsigned char buf[]="pink ";}
   712   000786  0E04               	movlw	4
   713   000788  19B1               	xorwf	main@color& (0+255),w,b
   714   00078A  A4D8               	btfss	status,2,c
   715   00078C  EFCA  F003         	goto	u1271
   716   000790  EFCC  F003         	goto	u1270
   717   000794                     u1271:
   718   000794  EFD5  F003         	goto	l1844
   719   000798                     u1270:
   720   000798                     
   721                           ; BSR set to: 0
   722   000798  EE20  F0DC         	lfsr	2,main@F14601
   723   00079C  EE10  F09F         	lfsr	1,main@buf_97
   724   0007A0  0E05               	movlw	5
   725   0007A2                     u1281:
   726   0007A2  CFDB FFE3          	movff	plusw2,plusw1
   727   0007A6  06E8               	decf	wreg,f,c
   728   0007A8  E2FC               	bc	u1281
   729   0007AA                     l1844:
   730                           
   731                           ; BSR set to: 0
   732                           ;main.c: 62:         if(color==5){unsigned char buf[]="yellow ";}
   733   0007AA  0E05               	movlw	5
   734   0007AC  19B1               	xorwf	main@color& (0+255),w,b
   735   0007AE  A4D8               	btfss	status,2,c
   736   0007B0  EFDC  F003         	goto	u1291
   737   0007B4  EFDE  F003         	goto	u1290
   738   0007B8                     u1291:
   739   0007B8  EFE7  F003         	goto	l1848
   740   0007BC                     u1290:
   741   0007BC                     
   742                           ; BSR set to: 0
   743   0007BC  EE20  F0C6         	lfsr	2,main@F14603
   744   0007C0  EE10  F06C         	lfsr	1,main@buf_99
   745   0007C4  0E07               	movlw	7
   746   0007C6                     u1301:
   747   0007C6  CFDB FFE3          	movff	plusw2,plusw1
   748   0007CA  06E8               	decf	wreg,f,c
   749   0007CC  E2FC               	bc	u1301
   750   0007CE                     l1848:
   751                           
   752                           ; BSR set to: 0
   753                           ;main.c: 63:         if(color==6){unsigned char buf[]="orange ";}
   754   0007CE  0E06               	movlw	6
   755   0007D0  19B1               	xorwf	main@color& (0+255),w,b
   756   0007D2  A4D8               	btfss	status,2,c
   757   0007D4  EFEE  F003         	goto	u1311
   758   0007D8  EFF0  F003         	goto	u1310
   759   0007DC                     u1311:
   760   0007DC  EFF9  F003         	goto	l1852
   761   0007E0                     u1310:
   762   0007E0                     
   763                           ; BSR set to: 0
   764   0007E0  EE20  F0BE         	lfsr	2,main@F14605
   765   0007E4  EE10  F074         	lfsr	1,main@buf_101
   766   0007E8  0E07               	movlw	7
   767   0007EA                     u1321:
   768   0007EA  CFDB FFE3          	movff	plusw2,plusw1
   769   0007EE  06E8               	decf	wreg,f,c
   770   0007F0  E2FC               	bc	u1321
   771   0007F2                     l1852:
   772                           
   773                           ; BSR set to: 0
   774                           ;main.c: 64:         if(color==7){unsigned char buf[]="light blue ";}
   775   0007F2  0E07               	movlw	7
   776   0007F4  19B1               	xorwf	main@color& (0+255),w,b
   777   0007F6  A4D8               	btfss	status,2,c
   778   0007F8  EF00  F004         	goto	u1331
   779   0007FC  EF02  F004         	goto	u1330
   780   000800                     u1331:
   781   000800  EF0B  F004         	goto	l1856
   782   000804                     u1330:
   783   000804                     
   784                           ; BSR set to: 0
   785   000804  EE20  F0B2         	lfsr	2,main@F14607
   786   000808  EE10  F060         	lfsr	1,main@buf_103
   787   00080C  0E0B               	movlw	11
   788   00080E                     u1341:
   789   00080E  CFDB FFE3          	movff	plusw2,plusw1
   790   000812  06E8               	decf	wreg,f,c
   791   000814  E2FC               	bc	u1341
   792   000816                     l1856:
   793                           
   794                           ; BSR set to: 0
   795                           ;main.c: 65:         TxBufferedString(&buf);
   796   000816  0E8A               	movlw	low main@buf
   797   000818  6E07               	movwf	TxBufferedString@string^0,c
   798   00081A  0E00               	movlw	high main@buf
   799   00081C  6E08               	movwf	(TxBufferedString@string+1)^0,c
   800   00081E  EC31  F006         	call	_TxBufferedString	;wreg free
   801   000822                     
   802                           ;main.c: 66:         Light(0);
   803   000822  0E00               	movlw	0
   804   000824  EC29  F005         	call	_Light
   805   000828                     
   806                           ;main.c: 67:         for (j=0;j<3;j++){_delay((unsigned long)((900)*(64000000/4000.0)));
      +                          }
   807   000828  0E00               	movlw	0
   808   00082A  0100               	movlb	0	; () banked
   809   00082C  6FAA               	movwf	main@j& (0+255),b
   810   00082E                     l1866:
   811                           
   812                           ; BSR set to: 0
   813   00082E  0E4A               	movlw	74
   814   000830  6E32               	movwf	(??_main+1)^0,c
   815   000832  0E0E               	movlw	14
   816   000834  6E31               	movwf	??_main^0,c
   817   000836  0E19               	movlw	25
   818   000838                     u1437:
   819   000838  2EE8               	decfsz	wreg,f,c
   820   00083A  D7FE               	bra	u1437
   821   00083C  2E31               	decfsz	??_main^0,f,c
   822   00083E  D7FC               	bra	u1437
   823   000840  2E32               	decfsz	(??_main+1)^0,f,c
   824   000842  D7FA               	bra	u1437
   825   000844  F000               	nop	
   826   000846  0100               	movlb	0	; () banked
   827   000848  2BAA               	incf	main@j& (0+255),f,b
   828   00084A  0E02               	movlw	2
   829   00084C  65AA               	cpfsgt	main@j& (0+255),b
   830   00084E  EF2B  F004         	goto	u1351
   831   000852  EF2D  F004         	goto	u1350
   832   000856                     u1351:
   833   000856  EF17  F004         	goto	l1866
   834   00085A                     u1350:
   835   00085A  EF72  F003         	goto	l1820
   836   00085E  EF4D  F000         	goto	start
   837   000862                     __end_of_main:
   838                           	callstack 0
   839                           
   840 ;; *************** function _readcard *****************
   841 ;; Defined at:
   842 ;;		line 20 in file "card.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  colorL          2   32[COMRAM] PTR struct RGB_val
   845 ;;		 -> main@colorL(6), 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  ratio2          4   44[COMRAM] float 
   848 ;;  ratio1          4   40[COMRAM] float 
   849 ;;  ratio3          4   36[COMRAM] float 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      unsigned char 
   852 ;; Registers used:
   853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   860 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   862 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   863 ;;Total ram usage:       16 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 6
   866 ;; This function calls:
   867 ;;		___flge
   868 ;;		___lwdiv
   869 ;;		___wmul
   870 ;;		___xxtofl
   871 ;;		_levels
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text1
   878   00009E                     __ptext1:
   879                           	callstack 0
   880   00009E                     _readcard:
   881                           	callstack 24
   882   00009E                     
   883                           ;card.c: 21:     levels(0,colorL);
   884   00009E  0E00               	movlw	0
   885   0000A0  6E12               	movwf	(levels@i+1)^0,c
   886   0000A2  0E00               	movlw	0
   887   0000A4  6E11               	movwf	levels@i^0,c
   888   0000A6  C021  F013         	movff	readcard@colorL,levels@colorL
   889   0000AA  C022  F014         	movff	readcard@colorL+1,levels@colorL+1
   890   0000AE  ECB3  F004         	call	_levels	;wreg free
   891                           
   892                           ;card.c: 23:     float ratio1=colorL->R/colorL->B;
   893   0000B2  EE20 F004          	lfsr	2,4
   894   0000B6  5021               	movf	readcard@colorL^0,w,c
   895   0000B8  26D9               	addwf	fsr2l,f,c
   896   0000BA  5022               	movf	(readcard@colorL+1)^0,w,c
   897   0000BC  22DA               	addwfc	fsr2h,f,c
   898   0000BE  CFDE F00E          	movff	postinc2,___lwdiv@divisor
   899   0000C2  CFDD F00F          	movff	postdec2,___lwdiv@divisor+1
   900   0000C6  C021  FFD9         	movff	readcard@colorL,fsr2l
   901   0000CA  C022  FFDA         	movff	readcard@colorL+1,fsr2h
   902   0000CE  CFDE F00C          	movff	postinc2,___lwdiv@dividend
   903   0000D2  CFDD F00D          	movff	postdec2,___lwdiv@dividend+1
   904   0000D6  ECEF  F004         	call	___lwdiv	;wreg free
   905   0000DA  C00C  F013         	movff	?___lwdiv,___xxtofl@val
   906   0000DE  C00D  F014         	movff	?___lwdiv+1,___xxtofl@val+1
   907   0000E2  6A15               	clrf	(___xxtofl@val+2)^0,c
   908   0000E4  6A16               	clrf	(___xxtofl@val+3)^0,c
   909   0000E6  0E00               	movlw	0
   910   0000E8  EC90  F002         	call	___xxtofl
   911   0000EC  C013  F029         	movff	?___xxtofl,readcard@ratio1
   912   0000F0  C014  F02A         	movff	?___xxtofl+1,readcard@ratio1+1
   913   0000F4  C015  F02B         	movff	?___xxtofl+2,readcard@ratio1+2
   914   0000F8  C016  F02C         	movff	?___xxtofl+3,readcard@ratio1+3
   915                           
   916                           ;card.c: 24:     float ratio2=colorL->R/colorL->G;
   917   0000FC  EE20 F002          	lfsr	2,2
   918   000100  5021               	movf	readcard@colorL^0,w,c
   919   000102  26D9               	addwf	fsr2l,f,c
   920   000104  5022               	movf	(readcard@colorL+1)^0,w,c
   921   000106  22DA               	addwfc	fsr2h,f,c
   922   000108  CFDE F00E          	movff	postinc2,___lwdiv@divisor
   923   00010C  CFDD F00F          	movff	postdec2,___lwdiv@divisor+1
   924   000110  C021  FFD9         	movff	readcard@colorL,fsr2l
   925   000114  C022  FFDA         	movff	readcard@colorL+1,fsr2h
   926   000118  CFDE F00C          	movff	postinc2,___lwdiv@dividend
   927   00011C  CFDD F00D          	movff	postdec2,___lwdiv@dividend+1
   928   000120  ECEF  F004         	call	___lwdiv	;wreg free
   929   000124  C00C  F013         	movff	?___lwdiv,___xxtofl@val
   930   000128  C00D  F014         	movff	?___lwdiv+1,___xxtofl@val+1
   931   00012C  6A15               	clrf	(___xxtofl@val+2)^0,c
   932   00012E  6A16               	clrf	(___xxtofl@val+3)^0,c
   933   000130  0E00               	movlw	0
   934   000132  EC90  F002         	call	___xxtofl
   935   000136  C013  F02D         	movff	?___xxtofl,readcard@ratio2
   936   00013A  C014  F02E         	movff	?___xxtofl+1,readcard@ratio2+1
   937   00013E  C015  F02F         	movff	?___xxtofl+2,readcard@ratio2+2
   938   000142  C016  F030         	movff	?___xxtofl+3,readcard@ratio2+3
   939                           
   940                           ;card.c: 25:     float ratio3=colorL->B/colorL->G;
   941   000146  EE20 F002          	lfsr	2,2
   942   00014A  5021               	movf	readcard@colorL^0,w,c
   943   00014C  26D9               	addwf	fsr2l,f,c
   944   00014E  5022               	movf	(readcard@colorL+1)^0,w,c
   945   000150  22DA               	addwfc	fsr2h,f,c
   946   000152  CFDE F00E          	movff	postinc2,___lwdiv@divisor
   947   000156  CFDD F00F          	movff	postdec2,___lwdiv@divisor+1
   948   00015A  EE20 F004          	lfsr	2,4
   949   00015E  5021               	movf	readcard@colorL^0,w,c
   950   000160  26D9               	addwf	fsr2l,f,c
   951   000162  5022               	movf	(readcard@colorL+1)^0,w,c
   952   000164  22DA               	addwfc	fsr2h,f,c
   953   000166  CFDE F00C          	movff	postinc2,___lwdiv@dividend
   954   00016A  CFDD F00D          	movff	postdec2,___lwdiv@dividend+1
   955   00016E  ECEF  F004         	call	___lwdiv	;wreg free
   956   000172  C00C  F013         	movff	?___lwdiv,___xxtofl@val
   957   000176  C00D  F014         	movff	?___lwdiv+1,___xxtofl@val+1
   958   00017A  6A15               	clrf	(___xxtofl@val+2)^0,c
   959   00017C  6A16               	clrf	(___xxtofl@val+3)^0,c
   960   00017E  0E00               	movlw	0
   961   000180  EC90  F002         	call	___xxtofl
   962   000184  C013  F025         	movff	?___xxtofl,readcard@ratio3
   963   000188  C014  F026         	movff	?___xxtofl+1,readcard@ratio3+1
   964   00018C  C015  F027         	movff	?___xxtofl+2,readcard@ratio3+2
   965   000190  C016  F028         	movff	?___xxtofl+3,readcard@ratio3+3
   966   000194                     
   967                           ;card.c: 28:     if ((ratio1>80 & ratio1<125) & (ratio2>80 & ratio2<125) & (ratio3>80 & 
      +                          ratio3<125)){
   968   000194  0E00               	movlw	0
   969   000196  6E06               	movwf	___flge@ff1^0,c
   970   000198  0E00               	movlw	0
   971   00019A  6E07               	movwf	(___flge@ff1+1)^0,c
   972   00019C  0EA0               	movlw	160
   973   00019E  6E08               	movwf	(___flge@ff1+2)^0,c
   974   0001A0  0E42               	movlw	66
   975   0001A2  6E09               	movwf	(___flge@ff1+3)^0,c
   976   0001A4  C029  F00A         	movff	readcard@ratio1,___flge@ff2
   977   0001A8  C02A  F00B         	movff	readcard@ratio1+1,___flge@ff2+1
   978   0001AC  C02B  F00C         	movff	readcard@ratio1+2,___flge@ff2+2
   979   0001B0  C02C  F00D         	movff	readcard@ratio1+3,___flge@ff2+3
   980   0001B4  EC31  F004         	call	___flge	;wreg free
   981   0001B8  B0D8               	btfsc	status,0,c
   982   0001BA  EFE1  F000         	goto	u1041
   983   0001BE  EFE3  F000         	goto	u1040
   984   0001C2                     u1041:
   985   0001C2  EF77  F001         	goto	l1746
   986   0001C6                     u1040:
   987   0001C6  C029  F006         	movff	readcard@ratio1,___flge@ff1
   988   0001CA  C02A  F007         	movff	readcard@ratio1+1,___flge@ff1+1
   989   0001CE  C02B  F008         	movff	readcard@ratio1+2,___flge@ff1+2
   990   0001D2  C02C  F009         	movff	readcard@ratio1+3,___flge@ff1+3
   991   0001D6  0E00               	movlw	0
   992   0001D8  6E0A               	movwf	___flge@ff2^0,c
   993   0001DA  0E00               	movlw	0
   994   0001DC  6E0B               	movwf	(___flge@ff2+1)^0,c
   995   0001DE  0EFA               	movlw	250
   996   0001E0  6E0C               	movwf	(___flge@ff2+2)^0,c
   997   0001E2  0E42               	movlw	66
   998   0001E4  6E0D               	movwf	(___flge@ff2+3)^0,c
   999   0001E6  EC31  F004         	call	___flge	;wreg free
  1000   0001EA  B0D8               	btfsc	status,0,c
  1001   0001EC  EFFA  F000         	goto	u1051
  1002   0001F0  EFFC  F000         	goto	u1050
  1003   0001F4                     u1051:
  1004   0001F4  EF77  F001         	goto	l1746
  1005   0001F8                     u1050:
  1006   0001F8  0E00               	movlw	0
  1007   0001FA  6E06               	movwf	___flge@ff1^0,c
  1008   0001FC  0E00               	movlw	0
  1009   0001FE  6E07               	movwf	(___flge@ff1+1)^0,c
  1010   000200  0EA0               	movlw	160
  1011   000202  6E08               	movwf	(___flge@ff1+2)^0,c
  1012   000204  0E42               	movlw	66
  1013   000206  6E09               	movwf	(___flge@ff1+3)^0,c
  1014   000208  C02D  F00A         	movff	readcard@ratio2,___flge@ff2
  1015   00020C  C02E  F00B         	movff	readcard@ratio2+1,___flge@ff2+1
  1016   000210  C02F  F00C         	movff	readcard@ratio2+2,___flge@ff2+2
  1017   000214  C030  F00D         	movff	readcard@ratio2+3,___flge@ff2+3
  1018   000218  EC31  F004         	call	___flge	;wreg free
  1019   00021C  B0D8               	btfsc	status,0,c
  1020   00021E  EF13  F001         	goto	u1061
  1021   000222  EF15  F001         	goto	u1060
  1022   000226                     u1061:
  1023   000226  EF77  F001         	goto	l1746
  1024   00022A                     u1060:
  1025   00022A  C02D  F006         	movff	readcard@ratio2,___flge@ff1
  1026   00022E  C02E  F007         	movff	readcard@ratio2+1,___flge@ff1+1
  1027   000232  C02F  F008         	movff	readcard@ratio2+2,___flge@ff1+2
  1028   000236  C030  F009         	movff	readcard@ratio2+3,___flge@ff1+3
  1029   00023A  0E00               	movlw	0
  1030   00023C  6E0A               	movwf	___flge@ff2^0,c
  1031   00023E  0E00               	movlw	0
  1032   000240  6E0B               	movwf	(___flge@ff2+1)^0,c
  1033   000242  0EFA               	movlw	250
  1034   000244  6E0C               	movwf	(___flge@ff2+2)^0,c
  1035   000246  0E42               	movlw	66
  1036   000248  6E0D               	movwf	(___flge@ff2+3)^0,c
  1037   00024A  EC31  F004         	call	___flge	;wreg free
  1038   00024E  B0D8               	btfsc	status,0,c
  1039   000250  EF2C  F001         	goto	u1071
  1040   000254  EF2E  F001         	goto	u1070
  1041   000258                     u1071:
  1042   000258  EF77  F001         	goto	l1746
  1043   00025C                     u1070:
  1044   00025C  0E00               	movlw	0
  1045   00025E  6E06               	movwf	___flge@ff1^0,c
  1046   000260  0E00               	movlw	0
  1047   000262  6E07               	movwf	(___flge@ff1+1)^0,c
  1048   000264  0EA0               	movlw	160
  1049   000266  6E08               	movwf	(___flge@ff1+2)^0,c
  1050   000268  0E42               	movlw	66
  1051   00026A  6E09               	movwf	(___flge@ff1+3)^0,c
  1052   00026C  C025  F00A         	movff	readcard@ratio3,___flge@ff2
  1053   000270  C026  F00B         	movff	readcard@ratio3+1,___flge@ff2+1
  1054   000274  C027  F00C         	movff	readcard@ratio3+2,___flge@ff2+2
  1055   000278  C028  F00D         	movff	readcard@ratio3+3,___flge@ff2+3
  1056   00027C  EC31  F004         	call	___flge	;wreg free
  1057   000280  B0D8               	btfsc	status,0,c
  1058   000282  EF45  F001         	goto	u1081
  1059   000286  EF47  F001         	goto	u1080
  1060   00028A                     u1081:
  1061   00028A  EF77  F001         	goto	l1746
  1062   00028E                     u1080:
  1063   00028E  C025  F006         	movff	readcard@ratio3,___flge@ff1
  1064   000292  C026  F007         	movff	readcard@ratio3+1,___flge@ff1+1
  1065   000296  C027  F008         	movff	readcard@ratio3+2,___flge@ff1+2
  1066   00029A  C028  F009         	movff	readcard@ratio3+3,___flge@ff1+3
  1067   00029E  0E00               	movlw	0
  1068   0002A0  6E0A               	movwf	___flge@ff2^0,c
  1069   0002A2  0E00               	movlw	0
  1070   0002A4  6E0B               	movwf	(___flge@ff2+1)^0,c
  1071   0002A6  0EFA               	movlw	250
  1072   0002A8  6E0C               	movwf	(___flge@ff2+2)^0,c
  1073   0002AA  0E42               	movlw	66
  1074   0002AC  6E0D               	movwf	(___flge@ff2+3)^0,c
  1075   0002AE  EC31  F004         	call	___flge	;wreg free
  1076   0002B2  B0D8               	btfsc	status,0,c
  1077   0002B4  EF5E  F001         	goto	u1091
  1078   0002B8  EF60  F001         	goto	u1090
  1079   0002BC                     u1091:
  1080   0002BC  EF77  F001         	goto	l1746
  1081   0002C0                     u1090:
  1082   0002C0                     
  1083                           ;card.c: 29:         if(colorL->B>4000){return 7;}
  1084   0002C0  EE20 F004          	lfsr	2,4
  1085   0002C4  5021               	movf	readcard@colorL^0,w,c
  1086   0002C6  26D9               	addwf	fsr2l,f,c
  1087   0002C8  5022               	movf	(readcard@colorL+1)^0,w,c
  1088   0002CA  22DA               	addwfc	fsr2h,f,c
  1089   0002CC  0EA1               	movlw	161
  1090   0002CE  5CDE               	subwf	postinc2,w,c
  1091   0002D0  0E0F               	movlw	15
  1092   0002D2  58DE               	subwfb	postinc2,w,c
  1093   0002D4  A0D8               	btfss	status,0,c
  1094   0002D6  EF6F  F001         	goto	u1101
  1095   0002DA  EF71  F001         	goto	u1100
  1096   0002DE                     u1101:
  1097   0002DE  EF74  F001         	goto	l1742
  1098   0002E2                     u1100:
  1099   0002E2  0E07               	movlw	7
  1100   0002E4  EF8F  F002         	goto	l125
  1101   0002E8                     l1742:
  1102                           
  1103                           ;card.c: 30:         return 2;
  1104   0002E8  0E02               	movlw	2
  1105   0002EA  EF8F  F002         	goto	l125
  1106   0002EE                     l1746:
  1107                           
  1108                           ;card.c: 33:     if (ratio1>160 & ratio2>160){
  1109   0002EE  0E00               	movlw	0
  1110   0002F0  6E06               	movwf	___flge@ff1^0,c
  1111   0002F2  0E00               	movlw	0
  1112   0002F4  6E07               	movwf	(___flge@ff1+1)^0,c
  1113   0002F6  0E20               	movlw	32
  1114   0002F8  6E08               	movwf	(___flge@ff1+2)^0,c
  1115   0002FA  0E43               	movlw	67
  1116   0002FC  6E09               	movwf	(___flge@ff1+3)^0,c
  1117   0002FE  C029  F00A         	movff	readcard@ratio1,___flge@ff2
  1118   000302  C02A  F00B         	movff	readcard@ratio1+1,___flge@ff2+1
  1119   000306  C02B  F00C         	movff	readcard@ratio1+2,___flge@ff2+2
  1120   00030A  C02C  F00D         	movff	readcard@ratio1+3,___flge@ff2+3
  1121   00030E  EC31  F004         	call	___flge	;wreg free
  1122   000312  B0D8               	btfsc	status,0,c
  1123   000314  EF8E  F001         	goto	u1111
  1124   000318  EF90  F001         	goto	u1110
  1125   00031C                     u1111:
  1126   00031C  EF72  F002         	goto	l1780
  1127   000320                     u1110:
  1128   000320  0E00               	movlw	0
  1129   000322  6E06               	movwf	___flge@ff1^0,c
  1130   000324  0E00               	movlw	0
  1131   000326  6E07               	movwf	(___flge@ff1+1)^0,c
  1132   000328  0E20               	movlw	32
  1133   00032A  6E08               	movwf	(___flge@ff1+2)^0,c
  1134   00032C  0E43               	movlw	67
  1135   00032E  6E09               	movwf	(___flge@ff1+3)^0,c
  1136   000330  C02D  F00A         	movff	readcard@ratio2,___flge@ff2
  1137   000334  C02E  F00B         	movff	readcard@ratio2+1,___flge@ff2+1
  1138   000338  C02F  F00C         	movff	readcard@ratio2+2,___flge@ff2+2
  1139   00033C  C030  F00D         	movff	readcard@ratio2+3,___flge@ff2+3
  1140   000340  EC31  F004         	call	___flge	;wreg free
  1141   000344  B0D8               	btfsc	status,0,c
  1142   000346  EFA7  F001         	goto	u1121
  1143   00034A  EFA9  F001         	goto	u1120
  1144   00034E                     u1121:
  1145   00034E  EF72  F002         	goto	l1780
  1146   000352                     u1120:
  1147   000352                     
  1148                           ;card.c: 35:         levels(2,colorL);
  1149   000352  0E00               	movlw	0
  1150   000354  6E12               	movwf	(levels@i+1)^0,c
  1151   000356  0E02               	movlw	2
  1152   000358  6E11               	movwf	levels@i^0,c
  1153   00035A  C021  F013         	movff	readcard@colorL,levels@colorL
  1154   00035E  C022  F014         	movff	readcard@colorL+1,levels@colorL+1
  1155   000362  ECB3  F004         	call	_levels	;wreg free
  1156   000366                     
  1157                           ;card.c: 36:         ratio1=100*colorL->R/colorL->B;
  1158   000366  EE20 F004          	lfsr	2,4
  1159   00036A  5021               	movf	readcard@colorL^0,w,c
  1160   00036C  26D9               	addwf	fsr2l,f,c
  1161   00036E  5022               	movf	(readcard@colorL+1)^0,w,c
  1162   000370  22DA               	addwfc	fsr2h,f,c
  1163   000372  CFDE F00E          	movff	postinc2,___lwdiv@divisor
  1164   000376  CFDD F00F          	movff	postdec2,___lwdiv@divisor+1
  1165   00037A  C021  FFD9         	movff	readcard@colorL,fsr2l
  1166   00037E  C022  FFDA         	movff	readcard@colorL+1,fsr2h
  1167   000382  CFDE F006          	movff	postinc2,___wmul@multiplier
  1168   000386  CFDD F007          	movff	postdec2,___wmul@multiplier+1
  1169   00038A  0E00               	movlw	0
  1170   00038C  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  1171   00038E  0E64               	movlw	100
  1172   000390  6E08               	movwf	___wmul@multiplicand^0,c
  1173   000392  ECD0  F006         	call	___wmul	;wreg free
  1174   000396  C006  F00C         	movff	?___wmul,___lwdiv@dividend
  1175   00039A  C007  F00D         	movff	?___wmul+1,___lwdiv@dividend+1
  1176   00039E  ECEF  F004         	call	___lwdiv	;wreg free
  1177   0003A2  C00C  F013         	movff	?___lwdiv,___xxtofl@val
  1178   0003A6  C00D  F014         	movff	?___lwdiv+1,___xxtofl@val+1
  1179   0003AA  6A15               	clrf	(___xxtofl@val+2)^0,c
  1180   0003AC  6A16               	clrf	(___xxtofl@val+3)^0,c
  1181   0003AE  0E00               	movlw	0
  1182   0003B0  EC90  F002         	call	___xxtofl
  1183   0003B4  C013  F029         	movff	?___xxtofl,readcard@ratio1
  1184   0003B8  C014  F02A         	movff	?___xxtofl+1,readcard@ratio1+1
  1185   0003BC  C015  F02B         	movff	?___xxtofl+2,readcard@ratio1+2
  1186   0003C0  C016  F02C         	movff	?___xxtofl+3,readcard@ratio1+3
  1187   0003C4                     
  1188                           ;card.c: 37:         if(ratio1<50){return 4;}
  1189   0003C4  C029  F006         	movff	readcard@ratio1,___flge@ff1
  1190   0003C8  C02A  F007         	movff	readcard@ratio1+1,___flge@ff1+1
  1191   0003CC  C02B  F008         	movff	readcard@ratio1+2,___flge@ff1+2
  1192   0003D0  C02C  F009         	movff	readcard@ratio1+3,___flge@ff1+3
  1193   0003D4  0E00               	movlw	0
  1194   0003D6  6E0A               	movwf	___flge@ff2^0,c
  1195   0003D8  0E00               	movlw	0
  1196   0003DA  6E0B               	movwf	(___flge@ff2+1)^0,c
  1197   0003DC  0E48               	movlw	72
  1198   0003DE  6E0C               	movwf	(___flge@ff2+2)^0,c
  1199   0003E0  0E42               	movlw	66
  1200   0003E2  6E0D               	movwf	(___flge@ff2+3)^0,c
  1201   0003E4  EC31  F004         	call	___flge	;wreg free
  1202   0003E8  B0D8               	btfsc	status,0,c
  1203   0003EA  EFF9  F001         	goto	u1131
  1204   0003EE  EFFB  F001         	goto	u1130
  1205   0003F2                     u1131:
  1206   0003F2  EFFE  F001         	goto	l1760
  1207   0003F6                     u1130:
  1208   0003F6  0E04               	movlw	4
  1209   0003F8  EF8F  F002         	goto	l125
  1210   0003FC                     l1760:
  1211                           
  1212                           ;card.c: 39:         levels(3,colorL);
  1213   0003FC  0E00               	movlw	0
  1214   0003FE  6E12               	movwf	(levels@i+1)^0,c
  1215   000400  0E03               	movlw	3
  1216   000402  6E11               	movwf	levels@i^0,c
  1217   000404  C021  F013         	movff	readcard@colorL,levels@colorL
  1218   000408  C022  F014         	movff	readcard@colorL+1,levels@colorL+1
  1219   00040C  ECB3  F004         	call	_levels	;wreg free
  1220   000410                     
  1221                           ;card.c: 40:         ratio2=100*colorL->R/colorL->G;
  1222   000410  EE20 F002          	lfsr	2,2
  1223   000414  5021               	movf	readcard@colorL^0,w,c
  1224   000416  26D9               	addwf	fsr2l,f,c
  1225   000418  5022               	movf	(readcard@colorL+1)^0,w,c
  1226   00041A  22DA               	addwfc	fsr2h,f,c
  1227   00041C  CFDE F00E          	movff	postinc2,___lwdiv@divisor
  1228   000420  CFDD F00F          	movff	postdec2,___lwdiv@divisor+1
  1229   000424  C021  FFD9         	movff	readcard@colorL,fsr2l
  1230   000428  C022  FFDA         	movff	readcard@colorL+1,fsr2h
  1231   00042C  CFDE F006          	movff	postinc2,___wmul@multiplier
  1232   000430  CFDD F007          	movff	postdec2,___wmul@multiplier+1
  1233   000434  0E00               	movlw	0
  1234   000436  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  1235   000438  0E64               	movlw	100
  1236   00043A  6E08               	movwf	___wmul@multiplicand^0,c
  1237   00043C  ECD0  F006         	call	___wmul	;wreg free
  1238   000440  C006  F00C         	movff	?___wmul,___lwdiv@dividend
  1239   000444  C007  F00D         	movff	?___wmul+1,___lwdiv@dividend+1
  1240   000448  ECEF  F004         	call	___lwdiv	;wreg free
  1241   00044C  C00C  F013         	movff	?___lwdiv,___xxtofl@val
  1242   000450  C00D  F014         	movff	?___lwdiv+1,___xxtofl@val+1
  1243   000454  6A15               	clrf	(___xxtofl@val+2)^0,c
  1244   000456  6A16               	clrf	(___xxtofl@val+3)^0,c
  1245   000458  0E00               	movlw	0
  1246   00045A  EC90  F002         	call	___xxtofl
  1247   00045E  C013  F02D         	movff	?___xxtofl,readcard@ratio2
  1248   000462  C014  F02E         	movff	?___xxtofl+1,readcard@ratio2+1
  1249   000466  C015  F02F         	movff	?___xxtofl+2,readcard@ratio2+2
  1250   00046A  C016  F030         	movff	?___xxtofl+3,readcard@ratio2+3
  1251   00046E                     
  1252                           ;card.c: 41:         if(ratio2<25){return 5;}
  1253   00046E  C02D  F006         	movff	readcard@ratio2,___flge@ff1
  1254   000472  C02E  F007         	movff	readcard@ratio2+1,___flge@ff1+1
  1255   000476  C02F  F008         	movff	readcard@ratio2+2,___flge@ff1+2
  1256   00047A  C030  F009         	movff	readcard@ratio2+3,___flge@ff1+3
  1257   00047E  0E00               	movlw	0
  1258   000480  6E0A               	movwf	___flge@ff2^0,c
  1259   000482  0E00               	movlw	0
  1260   000484  6E0B               	movwf	(___flge@ff2+1)^0,c
  1261   000486  0EC8               	movlw	200
  1262   000488  6E0C               	movwf	(___flge@ff2+2)^0,c
  1263   00048A  0E41               	movlw	65
  1264   00048C  6E0D               	movwf	(___flge@ff2+3)^0,c
  1265   00048E  EC31  F004         	call	___flge	;wreg free
  1266   000492  B0D8               	btfsc	status,0,c
  1267   000494  EF4E  F002         	goto	u1141
  1268   000498  EF50  F002         	goto	u1140
  1269   00049C                     u1141:
  1270   00049C  EF53  F002         	goto	l1770
  1271   0004A0                     u1140:
  1272   0004A0  0E05               	movlw	5
  1273   0004A2  EF8F  F002         	goto	l125
  1274   0004A6                     l1770:
  1275                           
  1276                           ;card.c: 43:         if(ratio2<35){return 6;}
  1277   0004A6  C02D  F006         	movff	readcard@ratio2,___flge@ff1
  1278   0004AA  C02E  F007         	movff	readcard@ratio2+1,___flge@ff1+1
  1279   0004AE  C02F  F008         	movff	readcard@ratio2+2,___flge@ff1+2
  1280   0004B2  C030  F009         	movff	readcard@ratio2+3,___flge@ff1+3
  1281   0004B6  0E00               	movlw	0
  1282   0004B8  6E0A               	movwf	___flge@ff2^0,c
  1283   0004BA  0E00               	movlw	0
  1284   0004BC  6E0B               	movwf	(___flge@ff2+1)^0,c
  1285   0004BE  0E0C               	movlw	12
  1286   0004C0  6E0C               	movwf	(___flge@ff2+2)^0,c
  1287   0004C2  0E42               	movlw	66
  1288   0004C4  6E0D               	movwf	(___flge@ff2+3)^0,c
  1289   0004C6  EC31  F004         	call	___flge	;wreg free
  1290   0004CA  B0D8               	btfsc	status,0,c
  1291   0004CC  EF6A  F002         	goto	u1151
  1292   0004D0  EF6C  F002         	goto	u1150
  1293   0004D4                     u1151:
  1294   0004D4  EF6F  F002         	goto	l1776
  1295   0004D8                     u1150:
  1296   0004D8  0E06               	movlw	6
  1297   0004DA  EF8F  F002         	goto	l125
  1298   0004DE                     l1776:
  1299                           
  1300                           ;card.c: 46:         return 1;
  1301   0004DE  0E01               	movlw	1
  1302   0004E0  EF8F  F002         	goto	l125
  1303   0004E4                     l1780:
  1304                           
  1305                           ;card.c: 49:     levels(1,colorL);
  1306   0004E4  0E00               	movlw	0
  1307   0004E6  6E12               	movwf	(levels@i+1)^0,c
  1308   0004E8  0E01               	movlw	1
  1309   0004EA  6E11               	movwf	levels@i^0,c
  1310   0004EC  C021  F013         	movff	readcard@colorL,levels@colorL
  1311   0004F0  C022  F014         	movff	readcard@colorL+1,levels@colorL+1
  1312   0004F4  ECB3  F004         	call	_levels	;wreg free
  1313   0004F8                     
  1314                           ;card.c: 50:     if(colorL->R>1000){return 0;}
  1315   0004F8  C021  FFD9         	movff	readcard@colorL,fsr2l
  1316   0004FC  C022  FFDA         	movff	readcard@colorL+1,fsr2h
  1317   000500  0EE9               	movlw	233
  1318   000502  5CDE               	subwf	postinc2,w,c
  1319   000504  0E03               	movlw	3
  1320   000506  58DE               	subwfb	postinc2,w,c
  1321   000508  A0D8               	btfss	status,0,c
  1322   00050A  EF89  F002         	goto	u1161
  1323   00050E  EF8B  F002         	goto	u1160
  1324   000512                     u1161:
  1325   000512  EF8E  F002         	goto	l1788
  1326   000516                     u1160:
  1327   000516  0E00               	movlw	0
  1328   000518  EF8F  F002         	goto	l125
  1329   00051C                     l1788:
  1330                           
  1331                           ;card.c: 51:     return 3;
  1332   00051C  0E03               	movlw	3
  1333   00051E                     l125:
  1334   00051E  0012               	return		;funcret
  1335   000520                     __end_of_readcard:
  1336                           	callstack 0
  1337                           
  1338 ;; *************** function _levels *****************
  1339 ;; Defined at:
  1340 ;;		line 54 in file "card.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  i               2   16[COMRAM] int 
  1343 ;;  colorL          2   18[COMRAM] PTR struct RGB_val
  1344 ;;		 -> main@colorL(6), 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;Total ram usage:        6 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 5
  1363 ;; This function calls:
  1364 ;;		_Light
  1365 ;;		_color_read_Blue
  1366 ;;		_color_read_Green
  1367 ;;		_color_read_Red
  1368 ;; This function is called by:
  1369 ;;		_readcard
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text2
  1374   000966                     __ptext2:
  1375                           	callstack 0
  1376   000966                     _levels:
  1377                           	callstack 24
  1378   000966                     
  1379                           ;card.c: 55:         Light(i);
  1380   000966  5011               	movf	levels@i^0,w,c
  1381   000968  EC29  F005         	call	_Light
  1382   00096C                     
  1383                           ;card.c: 56:         _delay((unsigned long)((900)*(64000000/4000.0)));
  1384   00096C  0E4A               	movlw	74
  1385   00096E  6E16               	movwf	(??_levels+1)^0,c
  1386   000970  0E0E               	movlw	14
  1387   000972  6E15               	movwf	??_levels^0,c
  1388   000974  0E19               	movlw	25
  1389   000976                     u1447:
  1390   000976  2EE8               	decfsz	wreg,f,c
  1391   000978  D7FE               	bra	u1447
  1392   00097A  2E15               	decfsz	??_levels^0,f,c
  1393   00097C  D7FC               	bra	u1447
  1394   00097E  2E16               	decfsz	(??_levels+1)^0,f,c
  1395   000980  D7FA               	bra	u1447
  1396   000982  F000               	nop	
  1397   000984                     
  1398                           ;card.c: 57:         if (i==1){LATFbits.LATF7=1;}
  1399   000984  0411               	decf	levels@i^0,w,c
  1400   000986  1012               	iorwf	(levels@i+1)^0,w,c
  1401   000988  A4D8               	btfss	status,2,c
  1402   00098A  EFC9  F004         	goto	u841
  1403   00098E  EFCB  F004         	goto	u840
  1404   000992                     u841:
  1405   000992  EFCC  F004         	goto	l1590
  1406   000996                     u840:
  1407   000996  8E7E               	bsf	126,7,c	;volatile
  1408   000998                     l1590:
  1409                           
  1410                           ;card.c: 58:         colorL->R = color_read_Red();
  1411   000998  EC59  F005         	call	_color_read_Red	;wreg free
  1412   00099C  C013  FFD9         	movff	levels@colorL,fsr2l
  1413   0009A0  C014  FFDA         	movff	levels@colorL+1,fsr2h
  1414   0009A4  C00A  FFDE         	movff	?_color_read_Red,postinc2
  1415   0009A8  C00B  FFDD         	movff	?_color_read_Red+1,postdec2
  1416                           
  1417                           ;card.c: 59:         colorL->B = color_read_Blue();
  1418   0009AC  ECA9  F005         	call	_color_read_Blue	;wreg free
  1419   0009B0  EE20 F004          	lfsr	2,4
  1420   0009B4  5013               	movf	levels@colorL^0,w,c
  1421   0009B6  26D9               	addwf	fsr2l,f,c
  1422   0009B8  5014               	movf	(levels@colorL+1)^0,w,c
  1423   0009BA  22DA               	addwfc	fsr2h,f,c
  1424   0009BC  C00A  FFDE         	movff	?_color_read_Blue,postinc2
  1425   0009C0  C00B  FFDD         	movff	?_color_read_Blue+1,postdec2
  1426                           
  1427                           ;card.c: 60:         colorL->G = color_read_Green();
  1428   0009C4  EC81  F005         	call	_color_read_Green	;wreg free
  1429   0009C8  EE20 F002          	lfsr	2,2
  1430   0009CC  5013               	movf	levels@colorL^0,w,c
  1431   0009CE  26D9               	addwf	fsr2l,f,c
  1432   0009D0  5014               	movf	(levels@colorL+1)^0,w,c
  1433   0009D2  22DA               	addwfc	fsr2h,f,c
  1434   0009D4  C00A  FFDE         	movff	?_color_read_Green,postinc2
  1435   0009D8  C00B  FFDD         	movff	?_color_read_Green+1,postdec2
  1436   0009DC  0012               	return		;funcret
  1437   0009DE                     __end_of_levels:
  1438                           	callstack 0
  1439                           
  1440 ;; *************** function _color_read_Red *****************
  1441 ;; Defined at:
  1442 ;;		line 29 in file "color.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  tmp             2   14[COMRAM] unsigned int 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  2    9[COMRAM] unsigned int 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1459 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1460 ;;Total ram usage:        7 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 4
  1463 ;; This function calls:
  1464 ;;		_I2C_2_Master_Read
  1465 ;;		_I2C_2_Master_RepStart
  1466 ;;		_I2C_2_Master_Start
  1467 ;;		_I2C_2_Master_Stop
  1468 ;;		_I2C_2_Master_Write
  1469 ;; This function is called by:
  1470 ;;		_levels
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text3
  1475   000AB2                     __ptext3:
  1476                           	callstack 0
  1477   000AB2                     _color_read_Red:
  1478                           	callstack 24
  1479   000AB2                     
  1480                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  1481   000AB2  EC2D  F007         	call	_I2C_2_Master_Start	;wreg free
  1482                           
  1483                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  1484   000AB6  0E52               	movlw	82
  1485   000AB8  EC1D  F007         	call	_I2C_2_Master_Write
  1486                           
  1487                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  1488   000ABC  0EB6               	movlw	182
  1489   000ABE  EC1D  F007         	call	_I2C_2_Master_Write
  1490                           
  1491                           ;color.c: 35:  I2C_2_Master_RepStart();
  1492   000AC2  EC23  F007         	call	_I2C_2_Master_RepStart	;wreg free
  1493                           
  1494                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  1495   000AC6  0E53               	movlw	83
  1496   000AC8  EC1D  F007         	call	_I2C_2_Master_Write
  1497                           
  1498                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  1499   000ACC  0E01               	movlw	1
  1500   000ACE  ECF2  F005         	call	_I2C_2_Master_Read
  1501   000AD2  6E0C               	movwf	??_color_read_Red^0,c
  1502   000AD4  500C               	movf	??_color_read_Red^0,w,c
  1503   000AD6  6E0F               	movwf	color_read_Red@tmp^0,c
  1504   000AD8  6A10               	clrf	(color_read_Red@tmp+1)^0,c
  1505                           
  1506                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1507   000ADA  0E00               	movlw	0
  1508   000ADC  ECF2  F005         	call	_I2C_2_Master_Read
  1509   000AE0  6E0C               	movwf	??_color_read_Red^0,c
  1510   000AE2  500C               	movf	??_color_read_Red^0,w,c
  1511   000AE4  6E0E               	movwf	(??_color_read_Red+2)^0,c
  1512   000AE6  6A0D               	clrf	(??_color_read_Red+1)^0,c
  1513   000AE8  500F               	movf	color_read_Red@tmp^0,w,c
  1514   000AEA  100D               	iorwf	(??_color_read_Red+1)^0,w,c
  1515   000AEC  6E0F               	movwf	color_read_Red@tmp^0,c
  1516   000AEE  5010               	movf	(color_read_Red@tmp+1)^0,w,c
  1517   000AF0  100E               	iorwf	(??_color_read_Red+2)^0,w,c
  1518   000AF2  6E10               	movwf	(color_read_Red@tmp+1)^0,c
  1519                           
  1520                           ;color.c: 39:  I2C_2_Master_Stop();
  1521   000AF4  EC28  F007         	call	_I2C_2_Master_Stop	;wreg free
  1522   000AF8                     
  1523                           ;color.c: 40:  return tmp;
  1524   000AF8  C00F  F00A         	movff	color_read_Red@tmp,?_color_read_Red
  1525   000AFC  C010  F00B         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1526   000B00  0012               	return		;funcret
  1527   000B02                     __end_of_color_read_Red:
  1528                           	callstack 0
  1529                           
  1530 ;; *************** function _color_read_Green *****************
  1531 ;; Defined at:
  1532 ;;		line 59 in file "color.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  tmp             2   14[COMRAM] unsigned int 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  2    9[COMRAM] unsigned int 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1548 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1549 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1550 ;;Total ram usage:        7 bytes
  1551 ;; Hardware stack levels used: 1
  1552 ;; Hardware stack levels required when called: 4
  1553 ;; This function calls:
  1554 ;;		_I2C_2_Master_Read
  1555 ;;		_I2C_2_Master_RepStart
  1556 ;;		_I2C_2_Master_Start
  1557 ;;		_I2C_2_Master_Stop
  1558 ;;		_I2C_2_Master_Write
  1559 ;; This function is called by:
  1560 ;;		_levels
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text4
  1565   000B02                     __ptext4:
  1566                           	callstack 0
  1567   000B02                     _color_read_Green:
  1568                           	callstack 24
  1569   000B02                     
  1570                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  1571   000B02  EC2D  F007         	call	_I2C_2_Master_Start	;wreg free
  1572                           
  1573                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  1574   000B06  0E52               	movlw	82
  1575   000B08  EC1D  F007         	call	_I2C_2_Master_Write
  1576                           
  1577                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x18);
  1578   000B0C  0EB8               	movlw	184
  1579   000B0E  EC1D  F007         	call	_I2C_2_Master_Write
  1580                           
  1581                           ;color.c: 65:  I2C_2_Master_RepStart();
  1582   000B12  EC23  F007         	call	_I2C_2_Master_RepStart	;wreg free
  1583                           
  1584                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  1585   000B16  0E53               	movlw	83
  1586   000B18  EC1D  F007         	call	_I2C_2_Master_Write
  1587                           
  1588                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  1589   000B1C  0E01               	movlw	1
  1590   000B1E  ECF2  F005         	call	_I2C_2_Master_Read
  1591   000B22  6E0C               	movwf	??_color_read_Green^0,c
  1592   000B24  500C               	movf	??_color_read_Green^0,w,c
  1593   000B26  6E0F               	movwf	color_read_Green@tmp^0,c
  1594   000B28  6A10               	clrf	(color_read_Green@tmp+1)^0,c
  1595                           
  1596                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1597   000B2A  0E00               	movlw	0
  1598   000B2C  ECF2  F005         	call	_I2C_2_Master_Read
  1599   000B30  6E0C               	movwf	??_color_read_Green^0,c
  1600   000B32  500C               	movf	??_color_read_Green^0,w,c
  1601   000B34  6E0E               	movwf	(??_color_read_Green+2)^0,c
  1602   000B36  6A0D               	clrf	(??_color_read_Green+1)^0,c
  1603   000B38  500F               	movf	color_read_Green@tmp^0,w,c
  1604   000B3A  100D               	iorwf	(??_color_read_Green+1)^0,w,c
  1605   000B3C  6E0F               	movwf	color_read_Green@tmp^0,c
  1606   000B3E  5010               	movf	(color_read_Green@tmp+1)^0,w,c
  1607   000B40  100E               	iorwf	(??_color_read_Green+2)^0,w,c
  1608   000B42  6E10               	movwf	(color_read_Green@tmp+1)^0,c
  1609                           
  1610                           ;color.c: 69:  I2C_2_Master_Stop();
  1611   000B44  EC28  F007         	call	_I2C_2_Master_Stop	;wreg free
  1612   000B48                     
  1613                           ;color.c: 70:  return tmp;
  1614   000B48  C00F  F00A         	movff	color_read_Green@tmp,?_color_read_Green
  1615   000B4C  C010  F00B         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1616   000B50  0012               	return		;funcret
  1617   000B52                     __end_of_color_read_Green:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _color_read_Blue *****************
  1621 ;; Defined at:
  1622 ;;		line 45 in file "color.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  tmp             2   14[COMRAM] unsigned int 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2    9[COMRAM] unsigned int 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1638 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1639 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1640 ;;Total ram usage:        7 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 4
  1643 ;; This function calls:
  1644 ;;		_I2C_2_Master_Read
  1645 ;;		_I2C_2_Master_RepStart
  1646 ;;		_I2C_2_Master_Start
  1647 ;;		_I2C_2_Master_Stop
  1648 ;;		_I2C_2_Master_Write
  1649 ;; This function is called by:
  1650 ;;		_levels
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text5
  1655   000B52                     __ptext5:
  1656                           	callstack 0
  1657   000B52                     _color_read_Blue:
  1658                           	callstack 24
  1659   000B52                     
  1660                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  1661   000B52  EC2D  F007         	call	_I2C_2_Master_Start	;wreg free
  1662                           
  1663                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  1664   000B56  0E52               	movlw	82
  1665   000B58  EC1D  F007         	call	_I2C_2_Master_Write
  1666                           
  1667                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x1A);
  1668   000B5C  0EBA               	movlw	186
  1669   000B5E  EC1D  F007         	call	_I2C_2_Master_Write
  1670                           
  1671                           ;color.c: 51:  I2C_2_Master_RepStart();
  1672   000B62  EC23  F007         	call	_I2C_2_Master_RepStart	;wreg free
  1673                           
  1674                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  1675   000B66  0E53               	movlw	83
  1676   000B68  EC1D  F007         	call	_I2C_2_Master_Write
  1677                           
  1678                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  1679   000B6C  0E01               	movlw	1
  1680   000B6E  ECF2  F005         	call	_I2C_2_Master_Read
  1681   000B72  6E0C               	movwf	??_color_read_Blue^0,c
  1682   000B74  500C               	movf	??_color_read_Blue^0,w,c
  1683   000B76  6E0F               	movwf	color_read_Blue@tmp^0,c
  1684   000B78  6A10               	clrf	(color_read_Blue@tmp+1)^0,c
  1685                           
  1686                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1687   000B7A  0E00               	movlw	0
  1688   000B7C  ECF2  F005         	call	_I2C_2_Master_Read
  1689   000B80  6E0C               	movwf	??_color_read_Blue^0,c
  1690   000B82  500C               	movf	??_color_read_Blue^0,w,c
  1691   000B84  6E0E               	movwf	(??_color_read_Blue+2)^0,c
  1692   000B86  6A0D               	clrf	(??_color_read_Blue+1)^0,c
  1693   000B88  500F               	movf	color_read_Blue@tmp^0,w,c
  1694   000B8A  100D               	iorwf	(??_color_read_Blue+1)^0,w,c
  1695   000B8C  6E0F               	movwf	color_read_Blue@tmp^0,c
  1696   000B8E  5010               	movf	(color_read_Blue@tmp+1)^0,w,c
  1697   000B90  100E               	iorwf	(??_color_read_Blue+2)^0,w,c
  1698   000B92  6E10               	movwf	(color_read_Blue@tmp+1)^0,c
  1699                           
  1700                           ;color.c: 55:  I2C_2_Master_Stop();
  1701   000B94  EC28  F007         	call	_I2C_2_Master_Stop	;wreg free
  1702   000B98                     
  1703                           ;color.c: 56:  return tmp;
  1704   000B98  C00F  F00A         	movff	color_read_Blue@tmp,?_color_read_Blue
  1705   000B9C  C010  F00B         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1706   000BA0  0012               	return		;funcret
  1707   000BA2                     __end_of_color_read_Blue:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _I2C_2_Master_RepStart *****************
  1711 ;; Defined at:
  1712 ;;		line 33 in file "i2c.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1730 ;;Total ram usage:        0 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; Hardware stack levels required when called: 3
  1733 ;; This function calls:
  1734 ;;		_I2C_2_Master_Idle
  1735 ;; This function is called by:
  1736 ;;		_color_read_Red
  1737 ;;		_color_read_Blue
  1738 ;;		_color_read_Green
  1739 ;;		_color_read_Clear
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text6
  1744   000E46                     __ptext6:
  1745                           	callstack 0
  1746   000E46                     _I2C_2_Master_RepStart:
  1747                           	callstack 24
  1748   000E46                     
  1749                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1750   000E46  ECBC  F006         	call	_I2C_2_Master_Idle	;wreg free
  1751   000E4A                     
  1752                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1753   000E4A  010E               	movlb	14	; () banked
  1754   000E4C  83DA               	bsf	218,1,b	;volatile
  1755   000E4E                     
  1756                           ; BSR set to: 14
  1757   000E4E  0012               	return		;funcret
  1758   000E50                     __end_of_I2C_2_Master_RepStart:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _I2C_2_Master_Read *****************
  1762 ;; Defined at:
  1763 ;;		line 51 in file "i2c.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  ack             1    wreg     unsigned char 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  ack             1    7[COMRAM] unsigned char 
  1768 ;;  tmp             1    8[COMRAM] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      unsigned char 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;Total ram usage:        3 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 3
  1785 ;; This function calls:
  1786 ;;		_I2C_2_Master_Idle
  1787 ;; This function is called by:
  1788 ;;		_color_read_Red
  1789 ;;		_color_read_Blue
  1790 ;;		_color_read_Green
  1791 ;;		_color_read_Clear
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text7
  1796   000BE4                     __ptext7:
  1797                           	callstack 0
  1798   000BE4                     _I2C_2_Master_Read:
  1799                           	callstack 24
  1800                           
  1801                           ; BSR set to: 14
  1802                           ;incstack = 0
  1803                           ;I2C_2_Master_Read@ack stored from wreg
  1804   000BE4  6E08               	movwf	I2C_2_Master_Read@ack^0,c
  1805   000BE6                     
  1806                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1807   000BE6  ECBC  F006         	call	_I2C_2_Master_Idle	;wreg free
  1808   000BEA                     
  1809                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1810   000BEA  010E               	movlb	14	; () banked
  1811   000BEC  87DA               	bsf	218,3,b	;volatile
  1812                           
  1813                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1814   000BEE  ECBC  F006         	call	_I2C_2_Master_Idle	;wreg free
  1815   000BF2                     
  1816                           ;i2c.c: 57:   tmp = SSP2BUF;
  1817   000BF2  CED5 F009          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1818                           
  1819                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1820   000BF6  ECBC  F006         	call	_I2C_2_Master_Idle	;wreg free
  1821   000BFA                     
  1822                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1823   000BFA  5008               	movf	I2C_2_Master_Read@ack^0,w,c
  1824   000BFC  B4D8               	btfsc	status,2,c
  1825   000BFE  EF03  F006         	goto	u781
  1826   000C02  EF07  F006         	goto	u780
  1827   000C06                     u781:
  1828   000C06  6A07               	clrf	??_I2C_2_Master_Read^0,c
  1829   000C08  2A07               	incf	??_I2C_2_Master_Read^0,f,c
  1830   000C0A  EF08  F006         	goto	u798
  1831   000C0E                     u780:
  1832   000C0E  6A07               	clrf	??_I2C_2_Master_Read^0,c
  1833   000C10                     u798:
  1834   000C10  3A07               	swapf	??_I2C_2_Master_Read^0,f,c
  1835   000C12  4607               	rlncf	??_I2C_2_Master_Read^0,f,c
  1836   000C14  010E               	movlb	14	; () banked
  1837   000C16  51DA               	movf	218,w,b	;volatile
  1838   000C18  1807               	xorwf	??_I2C_2_Master_Read^0,w,c
  1839   000C1A  0BDF               	andlw	-33
  1840   000C1C  1807               	xorwf	??_I2C_2_Master_Read^0,w,c
  1841   000C1E  6FDA               	movwf	218,b	;volatile
  1842   000C20                     
  1843                           ; BSR set to: 14
  1844                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1845   000C20  89DA               	bsf	218,4,b	;volatile
  1846   000C22                     
  1847                           ; BSR set to: 14
  1848                           ;i2c.c: 61:   return tmp;
  1849   000C22  5009               	movf	I2C_2_Master_Read@tmp^0,w,c
  1850   000C24                     
  1851                           ; BSR set to: 14
  1852   000C24  0012               	return		;funcret
  1853   000C26                     __end_of_I2C_2_Master_Read:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _Light *****************
  1857 ;; Defined at:
  1858 ;;		line 14 in file "lights.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  colorcode       1    wreg     unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  colorcode       1    5[COMRAM] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1876 ;;Total ram usage:        1 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; Hardware stack levels required when called: 2
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;;		_levels
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text8
  1888   000A52                     __ptext8:
  1889                           	callstack 0
  1890   000A52                     _Light:
  1891                           	callstack 26
  1892                           
  1893                           ; BSR set to: 14
  1894                           ;incstack = 0
  1895                           ;Light@colorcode stored from wreg
  1896   000A52  6E06               	movwf	Light@colorcode^0,c
  1897   000A54                     
  1898                           ;lights.c: 15:     if (colorcode==0){
  1899   000A54  5006               	movf	Light@colorcode^0,w,c
  1900   000A56  A4D8               	btfss	status,2,c
  1901   000A58  EF30  F005         	goto	u801
  1902   000A5C  EF32  F005         	goto	u800
  1903   000A60                     u801:
  1904   000A60  EF35  F005         	goto	l1538
  1905   000A64                     u800:
  1906   000A64                     
  1907                           ;lights.c: 16:         LATGbits.LATG1=1;
  1908   000A64  827F               	bsf	127,1,c	;volatile
  1909                           
  1910                           ;lights.c: 17:         LATFbits.LATF7=1;
  1911   000A66  8E7E               	bsf	126,7,c	;volatile
  1912                           
  1913                           ;lights.c: 18:         LATAbits.LATA4=1;
  1914   000A68  8879               	bsf	121,4,c	;volatile
  1915   000A6A                     l1538:
  1916                           
  1917                           ;lights.c: 20:     if (colorcode==1){
  1918   000A6A  0406               	decf	Light@colorcode^0,w,c
  1919   000A6C  A4D8               	btfss	status,2,c
  1920   000A6E  EF3B  F005         	goto	u811
  1921   000A72  EF3D  F005         	goto	u810
  1922   000A76                     u811:
  1923   000A76  EF40  F005         	goto	l1542
  1924   000A7A                     u810:
  1925   000A7A                     
  1926                           ;lights.c: 21:         LATGbits.LATG1=1;
  1927   000A7A  827F               	bsf	127,1,c	;volatile
  1928                           
  1929                           ;lights.c: 22:         LATFbits.LATF7=0;
  1930   000A7C  9E7E               	bcf	126,7,c	;volatile
  1931                           
  1932                           ;lights.c: 23:         LATAbits.LATA4=0;
  1933   000A7E  9879               	bcf	121,4,c	;volatile
  1934   000A80                     l1542:
  1935                           
  1936                           ;lights.c: 25:     if (colorcode==2){
  1937   000A80  0E02               	movlw	2
  1938   000A82  1806               	xorwf	Light@colorcode^0,w,c
  1939   000A84  A4D8               	btfss	status,2,c
  1940   000A86  EF47  F005         	goto	u821
  1941   000A8A  EF49  F005         	goto	u820
  1942   000A8E                     u821:
  1943   000A8E  EF4C  F005         	goto	l1546
  1944   000A92                     u820:
  1945   000A92                     
  1946                           ;lights.c: 26:         LATGbits.LATG1=0;
  1947   000A92  927F               	bcf	127,1,c	;volatile
  1948                           
  1949                           ;lights.c: 27:         LATFbits.LATF7=1;
  1950   000A94  8E7E               	bsf	126,7,c	;volatile
  1951                           
  1952                           ;lights.c: 28:         LATAbits.LATA4=0;
  1953   000A96  9879               	bcf	121,4,c	;volatile
  1954   000A98                     l1546:
  1955                           
  1956                           ;lights.c: 30:     if (colorcode==3){
  1957   000A98  0E03               	movlw	3
  1958   000A9A  1806               	xorwf	Light@colorcode^0,w,c
  1959   000A9C  A4D8               	btfss	status,2,c
  1960   000A9E  EF53  F005         	goto	u831
  1961   000AA2  EF55  F005         	goto	u830
  1962   000AA6                     u831:
  1963   000AA6  EF58  F005         	goto	l208
  1964   000AAA                     u830:
  1965   000AAA                     
  1966                           ;lights.c: 31:         LATGbits.LATG1=0;
  1967   000AAA  927F               	bcf	127,1,c	;volatile
  1968                           
  1969                           ;lights.c: 32:         LATFbits.LATF7=0;
  1970   000AAC  9E7E               	bcf	126,7,c	;volatile
  1971                           
  1972                           ;lights.c: 33:         LATAbits.LATA4=1;
  1973   000AAE  8879               	bsf	121,4,c	;volatile
  1974   000AB0                     l208:
  1975   000AB0  0012               	return		;funcret
  1976   000AB2                     __end_of_Light:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function ___xxtofl *****************
  1980 ;; Defined at:
  1981 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  sign            1    wreg     unsigned char 
  1984 ;;  val             4   18[COMRAM] long 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  sign            1   26[COMRAM] unsigned char 
  1987 ;;  arg             4   28[COMRAM] unsigned long 
  1988 ;;  exp             1   27[COMRAM] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  4   18[COMRAM] unsigned char 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1998 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2002 ;;Total ram usage:       14 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 2
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_readcard
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text9
  2013   000520                     __ptext9:
  2014                           	callstack 0
  2015   000520                     ___xxtofl:
  2016                           	callstack 27
  2017                           
  2018                           ;incstack = 0
  2019                           ;___xxtofl@sign stored from wreg
  2020   000520  6E1B               	movwf	___xxtofl@sign^0,c
  2021   000522  501B               	movf	___xxtofl@sign^0,w,c
  2022   000524  B4D8               	btfsc	status,2,c
  2023   000526  EF97  F002         	goto	u941
  2024   00052A  EF99  F002         	goto	u940
  2025   00052E                     u941:
  2026   00052E  EFBB  F002         	goto	l1022
  2027   000532                     u940:
  2028   000532  BE16               	btfsc	(___xxtofl@val+3)^0,7,c
  2029   000534  EFA0  F002         	goto	u950
  2030   000538  EF9E  F002         	goto	u951
  2031   00053C                     u951:
  2032   00053C  EFBB  F002         	goto	l1022
  2033   000540                     u950:
  2034   000540  C013  F017         	movff	___xxtofl@val,??___xxtofl
  2035   000544  C014  F018         	movff	___xxtofl@val+1,??___xxtofl+1
  2036   000548  C015  F019         	movff	___xxtofl@val+2,??___xxtofl+2
  2037   00054C  C016  F01A         	movff	___xxtofl@val+3,??___xxtofl+3
  2038   000550  1E17               	comf	??___xxtofl^0,f,c
  2039   000552  1E18               	comf	(??___xxtofl+1)^0,f,c
  2040   000554  1E19               	comf	(??___xxtofl+2)^0,f,c
  2041   000556  1E1A               	comf	(??___xxtofl+3)^0,f,c
  2042   000558  2A17               	incf	??___xxtofl^0,f,c
  2043   00055A  0E00               	movlw	0
  2044   00055C  2218               	addwfc	(??___xxtofl+1)^0,f,c
  2045   00055E  2219               	addwfc	(??___xxtofl+2)^0,f,c
  2046   000560  221A               	addwfc	(??___xxtofl+3)^0,f,c
  2047   000562  C017  F01D         	movff	??___xxtofl,___xxtofl@arg
  2048   000566  C018  F01E         	movff	??___xxtofl+1,___xxtofl@arg+1
  2049   00056A  C019  F01F         	movff	??___xxtofl+2,___xxtofl@arg+2
  2050   00056E  C01A  F020         	movff	??___xxtofl+3,___xxtofl@arg+3
  2051   000572  EFC3  F002         	goto	l1656
  2052   000576                     l1022:
  2053   000576  C013  F01D         	movff	___xxtofl@val,___xxtofl@arg
  2054   00057A  C014  F01E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2055   00057E  C015  F01F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2056   000582  C016  F020         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2057   000586                     l1656:
  2058   000586  5013               	movf	___xxtofl@val^0,w,c
  2059   000588  1014               	iorwf	(___xxtofl@val+1)^0,w,c
  2060   00058A  1015               	iorwf	(___xxtofl@val+2)^0,w,c
  2061   00058C  1016               	iorwf	(___xxtofl@val+3)^0,w,c
  2062   00058E  A4D8               	btfss	status,2,c
  2063   000590  EFCC  F002         	goto	u961
  2064   000594  EFCE  F002         	goto	u960
  2065   000598                     u961:
  2066   000598  EFD8  F002         	goto	l1662
  2067   00059C                     u960:
  2068   00059C  0E00               	movlw	0
  2069   00059E  6E13               	movwf	?___xxtofl^0,c
  2070   0005A0  0E00               	movlw	0
  2071   0005A2  6E14               	movwf	(?___xxtofl+1)^0,c
  2072   0005A4  0E00               	movlw	0
  2073   0005A6  6E15               	movwf	(?___xxtofl+2)^0,c
  2074   0005A8  0E00               	movlw	0
  2075   0005AA  6E16               	movwf	(?___xxtofl+3)^0,c
  2076   0005AC  EF69  F003         	goto	l1025
  2077   0005B0                     l1662:
  2078   0005B0  0E96               	movlw	150
  2079   0005B2  6E1C               	movwf	___xxtofl@exp^0,c
  2080   0005B4  EFE2  F002         	goto	l1666
  2081   0005B8                     l1664:
  2082   0005B8  2A1C               	incf	___xxtofl@exp^0,f,c
  2083   0005BA  90D8               	bcf	status,0,c
  2084   0005BC  3220               	rrcf	(___xxtofl@arg+3)^0,f,c
  2085   0005BE  321F               	rrcf	(___xxtofl@arg+2)^0,f,c
  2086   0005C0  321E               	rrcf	(___xxtofl@arg+1)^0,f,c
  2087   0005C2  321D               	rrcf	___xxtofl@arg^0,f,c
  2088   0005C4                     l1666:
  2089   0005C4  0E00               	movlw	0
  2090   0005C6  141D               	andwf	___xxtofl@arg^0,w,c
  2091   0005C8  6E17               	movwf	??___xxtofl^0,c
  2092   0005CA  0E00               	movlw	0
  2093   0005CC  141E               	andwf	(___xxtofl@arg+1)^0,w,c
  2094   0005CE  6E18               	movwf	(??___xxtofl+1)^0,c
  2095   0005D0  0E00               	movlw	0
  2096   0005D2  141F               	andwf	(___xxtofl@arg+2)^0,w,c
  2097   0005D4  6E19               	movwf	(??___xxtofl+2)^0,c
  2098   0005D6  0EFE               	movlw	254
  2099   0005D8  1420               	andwf	(___xxtofl@arg+3)^0,w,c
  2100   0005DA  6E1A               	movwf	(??___xxtofl+3)^0,c
  2101   0005DC  5017               	movf	??___xxtofl^0,w,c
  2102   0005DE  1018               	iorwf	(??___xxtofl+1)^0,w,c
  2103   0005E0  1019               	iorwf	(??___xxtofl+2)^0,w,c
  2104   0005E2  101A               	iorwf	(??___xxtofl+3)^0,w,c
  2105   0005E4  A4D8               	btfss	status,2,c
  2106   0005E6  EFF7  F002         	goto	u971
  2107   0005EA  EFF9  F002         	goto	u970
  2108   0005EE                     u971:
  2109   0005EE  EFDC  F002         	goto	l1664
  2110   0005F2                     u970:
  2111   0005F2  EF07  F003         	goto	l1029
  2112   0005F6                     l1668:
  2113   0005F6  2A1C               	incf	___xxtofl@exp^0,f,c
  2114   0005F8  0E01               	movlw	1
  2115   0005FA  261D               	addwf	___xxtofl@arg^0,f,c
  2116   0005FC  0E00               	movlw	0
  2117   0005FE  221E               	addwfc	(___xxtofl@arg+1)^0,f,c
  2118   000600  221F               	addwfc	(___xxtofl@arg+2)^0,f,c
  2119   000602  2220               	addwfc	(___xxtofl@arg+3)^0,f,c
  2120   000604  90D8               	bcf	status,0,c
  2121   000606  3220               	rrcf	(___xxtofl@arg+3)^0,f,c
  2122   000608  321F               	rrcf	(___xxtofl@arg+2)^0,f,c
  2123   00060A  321E               	rrcf	(___xxtofl@arg+1)^0,f,c
  2124   00060C  321D               	rrcf	___xxtofl@arg^0,f,c
  2125   00060E                     l1029:
  2126   00060E  0E00               	movlw	0
  2127   000610  141D               	andwf	___xxtofl@arg^0,w,c
  2128   000612  6E17               	movwf	??___xxtofl^0,c
  2129   000614  0E00               	movlw	0
  2130   000616  141E               	andwf	(___xxtofl@arg+1)^0,w,c
  2131   000618  6E18               	movwf	(??___xxtofl+1)^0,c
  2132   00061A  0E00               	movlw	0
  2133   00061C  141F               	andwf	(___xxtofl@arg+2)^0,w,c
  2134   00061E  6E19               	movwf	(??___xxtofl+2)^0,c
  2135   000620  0EFF               	movlw	255
  2136   000622  1420               	andwf	(___xxtofl@arg+3)^0,w,c
  2137   000624  6E1A               	movwf	(??___xxtofl+3)^0,c
  2138   000626  5017               	movf	??___xxtofl^0,w,c
  2139   000628  1018               	iorwf	(??___xxtofl+1)^0,w,c
  2140   00062A  1019               	iorwf	(??___xxtofl+2)^0,w,c
  2141   00062C  101A               	iorwf	(??___xxtofl+3)^0,w,c
  2142   00062E  A4D8               	btfss	status,2,c
  2143   000630  EF1C  F003         	goto	u981
  2144   000634  EF1E  F003         	goto	u980
  2145   000638                     u981:
  2146   000638  EFFB  F002         	goto	l1668
  2147   00063C                     u980:
  2148   00063C  EF26  F003         	goto	l1676
  2149   000640                     l1674:
  2150   000640  061C               	decf	___xxtofl@exp^0,f,c
  2151   000642  90D8               	bcf	status,0,c
  2152   000644  361D               	rlcf	___xxtofl@arg^0,f,c
  2153   000646  361E               	rlcf	(___xxtofl@arg+1)^0,f,c
  2154   000648  361F               	rlcf	(___xxtofl@arg+2)^0,f,c
  2155   00064A  3620               	rlcf	(___xxtofl@arg+3)^0,f,c
  2156   00064C                     l1676:
  2157   00064C  BE1F               	btfsc	(___xxtofl@arg+2)^0,7,c
  2158   00064E  EF2B  F003         	goto	u991
  2159   000652  EF2D  F003         	goto	u990
  2160   000656                     u991:
  2161   000656  EF35  F003         	goto	l1036
  2162   00065A                     u990:
  2163   00065A  0E02               	movlw	2
  2164   00065C  601C               	cpfslt	___xxtofl@exp^0,c
  2165   00065E  EF33  F003         	goto	u1001
  2166   000662  EF35  F003         	goto	u1000
  2167   000666                     u1001:
  2168   000666  EF20  F003         	goto	l1674
  2169   00066A                     u1000:
  2170   00066A                     l1036:
  2171   00066A  B01C               	btfsc	___xxtofl@exp^0,0,c
  2172   00066C  EF3A  F003         	goto	u1011
  2173   000670  EF3C  F003         	goto	u1010
  2174   000674                     u1011:
  2175   000674  EF3D  F003         	goto	l1682
  2176   000678                     u1010:
  2177   000678  9E1F               	bcf	(___xxtofl@arg+2)^0,7,c
  2178   00067A                     l1682:
  2179   00067A  90D8               	bcf	status,0,c
  2180   00067C  321C               	rrcf	___xxtofl@exp^0,f,c
  2181   00067E  C01C  F017         	movff	___xxtofl@exp,??___xxtofl
  2182   000682  6A18               	clrf	(??___xxtofl+1)^0,c
  2183   000684  6A19               	clrf	(??___xxtofl+2)^0,c
  2184   000686  6A1A               	clrf	(??___xxtofl+3)^0,c
  2185   000688  C017  F01A         	movff	??___xxtofl,??___xxtofl+3
  2186   00068C  6A19               	clrf	(??___xxtofl+2)^0,c
  2187   00068E  6A18               	clrf	(??___xxtofl+1)^0,c
  2188   000690  6A17               	clrf	??___xxtofl^0,c
  2189   000692  5017               	movf	??___xxtofl^0,w,c
  2190   000694  121D               	iorwf	___xxtofl@arg^0,f,c
  2191   000696  5018               	movf	(??___xxtofl+1)^0,w,c
  2192   000698  121E               	iorwf	(___xxtofl@arg+1)^0,f,c
  2193   00069A  5019               	movf	(??___xxtofl+2)^0,w,c
  2194   00069C  121F               	iorwf	(___xxtofl@arg+2)^0,f,c
  2195   00069E  501A               	movf	(??___xxtofl+3)^0,w,c
  2196   0006A0  1220               	iorwf	(___xxtofl@arg+3)^0,f,c
  2197   0006A2  501B               	movf	___xxtofl@sign^0,w,c
  2198   0006A4  B4D8               	btfsc	status,2,c
  2199   0006A6  EF57  F003         	goto	u1021
  2200   0006AA  EF59  F003         	goto	u1020
  2201   0006AE                     u1021:
  2202   0006AE  EF61  F003         	goto	l1692
  2203   0006B2                     u1020:
  2204   0006B2  BE16               	btfsc	(___xxtofl@val+3)^0,7,c
  2205   0006B4  EF60  F003         	goto	u1030
  2206   0006B8  EF5E  F003         	goto	u1031
  2207   0006BC                     u1031:
  2208   0006BC  EF61  F003         	goto	l1692
  2209   0006C0                     u1030:
  2210   0006C0  8E20               	bsf	(___xxtofl@arg+3)^0,7,c
  2211   0006C2                     l1692:
  2212   0006C2  C01D  F013         	movff	___xxtofl@arg,?___xxtofl
  2213   0006C6  C01E  F014         	movff	___xxtofl@arg+1,?___xxtofl+1
  2214   0006CA  C01F  F015         	movff	___xxtofl@arg+2,?___xxtofl+2
  2215   0006CE  C020  F016         	movff	___xxtofl@arg+3,?___xxtofl+3
  2216   0006D2                     l1025:
  2217   0006D2  0012               	return		;funcret
  2218   0006D4                     __end_of___xxtofl:
  2219                           	callstack 0
  2220                           
  2221 ;; *************** function ___wmul *****************
  2222 ;; Defined at:
  2223 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  multiplier      2    5[COMRAM] unsigned int 
  2226 ;;  multiplicand    2    7[COMRAM] unsigned int 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  product         2    9[COMRAM] unsigned int 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    5[COMRAM] unsigned int 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, prodl, prodh
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;Total ram usage:        6 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 2
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_readcard
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text10
  2253   000DA0                     __ptext10:
  2254                           	callstack 0
  2255   000DA0                     ___wmul:
  2256                           	callstack 27
  2257   000DA0  5006               	movf	___wmul@multiplier^0,w,c
  2258   000DA2  0208               	mulwf	___wmul@multiplicand^0,c
  2259   000DA4  CFF3 F00A          	movff	prodl,___wmul@product
  2260   000DA8  CFF4 F00B          	movff	prodh,___wmul@product+1
  2261   000DAC  5006               	movf	___wmul@multiplier^0,w,c
  2262   000DAE  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  2263   000DB0  50F3               	movf	243,w,c
  2264   000DB2  260B               	addwf	(___wmul@product+1)^0,f,c
  2265   000DB4  5007               	movf	(___wmul@multiplier+1)^0,w,c
  2266   000DB6  0208               	mulwf	___wmul@multiplicand^0,c
  2267   000DB8  50F3               	movf	243,w,c
  2268   000DBA  260B               	addwf	(___wmul@product+1)^0,f,c
  2269   000DBC  C00A  F006         	movff	___wmul@product,?___wmul
  2270   000DC0  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  2271   000DC4  0012               	return		;funcret
  2272   000DC6                     __end_of___wmul:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function ___lwdiv *****************
  2276 ;; Defined at:
  2277 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  dividend        2   11[COMRAM] unsigned int 
  2280 ;;  divisor         2   13[COMRAM] unsigned int 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  quotient        2   15[COMRAM] unsigned int 
  2283 ;;  counter         1   17[COMRAM] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  2   11[COMRAM] unsigned int 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;Total ram usage:        7 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 2
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_readcard
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text11
  2308   0009DE                     __ptext11:
  2309                           	callstack 0
  2310   0009DE                     ___lwdiv:
  2311                           	callstack 27
  2312   0009DE  0E00               	movlw	0
  2313   0009E0  6E11               	movwf	(___lwdiv@quotient+1)^0,c
  2314   0009E2  0E00               	movlw	0
  2315   0009E4  6E10               	movwf	___lwdiv@quotient^0,c
  2316   0009E6  500E               	movf	___lwdiv@divisor^0,w,c
  2317   0009E8  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2318   0009EA  B4D8               	btfsc	status,2,c
  2319   0009EC  EFFA  F004         	goto	u911
  2320   0009F0  EFFC  F004         	goto	u910
  2321   0009F4                     u911:
  2322   0009F4  EF24  F005         	goto	l858
  2323   0009F8                     u910:
  2324   0009F8  0E01               	movlw	1
  2325   0009FA  6E12               	movwf	___lwdiv@counter^0,c
  2326   0009FC  EF04  F005         	goto	l1636
  2327   000A00                     l1634:
  2328   000A00  90D8               	bcf	status,0,c
  2329   000A02  360E               	rlcf	___lwdiv@divisor^0,f,c
  2330   000A04  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2331   000A06  2A12               	incf	___lwdiv@counter^0,f,c
  2332   000A08                     l1636:
  2333   000A08  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  2334   000A0A  EF09  F005         	goto	u921
  2335   000A0E  EF0B  F005         	goto	u920
  2336   000A12                     u921:
  2337   000A12  EF00  F005         	goto	l1634
  2338   000A16                     u920:
  2339   000A16                     l1638:
  2340   000A16  90D8               	bcf	status,0,c
  2341   000A18  3610               	rlcf	___lwdiv@quotient^0,f,c
  2342   000A1A  3611               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2343   000A1C  500E               	movf	___lwdiv@divisor^0,w,c
  2344   000A1E  5C0C               	subwf	___lwdiv@dividend^0,w,c
  2345   000A20  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  2346   000A22  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2347   000A24  A0D8               	btfss	status,0,c
  2348   000A26  EF17  F005         	goto	u931
  2349   000A2A  EF19  F005         	goto	u930
  2350   000A2E                     u931:
  2351   000A2E  EF1E  F005         	goto	l1646
  2352   000A32                     u930:
  2353   000A32  500E               	movf	___lwdiv@divisor^0,w,c
  2354   000A34  5E0C               	subwf	___lwdiv@dividend^0,f,c
  2355   000A36  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  2356   000A38  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2357   000A3A  8010               	bsf	___lwdiv@quotient^0,0,c
  2358   000A3C                     l1646:
  2359   000A3C  90D8               	bcf	status,0,c
  2360   000A3E  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2361   000A40  320E               	rrcf	___lwdiv@divisor^0,f,c
  2362   000A42  2E12               	decfsz	___lwdiv@counter^0,f,c
  2363   000A44  EF0B  F005         	goto	l1638
  2364   000A48                     l858:
  2365   000A48  C010  F00C         	movff	___lwdiv@quotient,?___lwdiv
  2366   000A4C  C011  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2367   000A50  0012               	return		;funcret
  2368   000A52                     __end_of___lwdiv:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function ___flge *****************
  2372 ;; Defined at:
  2373 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  ff1             4    5[COMRAM] unsigned int 
  2376 ;;  ff2             4    9[COMRAM] unsigned int 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;		None               void
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2388 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;Total ram usage:       12 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 2
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_readcard
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text12
  2403   000862                     __ptext12:
  2404                           	callstack 0
  2405   000862                     ___flge:
  2406                           	callstack 27
  2407   000862  0E00               	movlw	0
  2408   000864  1406               	andwf	___flge@ff1^0,w,c
  2409   000866  6E0E               	movwf	??___flge^0,c
  2410   000868  0E00               	movlw	0
  2411   00086A  1407               	andwf	(___flge@ff1+1)^0,w,c
  2412   00086C  6E0F               	movwf	(??___flge+1)^0,c
  2413   00086E  0E80               	movlw	128
  2414   000870  1408               	andwf	(___flge@ff1+2)^0,w,c
  2415   000872  6E10               	movwf	(??___flge+2)^0,c
  2416   000874  0E7F               	movlw	127
  2417   000876  1409               	andwf	(___flge@ff1+3)^0,w,c
  2418   000878  6E11               	movwf	(??___flge+3)^0,c
  2419   00087A  500E               	movf	??___flge^0,w,c
  2420   00087C  100F               	iorwf	(??___flge+1)^0,w,c
  2421   00087E  1010               	iorwf	(??___flge+2)^0,w,c
  2422   000880  1011               	iorwf	(??___flge+3)^0,w,c
  2423   000882  A4D8               	btfss	status,2,c
  2424   000884  EF46  F004         	goto	u861
  2425   000888  EF48  F004         	goto	u860
  2426   00088C                     u861:
  2427   00088C  EF50  F004         	goto	l1610
  2428   000890                     u860:
  2429   000890  0E00               	movlw	0
  2430   000892  6E06               	movwf	___flge@ff1^0,c
  2431   000894  0E00               	movlw	0
  2432   000896  6E07               	movwf	(___flge@ff1+1)^0,c
  2433   000898  0E00               	movlw	0
  2434   00089A  6E08               	movwf	(___flge@ff1+2)^0,c
  2435   00089C  0E00               	movlw	0
  2436   00089E  6E09               	movwf	(___flge@ff1+3)^0,c
  2437   0008A0                     l1610:
  2438   0008A0  0E00               	movlw	0
  2439   0008A2  140A               	andwf	___flge@ff2^0,w,c
  2440   0008A4  6E0E               	movwf	??___flge^0,c
  2441   0008A6  0E00               	movlw	0
  2442   0008A8  140B               	andwf	(___flge@ff2+1)^0,w,c
  2443   0008AA  6E0F               	movwf	(??___flge+1)^0,c
  2444   0008AC  0E80               	movlw	128
  2445   0008AE  140C               	andwf	(___flge@ff2+2)^0,w,c
  2446   0008B0  6E10               	movwf	(??___flge+2)^0,c
  2447   0008B2  0E7F               	movlw	127
  2448   0008B4  140D               	andwf	(___flge@ff2+3)^0,w,c
  2449   0008B6  6E11               	movwf	(??___flge+3)^0,c
  2450   0008B8  500E               	movf	??___flge^0,w,c
  2451   0008BA  100F               	iorwf	(??___flge+1)^0,w,c
  2452   0008BC  1010               	iorwf	(??___flge+2)^0,w,c
  2453   0008BE  1011               	iorwf	(??___flge+3)^0,w,c
  2454   0008C0  A4D8               	btfss	status,2,c
  2455   0008C2  EF65  F004         	goto	u871
  2456   0008C6  EF67  F004         	goto	u870
  2457   0008CA                     u871:
  2458   0008CA  EF6F  F004         	goto	l1614
  2459   0008CE                     u870:
  2460   0008CE  0E00               	movlw	0
  2461   0008D0  6E0A               	movwf	___flge@ff2^0,c
  2462   0008D2  0E00               	movlw	0
  2463   0008D4  6E0B               	movwf	(___flge@ff2+1)^0,c
  2464   0008D6  0E00               	movlw	0
  2465   0008D8  6E0C               	movwf	(___flge@ff2+2)^0,c
  2466   0008DA  0E00               	movlw	0
  2467   0008DC  6E0D               	movwf	(___flge@ff2+3)^0,c
  2468   0008DE                     l1614:
  2469   0008DE  AE09               	btfss	(___flge@ff1+3)^0,7,c
  2470   0008E0  EF74  F004         	goto	u881
  2471   0008E4  EF76  F004         	goto	u880
  2472   0008E8                     u881:
  2473   0008E8  EF7F  F004         	goto	l1618
  2474   0008EC                     u880:
  2475   0008EC  6C06               	negf	___flge@ff1^0,c
  2476   0008EE  1E07               	comf	(___flge@ff1+1)^0,f,c
  2477   0008F0  B0D8               	btfsc	status,0,c
  2478   0008F2  2A07               	incf	(___flge@ff1+1)^0,f,c
  2479   0008F4  1E08               	comf	(___flge@ff1+2)^0,f,c
  2480   0008F6  B0D8               	btfsc	status,0,c
  2481   0008F8  2A08               	incf	(___flge@ff1+2)^0,f,c
  2482   0008FA  0E80               	movlw	128
  2483   0008FC  5609               	subfwb	(___flge@ff1+3)^0,f,c
  2484   0008FE                     l1618:
  2485   0008FE  AE0D               	btfss	(___flge@ff2+3)^0,7,c
  2486   000900  EF84  F004         	goto	u891
  2487   000904  EF86  F004         	goto	u890
  2488   000908                     u891:
  2489   000908  EF8F  F004         	goto	l632
  2490   00090C                     u890:
  2491   00090C  6C0A               	negf	___flge@ff2^0,c
  2492   00090E  1E0B               	comf	(___flge@ff2+1)^0,f,c
  2493   000910  B0D8               	btfsc	status,0,c
  2494   000912  2A0B               	incf	(___flge@ff2+1)^0,f,c
  2495   000914  1E0C               	comf	(___flge@ff2+2)^0,f,c
  2496   000916  B0D8               	btfsc	status,0,c
  2497   000918  2A0C               	incf	(___flge@ff2+2)^0,f,c
  2498   00091A  0E80               	movlw	128
  2499   00091C  560D               	subfwb	(___flge@ff2+3)^0,f,c
  2500   00091E                     l632:
  2501   00091E  0E00               	movlw	0
  2502   000920  1A06               	xorwf	___flge@ff1^0,f,c
  2503   000922  0E00               	movlw	0
  2504   000924  1A07               	xorwf	(___flge@ff1+1)^0,f,c
  2505   000926  0E00               	movlw	0
  2506   000928  1A08               	xorwf	(___flge@ff1+2)^0,f,c
  2507   00092A  0E80               	movlw	128
  2508   00092C  1A09               	xorwf	(___flge@ff1+3)^0,f,c
  2509   00092E  0E00               	movlw	0
  2510   000930  1A0A               	xorwf	___flge@ff2^0,f,c
  2511   000932  0E00               	movlw	0
  2512   000934  1A0B               	xorwf	(___flge@ff2+1)^0,f,c
  2513   000936  0E00               	movlw	0
  2514   000938  1A0C               	xorwf	(___flge@ff2+2)^0,f,c
  2515   00093A  0E80               	movlw	128
  2516   00093C  1A0D               	xorwf	(___flge@ff2+3)^0,f,c
  2517   00093E  500A               	movf	___flge@ff2^0,w,c
  2518   000940  5C06               	subwf	___flge@ff1^0,w,c
  2519   000942  500B               	movf	(___flge@ff2+1)^0,w,c
  2520   000944  5807               	subwfb	(___flge@ff1+1)^0,w,c
  2521   000946  500C               	movf	(___flge@ff2+2)^0,w,c
  2522   000948  5808               	subwfb	(___flge@ff1+2)^0,w,c
  2523   00094A  500D               	movf	(___flge@ff2+3)^0,w,c
  2524   00094C  5809               	subwfb	(___flge@ff1+3)^0,w,c
  2525   00094E  B0D8               	btfsc	status,0,c
  2526   000950  EFAC  F004         	goto	u901
  2527   000954  EFAE  F004         	goto	u900
  2528   000958                     u901:
  2529   000958  EFB1  F004         	goto	l1624
  2530   00095C                     u900:
  2531   00095C  90D8               	bcf	status,0,c
  2532   00095E  EFB2  F004         	goto	l637
  2533   000962                     l1624:
  2534   000962  80D8               	bsf	status,0,c
  2535   000964                     l637:
  2536   000964  0012               	return		;funcret
  2537   000966                     __end_of___flge:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _initUSART4 *****************
  2541 ;; Defined at:
  2542 ;;		line 5 in file "serial.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; Hardware stack levels required when called: 2
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text13
  2571   000DE6                     __ptext13:
  2572                           	callstack 0
  2573   000DE6                     _initUSART4:
  2574                           	callstack 28
  2575   000DE6                     
  2576                           ;serial.c: 6:     RC0PPS = 0x12;
  2577   000DE6  0E12               	movlw	18
  2578   000DE8  010E               	movlb	14	; () banked
  2579   000DEA  6F62               	movwf	98,b	;volatile
  2580                           
  2581                           ;serial.c: 7:     RX4PPS = 0x11;
  2582   000DEC  0E11               	movlw	17
  2583   000DEE  6F15               	movwf	21,b	;volatile
  2584   000DF0                     
  2585                           ; BSR set to: 14
  2586                           ;serial.c: 9:     BAUD4CONbits.BRG16 = 0;
  2587   000DF0  97E9               	bcf	233,3,b	;volatile
  2588   000DF2                     
  2589                           ; BSR set to: 14
  2590                           ;serial.c: 10:     TX4STAbits.BRGH = 0;
  2591   000DF2  95E8               	bcf	232,2,b	;volatile
  2592                           
  2593                           ;serial.c: 11:     SP4BRGL = 51;
  2594   000DF4  0E33               	movlw	51
  2595   000DF6  6FE5               	movwf	229,b	;volatile
  2596                           
  2597                           ;serial.c: 12:     SP4BRGH = 0;
  2598   000DF8  0E00               	movlw	0
  2599   000DFA  6FE6               	movwf	230,b	;volatile
  2600   000DFC                     
  2601                           ; BSR set to: 14
  2602                           ;serial.c: 14:     RC4STAbits.CREN = 1;
  2603   000DFC  89E7               	bsf	231,4,b	;volatile
  2604   000DFE                     
  2605                           ; BSR set to: 14
  2606                           ;serial.c: 15:     TX4STAbits.TXEN = 1;
  2607   000DFE  8BE8               	bsf	232,5,b	;volatile
  2608   000E00                     
  2609                           ; BSR set to: 14
  2610                           ;serial.c: 16:     RC4STAbits.SPEN = 1;
  2611   000E00  8FE7               	bsf	231,7,b	;volatile
  2612   000E02                     
  2613                           ; BSR set to: 14
  2614   000E02  0012               	return		;funcret
  2615   000E04                     __end_of_initUSART4:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _color_click_init *****************
  2619 ;; Defined at:
  2620 ;;		line 5 in file "color.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2638 ;;Total ram usage:        1 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 5
  2641 ;; This function calls:
  2642 ;;		_I2C_2_Master_Init
  2643 ;;		_color_writetoaddr
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text14
  2650   000C9A                     __ptext14:
  2651                           	callstack 0
  2652   000C9A                     _color_click_init:
  2653                           	callstack 25
  2654   000C9A                     
  2655                           ;color.c: 8:     I2C_2_Master_Init();
  2656   000C9A  EC7D  F006         	call	_I2C_2_Master_Init	;wreg free
  2657   000C9E                     
  2658                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  2659   000C9E  0E01               	movlw	1
  2660   000CA0  6E08               	movwf	color_writetoaddr@value^0,c
  2661   000CA2  0E00               	movlw	0
  2662   000CA4  ECE3  F006         	call	_color_writetoaddr
  2663   000CA8                     
  2664                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2665   000CA8  0E3F               	movlw	63
  2666   000CAA  6E0A               	movwf	??_color_click_init^0,c
  2667   000CAC  0E55               	movlw	85
  2668   000CAE                     u1457:
  2669   000CAE  2EE8               	decfsz	wreg,f,c
  2670   000CB0  D7FE               	bra	u1457
  2671   000CB2  2E0A               	decfsz	??_color_click_init^0,f,c
  2672   000CB4  D7FC               	bra	u1457
  2673   000CB6  F000               	nop	
  2674   000CB8                     
  2675                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  2676   000CB8  0E03               	movlw	3
  2677   000CBA  6E08               	movwf	color_writetoaddr@value^0,c
  2678   000CBC  0E00               	movlw	0
  2679   000CBE  ECE3  F006         	call	_color_writetoaddr
  2680   000CC2                     
  2681                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  2682   000CC2  0ED5               	movlw	213
  2683   000CC4  6E08               	movwf	color_writetoaddr@value^0,c
  2684   000CC6  0E01               	movlw	1
  2685   000CC8  ECE3  F006         	call	_color_writetoaddr
  2686   000CCC  0012               	return		;funcret
  2687   000CCE                     __end_of_color_click_init:
  2688                           	callstack 0
  2689                           
  2690 ;; *************** function _color_writetoaddr *****************
  2691 ;; Defined at:
  2692 ;;		line 21 in file "color.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  address         1    wreg     unsigned char 
  2695 ;;  value           1    7[COMRAM] unsigned char 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  address         1    8[COMRAM] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2707 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;Total ram usage:        2 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 4
  2714 ;; This function calls:
  2715 ;;		_I2C_2_Master_Start
  2716 ;;		_I2C_2_Master_Stop
  2717 ;;		_I2C_2_Master_Write
  2718 ;; This function is called by:
  2719 ;;		_color_click_init
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text15
  2724   000DC6                     __ptext15:
  2725                           	callstack 0
  2726   000DC6                     _color_writetoaddr:
  2727                           	callstack 25
  2728                           
  2729                           ;incstack = 0
  2730                           ;color_writetoaddr@address stored from wreg
  2731   000DC6  6E09               	movwf	color_writetoaddr@address^0,c
  2732   000DC8                     
  2733                           ;color.c: 22:     I2C_2_Master_Start();
  2734   000DC8  EC2D  F007         	call	_I2C_2_Master_Start	;wreg free
  2735                           
  2736                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2737   000DCC  0E52               	movlw	82
  2738   000DCE  EC1D  F007         	call	_I2C_2_Master_Write
  2739                           
  2740                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2741   000DD2  5009               	movf	color_writetoaddr@address^0,w,c
  2742   000DD4  0980               	iorlw	128
  2743   000DD6  EC1D  F007         	call	_I2C_2_Master_Write
  2744                           
  2745                           ;color.c: 25:     I2C_2_Master_Write(value);
  2746   000DDA  5008               	movf	color_writetoaddr@value^0,w,c
  2747   000DDC  EC1D  F007         	call	_I2C_2_Master_Write
  2748                           
  2749                           ;color.c: 26:     I2C_2_Master_Stop();
  2750   000DE0  EC28  F007         	call	_I2C_2_Master_Stop	;wreg free
  2751   000DE4  0012               	return		;funcret
  2752   000DE6                     __end_of_color_writetoaddr:
  2753                           	callstack 0
  2754                           
  2755 ;; *************** function _I2C_2_Master_Write *****************
  2756 ;; Defined at:
  2757 ;;		line 45 in file "i2c.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  data_byte       1    wreg     unsigned char 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  data_byte       1    6[COMRAM] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2775 ;;Total ram usage:        1 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 3
  2778 ;; This function calls:
  2779 ;;		_I2C_2_Master_Idle
  2780 ;; This function is called by:
  2781 ;;		_color_writetoaddr
  2782 ;;		_color_read_Red
  2783 ;;		_color_read_Blue
  2784 ;;		_color_read_Green
  2785 ;;		_color_read_Clear
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text16
  2790   000E3A                     __ptext16:
  2791                           	callstack 0
  2792   000E3A                     _I2C_2_Master_Write:
  2793                           	callstack 24
  2794                           
  2795                           ;incstack = 0
  2796                           ;I2C_2_Master_Write@data_byte stored from wreg
  2797   000E3A  6E07               	movwf	I2C_2_Master_Write@data_byte^0,c
  2798   000E3C                     
  2799                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2800   000E3C  ECBC  F006         	call	_I2C_2_Master_Idle	;wreg free
  2801   000E40                     
  2802                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2803   000E40  C007  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2804   000E44  0012               	return		;funcret
  2805   000E46                     __end_of_I2C_2_Master_Write:
  2806                           	callstack 0
  2807                           
  2808 ;; *************** function _I2C_2_Master_Stop *****************
  2809 ;; Defined at:
  2810 ;;		line 39 in file "i2c.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2828 ;;Total ram usage:        0 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 3
  2831 ;; This function calls:
  2832 ;;		_I2C_2_Master_Idle
  2833 ;; This function is called by:
  2834 ;;		_color_writetoaddr
  2835 ;;		_color_read_Red
  2836 ;;		_color_read_Blue
  2837 ;;		_color_read_Green
  2838 ;;		_color_read_Clear
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text17
  2843   000E50                     __ptext17:
  2844                           	callstack 0
  2845   000E50                     _I2C_2_Master_Stop:
  2846                           	callstack 24
  2847   000E50                     
  2848                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2849   000E50  ECBC  F006         	call	_I2C_2_Master_Idle	;wreg free
  2850   000E54                     
  2851                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2852   000E54  010E               	movlb	14	; () banked
  2853   000E56  85DA               	bsf	218,2,b	;volatile
  2854   000E58                     
  2855                           ; BSR set to: 14
  2856   000E58  0012               	return		;funcret
  2857   000E5A                     __end_of_I2C_2_Master_Stop:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _I2C_2_Master_Start *****************
  2861 ;; Defined at:
  2862 ;;		line 27 in file "i2c.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 3
  2883 ;; This function calls:
  2884 ;;		_I2C_2_Master_Idle
  2885 ;; This function is called by:
  2886 ;;		_color_writetoaddr
  2887 ;;		_color_read_Red
  2888 ;;		_color_read_Blue
  2889 ;;		_color_read_Green
  2890 ;;		_color_read_Clear
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text18
  2895   000E5A                     __ptext18:
  2896                           	callstack 0
  2897   000E5A                     _I2C_2_Master_Start:
  2898                           	callstack 24
  2899   000E5A                     
  2900                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2901   000E5A  ECBC  F006         	call	_I2C_2_Master_Idle	;wreg free
  2902   000E5E                     
  2903                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2904   000E5E  010E               	movlb	14	; () banked
  2905   000E60  81DA               	bsf	218,0,b	;volatile
  2906   000E62                     
  2907                           ; BSR set to: 14
  2908   000E62  0012               	return		;funcret
  2909   000E64                     __end_of_I2C_2_Master_Start:
  2910                           	callstack 0
  2911                           
  2912 ;; *************** function _I2C_2_Master_Idle *****************
  2913 ;; Defined at:
  2914 ;;		line 22 in file "i2c.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2932 ;;Total ram usage:        1 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; Hardware stack levels required when called: 2
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_I2C_2_Master_Start
  2939 ;;		_I2C_2_Master_RepStart
  2940 ;;		_I2C_2_Master_Stop
  2941 ;;		_I2C_2_Master_Write
  2942 ;;		_I2C_2_Master_Read
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text19
  2947   000D78                     __ptext19:
  2948                           	callstack 0
  2949   000D78                     _I2C_2_Master_Idle:
  2950                           	callstack 24
  2951   000D78                     l346:
  2952   000D78  010E               	movlb	14	; () banked
  2953   000D7A  B5D8               	btfsc	216,2,b	;volatile
  2954   000D7C  EFC2  F006         	goto	u761
  2955   000D80  EFC4  F006         	goto	u760
  2956   000D84                     u761:
  2957   000D84  EFBC  F006         	goto	l346
  2958   000D88                     u760:
  2959   000D88                     
  2960                           ; BSR set to: 14
  2961   000D88  CEDA F006          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2962   000D8C  0E1F               	movlw	31
  2963   000D8E  1606               	andwf	??_I2C_2_Master_Idle^0,f,c
  2964   000D90  A4D8               	btfss	status,2,c
  2965   000D92  EFCD  F006         	goto	u771
  2966   000D96  EFCF  F006         	goto	u770
  2967   000D9A                     u771:
  2968   000D9A  EFBC  F006         	goto	l346
  2969   000D9E                     u770:
  2970   000D9E                     
  2971                           ; BSR set to: 14
  2972   000D9E  0012               	return		;funcret
  2973   000DA0                     __end_of_I2C_2_Master_Idle:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _I2C_2_Master_Init *****************
  2977 ;; Defined at:
  2978 ;;		line 4 in file "i2c.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 2
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_color_click_init
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text20
  3007   000CFA                     __ptext20:
  3008                           	callstack 0
  3009   000CFA                     _I2C_2_Master_Init:
  3010                           	callstack 27
  3011   000CFA                     
  3012                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3013   000CFA  010E               	movlb	14	; () banked
  3014   000CFC  51D9               	movf	217,w,b	;volatile
  3015   000CFE  0BF0               	andlw	-16
  3016   000D00  0908               	iorlw	8
  3017   000D02  6FD9               	movwf	217,b	;volatile
  3018   000D04                     
  3019                           ; BSR set to: 14
  3020                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3021   000D04  8BD9               	bsf	217,5,b	;volatile
  3022                           
  3023                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3024   000D06  0E9F               	movlw	159
  3025   000D08  6FD6               	movwf	214,b	;volatile
  3026   000D0A                     
  3027                           ; BSR set to: 14
  3028                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3029   000D0A  8A84               	bsf	132,5,c	;volatile
  3030   000D0C                     
  3031                           ; BSR set to: 14
  3032                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3033   000D0C  8C84               	bsf	132,6,c	;volatile
  3034   000D0E                     
  3035                           ; BSR set to: 14
  3036                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3037   000D0E  9BA7               	bcf	167,5,b	;volatile
  3038   000D10                     
  3039                           ; BSR set to: 14
  3040                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3041   000D10  9DA7               	bcf	167,6,b	;volatile
  3042                           
  3043                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3044   000D12  0E1D               	movlw	29
  3045   000D14  6F1D               	movwf	29,b	;volatile
  3046                           
  3047                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3048   000D16  0E1E               	movlw	30
  3049   000D18  6F1C               	movwf	28,b	;volatile
  3050                           
  3051                           ;i2c.c: 18:   RD5PPS=0x1C;
  3052   000D1A  0E1C               	movlw	28
  3053   000D1C  6F6F               	movwf	111,b	;volatile
  3054                           
  3055                           ;i2c.c: 19:   RD6PPS=0x1B;
  3056   000D1E  0E1B               	movlw	27
  3057   000D20  6F70               	movwf	112,b	;volatile
  3058   000D22                     
  3059                           ; BSR set to: 14
  3060   000D22  0012               	return		;funcret
  3061   000D24                     __end_of_I2C_2_Master_Init:
  3062                           	callstack 0
  3063                           
  3064 ;; *************** function _TxBufferedString *****************
  3065 ;; Defined at:
  3066 ;;		line 84 in file "serial.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  string          2    6[COMRAM] PTR unsigned char 
  3069 ;;		 -> main@buf(15), 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3085 ;;Total ram usage:        2 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; Hardware stack levels required when called: 3
  3088 ;; This function calls:
  3089 ;;		_putCharToTxBuf
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text21
  3096   000C62                     __ptext21:
  3097                           	callstack 0
  3098   000C62                     _TxBufferedString:
  3099                           	callstack 27
  3100   000C62                     
  3101                           ;serial.c: 86:     while(*string != 0){
  3102   000C62  EF3C  F006         	goto	l1798
  3103   000C66                     l1794:
  3104                           
  3105                           ;serial.c: 87:   putCharToTxBuf(*string++);
  3106   000C66  C007  FFD9         	movff	TxBufferedString@string,fsr2l
  3107   000C6A  C008  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3108   000C6E  50DF               	movf	indf2,w,c
  3109   000C70  EC92  F006         	call	_putCharToTxBuf
  3110   000C74  4A07               	infsnz	TxBufferedString@string^0,f,c
  3111   000C76  2A08               	incf	(TxBufferedString@string+1)^0,f,c
  3112   000C78                     l1798:
  3113                           
  3114                           ;serial.c: 86:     while(*string != 0){
  3115   000C78  C007  FFD9         	movff	TxBufferedString@string,fsr2l
  3116   000C7C  C008  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3117   000C80  50DF               	movf	indf2,w,c
  3118   000C82  A4D8               	btfss	status,2,c
  3119   000C84  EF46  F006         	goto	u1171
  3120   000C88  EF48  F006         	goto	u1170
  3121   000C8C                     u1171:
  3122   000C8C  EF33  F006         	goto	l1794
  3123   000C90                     u1170:
  3124   000C90                     
  3125                           ;serial.c: 89:     sendFLAG=1;
  3126   000C90  0E01               	movlw	1
  3127   000C92  6E4D               	movwf	_sendFLAG^0,c
  3128   000C94                     
  3129                           ;serial.c: 90:     PIE4bits.TX4IE=1;
  3130   000C94  010E               	movlb	14	; () banked
  3131   000C96  852D               	bsf	45,2,b	;volatile
  3132   000C98                     
  3133                           ; BSR set to: 14
  3134   000C98  0012               	return		;funcret
  3135   000C9A                     __end_of_TxBufferedString:
  3136                           	callstack 0
  3137                           
  3138 ;; *************** function _putCharToTxBuf *****************
  3139 ;; Defined at:
  3140 ;;		line 71 in file "serial.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  byte            1    wreg     unsigned char 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  byte            1    5[COMRAM] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3158 ;;Total ram usage:        1 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 2
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_TxBufferedString
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text22
  3169   000D24                     __ptext22:
  3170                           	callstack 0
  3171   000D24                     _putCharToTxBuf:
  3172                           	callstack 27
  3173                           
  3174                           ; BSR set to: 14
  3175                           ;incstack = 0
  3176                           ;putCharToTxBuf@byte stored from wreg
  3177   000D24  6E06               	movwf	putCharToTxBuf@byte^0,c
  3178   000D26                     
  3179                           ;serial.c: 72:     if (TxBufWriteCnt>=100) {TxBufWriteCnt=0;}
  3180   000D26  0E63               	movlw	99
  3181   000D28  644A               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3182   000D2A  EF99  F006         	goto	u851
  3183   000D2E  EF9B  F006         	goto	u850
  3184   000D32                     u851:
  3185   000D32  EF9D  F006         	goto	l1596
  3186   000D36                     u850:
  3187   000D36  0E00               	movlw	0
  3188   000D38  6E4A               	movwf	_TxBufWriteCnt^0,c	;volatile
  3189   000D3A                     l1596:
  3190                           
  3191                           ;serial.c: 73:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3192   000D3A  0E00               	movlw	low _EUSART4TXbuf
  3193   000D3C  244A               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  3194   000D3E  6ED9               	movwf	fsr2l,c
  3195   000D40  6ADA               	clrf	fsr2h,c
  3196   000D42  0E01               	movlw	high _EUSART4TXbuf
  3197   000D44  22DA               	addwfc	fsr2h,f,c
  3198   000D46  C006  FFDF         	movff	putCharToTxBuf@byte,indf2
  3199   000D4A  2A4A               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3200   000D4C  0012               	return		;funcret
  3201   000D4E                     __end_of_putCharToTxBuf:
  3202                           	callstack 0
  3203                           
  3204 ;; *************** function _LightInit *****************
  3205 ;; Defined at:
  3206 ;;		line 4 in file "lights.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		None
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;Total ram usage:        0 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 2
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_main
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text23
  3235   000E2C                     __ptext23:
  3236                           	callstack 0
  3237   000E2C                     _LightInit:
  3238                           	callstack 28
  3239   000E2C                     
  3240                           ;lights.c: 5:     TRISGbits.TRISG1=0;
  3241   000E2C  9287               	bcf	135,1,c	;volatile
  3242                           
  3243                           ;lights.c: 6:     TRISFbits.TRISF7=0;
  3244   000E2E  9E86               	bcf	134,7,c	;volatile
  3245                           
  3246                           ;lights.c: 7:     TRISAbits.TRISA4=0;
  3247   000E30  9881               	bcf	129,4,c	;volatile
  3248                           
  3249                           ;lights.c: 8:     LATGbits.LATG1=0;
  3250   000E32  927F               	bcf	127,1,c	;volatile
  3251                           
  3252                           ;lights.c: 9:     LATFbits.LATF7=0;
  3253   000E34  9E7E               	bcf	126,7,c	;volatile
  3254                           
  3255                           ;lights.c: 10:     LATAbits.LATA4=0;
  3256   000E36  9879               	bcf	121,4,c	;volatile
  3257   000E38  0012               	return		;funcret
  3258   000E3A                     __end_of_LightInit:
  3259                           	callstack 0
  3260                           
  3261 ;; *************** function _Interrupts_init *****************
  3262 ;; Defined at:
  3263 ;;		line 9 in file "interrupts.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		None
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 2
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text24
  3292   000E1C                     __ptext24:
  3293                           	callstack 0
  3294   000E1C                     _Interrupts_init:
  3295                           	callstack 28
  3296   000E1C                     
  3297                           ;interrupts.c: 11:     INTCONbits.PEIE=1;
  3298   000E1C  8CF2               	bsf	242,6,c	;volatile
  3299                           
  3300                           ;interrupts.c: 12:     INTCONbits.IPEN=1;
  3301   000E1E  8AF2               	bsf	242,5,c	;volatile
  3302                           
  3303                           ;interrupts.c: 13:     PIE4bits.RC4IE=1;
  3304   000E20  010E               	movlb	14	; () banked
  3305   000E22  872D               	bsf	45,3,b	;volatile
  3306                           
  3307                           ;interrupts.c: 14:     PIE4bits.TX4IE=0;
  3308   000E24  952D               	bcf	45,2,b	;volatile
  3309                           
  3310                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  3311   000E26  8B29               	bsf	41,5,b	;volatile
  3312                           
  3313                           ;interrupts.c: 16:     INTCONbits.GIE=1;
  3314   000E28  8EF2               	bsf	242,7,c	;volatile
  3315   000E2A                     
  3316                           ; BSR set to: 14
  3317   000E2A  0012               	return		;funcret
  3318   000E2C                     __end_of_Interrupts_init:
  3319                           	callstack 0
  3320                           
  3321 ;; *************** function _HighISR *****************
  3322 ;; Defined at:
  3323 ;;		line 25 in file "interrupts.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  reg             1    4[COMRAM] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3340 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3341 ;;Total ram usage:        3 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; Hardware stack levels required when called: 1
  3344 ;; This function calls:
  3345 ;;		_getCharFromTxBuf
  3346 ;;		_isDataInTxBuf
  3347 ;;		_putCharToRxBuf
  3348 ;; This function is called by:
  3349 ;;		Interrupt level 2
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	intcode
  3354   000008                     __pintcode:
  3355                           	callstack 0
  3356   000008                     _HighISR:
  3357                           	callstack 24
  3358                           
  3359                           ; BSR set to: 14
  3360                           ;incstack = 0
  3361   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3362   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3363   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3364   000012                     
  3365                           ;interrupts.c: 28:  if(PIR4bits.TX4IF & sendFLAG){
  3366   000012  010E               	movlb	14	; () banked
  3367   000014  B537               	btfsc	55,2,b	;volatile
  3368   000016  EF0F  F000         	goto	i2u136_41
  3369   00001A  EF12  F000         	goto	i2u136_40
  3370   00001E                     i2u136_41:
  3371   00001E  0E01               	movlw	1
  3372   000020  EF13  F000         	goto	i2u136_46
  3373   000024                     i2u136_40:
  3374   000024  0E00               	movlw	0
  3375   000026                     i2u136_46:
  3376   000026  144D               	andwf	_sendFLAG^0,w,c
  3377   000028  0900               	iorlw	0
  3378   00002A  B4D8               	btfsc	status,2,c
  3379   00002C  EF1A  F000         	goto	i2u137_41
  3380   000030  EF1C  F000         	goto	i2u137_40
  3381   000034                     i2u137_41:
  3382   000034  EF38  F000         	goto	i2l1886
  3383   000038                     i2u137_40:
  3384   000038                     
  3385                           ; BSR set to: 14
  3386                           ;interrupts.c: 29:         if (!isDataInTxBuf()){
  3387   000038  EC02  F007         	call	_isDataInTxBuf	;wreg free
  3388   00003C  0900               	iorlw	0
  3389   00003E  A4D8               	btfss	status,2,c
  3390   000040  EF24  F000         	goto	i2u138_41
  3391   000044  EF26  F000         	goto	i2u138_40
  3392   000048                     i2u138_41:
  3393   000048  EF2A  F000         	goto	i2l1882
  3394   00004C                     i2u138_40:
  3395   00004C                     
  3396                           ;interrupts.c: 30:             PIE4bits.TX4IE=0;
  3397   00004C  010E               	movlb	14	; () banked
  3398   00004E  952D               	bcf	45,2,b	;volatile
  3399   000050                     
  3400                           ; BSR set to: 14
  3401                           ;interrupts.c: 31:             sendFLAG=0;
  3402   000050  0E00               	movlw	0
  3403   000052  6E4D               	movwf	_sendFLAG^0,c
  3404   000054                     i2l1882:
  3405                           
  3406                           ;interrupts.c: 33:         if (isDataInTxBuf()){
  3407   000054  EC02  F007         	call	_isDataInTxBuf	;wreg free
  3408   000058  0900               	iorlw	0
  3409   00005A  B4D8               	btfsc	status,2,c
  3410   00005C  EF32  F000         	goto	i2u139_41
  3411   000060  EF34  F000         	goto	i2u139_40
  3412   000064                     i2u139_41:
  3413   000064  EF38  F000         	goto	i2l1886
  3414   000068                     i2u139_40:
  3415   000068                     
  3416                           ;interrupts.c: 34:             TX4REG = getCharFromTxBuf();
  3417   000068  EC67  F006         	call	_getCharFromTxBuf	;wreg free
  3418   00006C  010E               	movlb	14	; () banked
  3419   00006E  6FE4               	movwf	228,b	;volatile
  3420   000070                     i2l1886:
  3421                           
  3422                           ;interrupts.c: 39:     if(PIR4bits.RC4IF){
  3423   000070  010E               	movlb	14	; () banked
  3424   000072  A737               	btfss	55,3,b	;volatile
  3425   000074  EF3E  F000         	goto	i2u140_41
  3426   000078  EF40  F000         	goto	i2u140_40
  3427   00007C                     i2u140_41:
  3428   00007C  EF47  F000         	goto	i2l186
  3429   000080                     i2u140_40:
  3430   000080                     
  3431                           ; BSR set to: 14
  3432                           ;interrupts.c: 40:         char reg = RC4REG;
  3433   000080  CEE3 F005          	movff	3811,HighISR@reg	;volatile
  3434   000084                     
  3435                           ; BSR set to: 14
  3436                           ;interrupts.c: 41:         putCharToRxBuf(reg);
  3437   000084  5005               	movf	HighISR@reg^0,w,c
  3438   000086  ECA7  F006         	call	_putCharToRxBuf
  3439   00008A                     
  3440                           ;interrupts.c: 42:         charFLAG=1;
  3441   00008A  0E01               	movlw	1
  3442   00008C  6E4E               	movwf	_charFLAG^0,c
  3443   00008E                     i2l186:
  3444   00008E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3445   000092  C003  FFD9         	movff	??_HighISR,fsr2l
  3446   000096  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3447   000098  0011               	retfie		f
  3448   00009A                     __end_of_HighISR:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _putCharToRxBuf *****************
  3452 ;; Defined at:
  3453 ;;		line 51 in file "serial.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  byte            1    wreg     unsigned char 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  byte            1    0[COMRAM] unsigned char 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3471 ;;Total ram usage:        1 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_HighISR
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text26
  3481   000D4E                     __ptext26:
  3482                           	callstack 0
  3483   000D4E                     _putCharToRxBuf:
  3484                           	callstack 24
  3485                           
  3486                           ;incstack = 0
  3487                           ;putCharToRxBuf@byte stored from wreg
  3488   000D4E  6E01               	movwf	putCharToRxBuf@byte^0,c
  3489   000D50                     
  3490                           ;serial.c: 52:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3491   000D50  0E13               	movlw	19
  3492   000D52  644C               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3493   000D54  EFAE  F006         	goto	i2u46_41
  3494   000D58  EFB0  F006         	goto	i2u46_40
  3495   000D5C                     i2u46_41:
  3496   000D5C  EFB2  F006         	goto	i2l1360
  3497   000D60                     i2u46_40:
  3498   000D60  0E00               	movlw	0
  3499   000D62  6E4C               	movwf	_RxBufWriteCnt^0,c	;volatile
  3500   000D64                     i2l1360:
  3501                           
  3502                           ;serial.c: 53:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3503   000D64  0E33               	movlw	low _EUSART4RXbuf
  3504   000D66  244C               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3505   000D68  6ED9               	movwf	fsr2l,c
  3506   000D6A  6ADA               	clrf	fsr2h,c
  3507   000D6C  0E00               	movlw	high _EUSART4RXbuf
  3508   000D6E  22DA               	addwfc	fsr2h,f,c
  3509   000D70  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3510   000D74  2A4C               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3511   000D76  0012               	return		;funcret
  3512   000D78                     __end_of_putCharToRxBuf:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _isDataInTxBuf *****************
  3516 ;; Defined at:
  3517 ;;		line 79 in file "serial.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      unsigned char 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3535 ;;Total ram usage:        0 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_HighISR
  3541 ;;		_sendTxBuf
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text27
  3546   000E04                     __ptext27:
  3547                           	callstack 0
  3548   000E04                     _isDataInTxBuf:
  3549                           	callstack 24
  3550   000E04                     
  3551                           ;serial.c: 80:     return (TxBufWriteCnt!=TxBufReadCnt);
  3552   000E04  5049               	movf	_TxBufReadCnt^0,w,c	;volatile
  3553   000E06  184A               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3554   000E08  A4D8               	btfss	status,2,c
  3555   000E0A  EF09  F007         	goto	i2u43_41
  3556   000E0E  EF0C  F007         	goto	i2u43_40
  3557   000E12                     i2u43_41:
  3558   000E12  0E01               	movlw	1
  3559   000E14  EF0D  F007         	goto	i2u44_40
  3560   000E18                     i2u43_40:
  3561   000E18  0E00               	movlw	0
  3562   000E1A                     i2u44_40:
  3563   000E1A  0012               	return		;funcret
  3564   000E1C                     __end_of_isDataInTxBuf:
  3565                           	callstack 0
  3566                           
  3567 ;; *************** function _getCharFromTxBuf *****************
  3568 ;; Defined at:
  3569 ;;		line 65 in file "serial.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      unsigned char 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3586 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3587 ;;Total ram usage:        2 bytes
  3588 ;; Hardware stack levels used: 1
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_HighISR
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text28
  3597   000CCE                     __ptext28:
  3598                           	callstack 0
  3599   000CCE                     _getCharFromTxBuf:
  3600                           	callstack 24
  3601   000CCE                     
  3602                           ;serial.c: 66:     if (TxBufReadCnt>=100) {TxBufReadCnt=0;}
  3603   000CCE  0E63               	movlw	99
  3604   000CD0  6449               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  3605   000CD2  EF6D  F006         	goto	i2u118_41
  3606   000CD6  EF6F  F006         	goto	i2u118_40
  3607   000CDA                     i2u118_41:
  3608   000CDA  EF71  F006         	goto	i2l1808
  3609   000CDE                     i2u118_40:
  3610   000CDE  0E00               	movlw	0
  3611   000CE0  6E49               	movwf	_TxBufReadCnt^0,c	;volatile
  3612   000CE2                     i2l1808:
  3613                           
  3614                           ;serial.c: 67:     return EUSART4TXbuf[TxBufReadCnt++];
  3615   000CE2  2A49               	incf	_TxBufReadCnt^0,f,c	;volatile
  3616   000CE4  0449               	decf	_TxBufReadCnt^0,w,c	;volatile
  3617   000CE6  6E01               	movwf	??_getCharFromTxBuf^0,c
  3618   000CE8  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  3619   000CEA  0E00               	movlw	low _EUSART4TXbuf
  3620   000CEC  2401               	addwf	??_getCharFromTxBuf^0,w,c
  3621   000CEE  6ED9               	movwf	fsr2l,c
  3622   000CF0  0E01               	movlw	high _EUSART4TXbuf
  3623   000CF2  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  3624   000CF4  6EDA               	movwf	fsr2h,c
  3625   000CF6  50DF               	movf	indf2,w,c
  3626   000CF8  0012               	return		;funcret
  3627   000CFA                     __end_of_getCharFromTxBuf:
  3628                           	callstack 0
  3629   000000                     
  3630                           	psect	rparam
  3631   000000                     
  3632                           	psect	temp
  3633   00004F                     btemp:
  3634                           	callstack 0
  3635   00004F                     	ds	1
  3636   000000                     int$flags	set	btemp
  3637   000000                     wtemp8	set	btemp+1
  3638   000000                     ttemp5	set	btemp+1
  3639   000000                     ttemp6	set	btemp+4
  3640   000000                     ttemp7	set	btemp+8
  3641                           
  3642                           	psect	idloc
  3643                           
  3644                           ;Config register IDLOC0 @ 0x200000
  3645                           ;	unspecified, using default values
  3646   200000                     	org	2097152
  3647   200000  0FFF               	dw	4095
  3648                           
  3649                           ;Config register IDLOC1 @ 0x200002
  3650                           ;	unspecified, using default values
  3651   200002                     	org	2097154
  3652   200002  0FFF               	dw	4095
  3653                           
  3654                           ;Config register IDLOC2 @ 0x200004
  3655                           ;	unspecified, using default values
  3656   200004                     	org	2097156
  3657   200004  0FFF               	dw	4095
  3658                           
  3659                           ;Config register IDLOC3 @ 0x200006
  3660                           ;	unspecified, using default values
  3661   200006                     	org	2097158
  3662   200006  0FFF               	dw	4095
  3663                           
  3664                           ;Config register IDLOC4 @ 0x200008
  3665                           ;	unspecified, using default values
  3666   200008                     	org	2097160
  3667   200008  0FFF               	dw	4095
  3668                           
  3669                           ;Config register IDLOC5 @ 0x20000A
  3670                           ;	unspecified, using default values
  3671   20000A                     	org	2097162
  3672   20000A  0FFF               	dw	4095
  3673                           
  3674                           ;Config register IDLOC6 @ 0x20000C
  3675                           ;	unspecified, using default values
  3676   20000C                     	org	2097164
  3677   20000C  0FFF               	dw	4095
  3678                           
  3679                           ;Config register IDLOC7 @ 0x20000E
  3680                           ;	unspecified, using default values
  3681   20000E                     	org	2097166
  3682   20000E  0FFF               	dw	4095
  3683                           
  3684                           	psect	config
  3685                           
  3686                           ;Config register CONFIG1L @ 0x300000
  3687                           ;	External Oscillator mode Selection bits
  3688                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3689                           ;	Power-up default value for COSC bits
  3690                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3691   300000                     	org	3145728
  3692   300000  AA                 	db	170
  3693                           
  3694                           ;Config register CONFIG1H @ 0x300001
  3695                           ;	unspecified, using default values
  3696                           ;	Clock Out Enable bit
  3697                           ;	CLKOUTEN = 0x1, unprogrammed default
  3698                           ;	Clock Switch Enable bit
  3699                           ;	CSWEN = 0x1, unprogrammed default
  3700                           ;	Fail-Safe Clock Monitor Enable bit
  3701                           ;	FCMEN = 0x1, unprogrammed default
  3702   300001                     	org	3145729
  3703   300001  FF                 	db	255
  3704                           
  3705                           ;Config register CONFIG2L @ 0x300002
  3706                           ;	unspecified, using default values
  3707                           ;	Master Clear Enable bit
  3708                           ;	MCLRE = 0x1, unprogrammed default
  3709                           ;	Power-up Timer Enable bit
  3710                           ;	PWRTE = 0x1, unprogrammed default
  3711                           ;	Low-power BOR enable bit
  3712                           ;	LPBOREN = 0x1, unprogrammed default
  3713                           ;	Brown-out Reset Enable bits
  3714                           ;	BOREN = 0x3, unprogrammed default
  3715   300002                     	org	3145730
  3716   300002  FF                 	db	255
  3717                           
  3718                           ;Config register CONFIG2H @ 0x300003
  3719                           ;	unspecified, using default values
  3720                           ;	Brown Out Reset Voltage selection bits
  3721                           ;	BORV = 0x3, unprogrammed default
  3722                           ;	ZCD Disable bit
  3723                           ;	ZCD = 0x1, unprogrammed default
  3724                           ;	PPSLOCK bit One-Way Set Enable bit
  3725                           ;	PPS1WAY = 0x1, unprogrammed default
  3726                           ;	Stack Full/Underflow Reset Enable bit
  3727                           ;	STVREN = 0x1, unprogrammed default
  3728                           ;	Debugger Enable bit
  3729                           ;	DEBUG = 0x1, unprogrammed default
  3730                           ;	Extended Instruction Set Enable bit
  3731                           ;	XINST = 0x1, unprogrammed default
  3732   300003                     	org	3145731
  3733   300003  FF                 	db	255
  3734                           
  3735                           ;Config register CONFIG3L @ 0x300004
  3736                           ;	WDT Period Select bits
  3737                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3738                           ;	WDT operating mode
  3739                           ;	WDTE = OFF, WDT Disabled
  3740   300004                     	org	3145732
  3741   300004  9F                 	db	159
  3742                           
  3743                           ;Config register CONFIG3H @ 0x300005
  3744                           ;	unspecified, using default values
  3745                           ;	WDT Window Select bits
  3746                           ;	WDTCWS = 0x7, unprogrammed default
  3747                           ;	WDT input clock selector
  3748                           ;	WDTCCS = 0x7, unprogrammed default
  3749   300005                     	org	3145733
  3750   300005  FF                 	db	255
  3751                           
  3752                           ;Config register CONFIG4L @ 0x300006
  3753                           ;	unspecified, using default values
  3754                           ;	Write Protection Block 0
  3755                           ;	WRT0 = 0x1, unprogrammed default
  3756                           ;	Write Protection Block 1
  3757                           ;	WRT1 = 0x1, unprogrammed default
  3758                           ;	Write Protection Block 2
  3759                           ;	WRT2 = 0x1, unprogrammed default
  3760                           ;	Write Protection Block 3
  3761                           ;	WRT3 = 0x1, unprogrammed default
  3762                           ;	Write Protection Block 3
  3763                           ;	WRT4 = 0x1, unprogrammed default
  3764                           ;	Write Protection Block 3
  3765                           ;	WRT5 = 0x1, unprogrammed default
  3766                           ;	Write Protection Block 3
  3767                           ;	WRT6 = 0x1, unprogrammed default
  3768                           ;	Write Protection Block 3
  3769                           ;	WRT7 = 0x1, unprogrammed default
  3770   300006                     	org	3145734
  3771   300006  FF                 	db	255
  3772                           
  3773                           ;Config register CONFIG4H @ 0x300007
  3774                           ;	unspecified, using default values
  3775                           ;	Configuration Register Write Protection bit
  3776                           ;	WRTC = 0x1, unprogrammed default
  3777                           ;	Boot Block Write Protection bit
  3778                           ;	WRTB = 0x1, unprogrammed default
  3779                           ;	Data EEPROM Write Protection bit
  3780                           ;	WRTD = 0x1, unprogrammed default
  3781                           ;	Scanner Enable bit
  3782                           ;	SCANE = 0x1, unprogrammed default
  3783                           ;	Low Voltage Programming Enable bit
  3784                           ;	LVP = 0x1, unprogrammed default
  3785   300007                     	org	3145735
  3786   300007  FF                 	db	255
  3787                           
  3788                           ;Config register CONFIG5L @ 0x300008
  3789                           ;	unspecified, using default values
  3790                           ;	UserNVM Program Memory Code Protection bit
  3791                           ;	CP = 0x1, unprogrammed default
  3792                           ;	DataNVM Memory Code Protection bit
  3793                           ;	CPD = 0x1, unprogrammed default
  3794   300008                     	org	3145736
  3795   300008  FF                 	db	255
  3796                           
  3797                           ;Config register CONFIG5H @ 0x300009
  3798                           ;	unspecified, using default values
  3799   300009                     	org	3145737
  3800   300009  FF                 	db	255
  3801                           
  3802                           ;Config register CONFIG6L @ 0x30000A
  3803                           ;	unspecified, using default values
  3804                           ;	Table Read Protection Block 0
  3805                           ;	EBTR0 = 0x1, unprogrammed default
  3806                           ;	Table Read Protection Block 1
  3807                           ;	EBTR1 = 0x1, unprogrammed default
  3808                           ;	Table Read Protection Block 2
  3809                           ;	EBTR2 = 0x1, unprogrammed default
  3810                           ;	Table Read Protection Block 3
  3811                           ;	EBTR3 = 0x1, unprogrammed default
  3812                           ;	Table Read Protection Block 4
  3813                           ;	EBTR4 = 0x1, unprogrammed default
  3814                           ;	Table Read Protection Block 5
  3815                           ;	EBTR5 = 0x1, unprogrammed default
  3816                           ;	Table Read Protection Block 6
  3817                           ;	EBTR6 = 0x1, unprogrammed default
  3818                           ;	Table Read Protection Block 7
  3819                           ;	EBTR7 = 0x1, unprogrammed default
  3820   30000A                     	org	3145738
  3821   30000A  FF                 	db	255
  3822                           
  3823                           ;Config register CONFIG6H @ 0x30000B
  3824                           ;	unspecified, using default values
  3825                           ;	Boot Block Table Read Protection bit
  3826                           ;	EBTRB = 0x1, unprogrammed default
  3827   30000B                     	org	3145739
  3828   30000B  FF                 	db	255
  3829                           tosu	equ	0xFFF
  3830                           tosh	equ	0xFFE
  3831                           tosl	equ	0xFFD
  3832                           stkptr	equ	0xFFC
  3833                           pclatu	equ	0xFFB
  3834                           pclath	equ	0xFFA
  3835                           pcl	equ	0xFF9
  3836                           tblptru	equ	0xFF8
  3837                           tblptrh	equ	0xFF7
  3838                           tblptrl	equ	0xFF6
  3839                           tablat	equ	0xFF5
  3840                           prodh	equ	0xFF4
  3841                           prodl	equ	0xFF3
  3842                           indf0	equ	0xFEF
  3843                           postinc0	equ	0xFEE
  3844                           postdec0	equ	0xFED
  3845                           preinc0	equ	0xFEC
  3846                           plusw0	equ	0xFEB
  3847                           fsr0h	equ	0xFEA
  3848                           fsr0l	equ	0xFE9
  3849                           wreg	equ	0xFE8
  3850                           indf1	equ	0xFE7
  3851                           postinc1	equ	0xFE6
  3852                           postdec1	equ	0xFE5
  3853                           preinc1	equ	0xFE4
  3854                           plusw1	equ	0xFE3
  3855                           fsr1h	equ	0xFE2
  3856                           fsr1l	equ	0xFE1
  3857                           bsr	equ	0xFE0
  3858                           indf2	equ	0xFDF
  3859                           postinc2	equ	0xFDE
  3860                           postdec2	equ	0xFDD
  3861                           preinc2	equ	0xFDC
  3862                           plusw2	equ	0xFDB
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        59
    BSS         188
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      78
    BANK0           160     82     141
    BANK1           256      0     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 15
		 -> main@buf(BANK0[15]), 

    levels@colorL	PTR struct RGB_val size(2) Largest target is 6
		 -> main@colorL(BANK0[6]), 

    readcard@colorL	PTR struct RGB_val size(2) Largest target is 6
		 -> main@colorL(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_readcard
    _readcard->___xxtofl
    _levels->_color_read_Blue
    _levels->_color_read_Green
    _levels->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                84    84      0    6068
                                             48 COMRAM     2     2      0
                                              0 BANK0     82    82      0
                    _Interrupts_init
                              _Light
                          _LightInit
                   _TxBufferedString
                   _color_click_init
                         _initUSART4
                           _readcard
 ---------------------------------------------------------------------------------
 (1) _readcard                                            16    14      2    5248
                                             32 COMRAM    16    14      2
                             ___flge
                            ___lwdiv
                             ___wmul
                           ___xxtofl
                             _levels
 ---------------------------------------------------------------------------------
 (2) _levels                                               6     2      4    1145
                                             16 COMRAM     6     2      4
                              _Light
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              9 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              6 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _Light                                                1     1      0      88
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     567
                                             18 COMRAM    14    10      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     355
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     652
                                             11 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1854
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              7 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              6 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LightInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              3     3      0      38
                                              2 COMRAM     3     3      0
                   _getCharFromTxBuf
                      _isDataInTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (7) _putCharToRxBuf                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _getCharFromTxBuf                                     2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Light
   _LightInit
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _readcard
     ___flge
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___lwdiv (ARG)
       ___wmul (ARG)
     _levels
       _Light
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write

 _HighISR (ROOT)
   _getCharFromTxBuf
   _isDataInTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A0       7       62.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     52      8D       5       88.1%
BITBIGSFRlhhhlh     8F      0       0      38        0.0%
BITBIGSFRhlh        6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      4E       1       83.0%
BITBIGSFRlhhlhl     36      0       0      42        0.0%
BITBIGSFRlhhlhl     2D      0       0      41        0.0%
BITBIGSFRlhhll      2A      0       0      44        0.0%
BITBIGSFRllll       26      0       0      49        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRlhhlhl      C      0       0      43        0.0%
BITBIGSFRlllhh       B      0       0      47        0.0%
BITBIGSFRlhl         9      0       0      45        0.0%
BITBIGSFRlhhlhh      8      0       0      39        0.0%
BITBIGSFRlllhl       6      0       0      48        0.0%
BITBIGSFRlhhhh       4      0       0      37        0.0%
BITBIGSFRllh         3      0       0      46        0.0%
BITBIGSFRhllhl       2      0       0      35        0.0%
BITBIGSFRhllhh       1      0       0      34        0.0%
BITBIGSFRlhhlhl      1      0       0      40        0.0%
BITBIGSFRhlll        1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17B      50        0.0%
DATA                 0      0     17B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 04 14:25:14 2022

               _color_read_Red 0AB2                _color_read_Blue 0B52                             l91 0CCC  
                           l94 0DE4                             l97 0B00            ___wmul@multiplicand 0008  
             _color_read_Green 0B02              ??_Interrupts_init 0006                            l100 0BA0  
                          l103 0B50                            l201 0E38                            l301 0C98  
                          l125 051E                            l134 09DC                            l208 0AB0  
                          l343 0D22                            l255 0E02                            l352 0E62  
                          l177 0E2A                            l361 0E44                            l346 0D78  
                          l355 0E4E                            l292 0D4C                            l364 0C24  
                          l349 0D9E                            l358 0E58                            l367 0DC4  
                          l632 091E                            l637 0964                            l865 0A50  
                          l858 0A48                            u800 0A64                            u801 0A60  
                          u810 0A7A                            u811 0A76                            u900 095C  
                          u820 0A92                            u901 0958                            u821 0A8E  
                          u910 09F8                            u830 0AAA                            u911 09F4  
                          u831 0AA6                            u760 0D88                            u920 0A16  
                          u840 0996                            u761 0D84                            u921 0A12  
                          u841 0992                            u850 0D36                            u770 0D9E  
                          u930 0A32                            u851 0D32                            u771 0D9A  
                          u931 0A2E                            u860 0890                            u940 0532  
                          u780 0C0E                            u861 088C                            u941 052E  
                          u781 0C06                            u870 08CE                            u950 0540  
                          u871 08CA                            u951 053C                            u880 08EC  
                          u960 059C                            u881 08E8                            u961 0598  
                          u890 090C                            u970 05F2                            u891 0908  
                          u971 05EE                            u980 063C                            u981 0638  
                          u990 065A                            u798 0C10                            u991 0656  
                          wreg 000FE8                    main@buf_101 0074                    main@buf_103 0060  
                         l1022 0576                           l1025 06D2                           l1036 066A  
                         l1029 060E                           l1500 0D78                           l1502 0D88  
                         l1510 0E40                           l1504 0E5A                           l1512 0E50  
                         l1600 0DA0                           l1520 0BE6                           l1506 0E5E  
                         l1514 0E54                           l1610 08A0                           l1602 0DBC  
                         l1530 0C22                           l1522 0BEA                           l1508 0E3C  
                         l1700 0DF2                           l1620 090C                           l1612 08CE  
                         l1540 0A7A                           l1524 0BF2                           l1516 0E46  
                         l1710 0C9A                           l1702 0DFC                           l1622 095C  
                         l1614 08DE                           l1606 0862                           l1630 09E6  
                         l1542 0A80                           l1534 0A54                           l1526 0BFA  
                         l1518 0E4A                           l1550 0AB2                           l1720 0E2C  
                         l1800 0C90                           l1712 0C9E                           l1704 0DFE  
                         l1624 0962                           l1616 08EC                           l1608 0890  
                         l1640 0A1C                           l1632 09F8                           l1544 0A92  
                         l1536 0A64                           l1528 0C20                           l1552 0AF8  
                         l1802 0C94                           l1570 0D04                           l1714 0CA8  
                         l1706 0E00                           l1618 08FE                           l1642 0A32  
                         l1634 0A00                           l1650 0522                           l1546 0A98  
                         l1538 0A6A                           l1562 0B02                           l1730 022A  
                         l1722 009E                           l1708 0E1C                           l1572 0D0A  
                         l1580 0DC8                           l1716 0CB8                           l1644 0A3A  
                         l1636 0A08                           l1628 09DE                           l1652 0532  
                         l1548 0AAA                           l1556 0B52                           l1564 0B48  
                         l1732 025C                           l1724 0194                           l1820 06E4  
                         l1812 06D4                           l1574 0D0C                           l1718 0CC2  
                         l1646 0A3C                           l1638 0A16                           l1670 05F8  
                         l1662 05B0                           l1654 0540                           l1558 0B98  
                         l1590 0998                           l1582 0966                           l1750 0352  
                         l1742 02E8                           l1734 028E                           l1726 01C6  
                         l1830 072C                           l1822 06EA                           l1814 06D8  
                         l1592 0D26                           l1576 0D0E                           l1568 0CFA  
                         l1648 0A42                           l1680 0678                           l1672 0604  
                         l1664 05B8                           l1656 0586                           l1584 096C  
                         l1760 03FC                           l1752 0366                           l1736 02C0  
                         l1728 01F8                           l1840 0786                           l1832 073E  
                         l1824 06FA                           l1816 06DC                           l1594 0D36  
                         l1578 0D10                           l1690 06C0                           l1682 067A  
                         l1674 0640                           l1666 05C4                           l1658 059C  
                         l1586 0984                           l1770 04A6                           l1762 0410  
                         l1754 03C4                           l1738 02E2                           l1746 02EE  
                         l1850 07E0                           l1842 0798                           l1834 0750  
                         l1826 070A                           l1818 06E0                           l1596 0D3A  
                         l1692 06C2                           l1684 067E                           l1676 064C  
                         l1668 05F6                           l1588 0996                           l1772 04D8  
                         l1764 046E                           l1756 03F6                           l1748 0320  
                         l1780 04E4                           l1860 0828                           l1852 07F2  
                         l1844 07AA                           l1836 0762                           l1828 071C  
                         l1598 0D4A                           l1686 06A2                           l1678 065A  
                         l1782 04F8                           l1766 04A0                           l1854 0804  
                         l1846 07BC                           l1838 0774                           l1792 0C62  
                         l1696 0DE6                           l1688 06B2                           l1784 0516  
                         l1776 04DE                           l1856 0816                           l1848 07CE  
                         l1794 0C66                           l1698 0DF0                           l1866 082E  
                         l1858 0822                           l1796 0C74                           l1788 051C  
                         l1868 0846                           l1798 0C78                           u1000 066A  
                         u1001 0666                           u1010 0678                           u1011 0674  
                         u1020 06B2                           u1100 02E2                           u1021 06AE  
                         u1101 02DE                           u1030 06C0                           u1110 0320  
                         u1031 06BC                           u1111 031C                           u1120 0352  
                         u1040 01C6                           u1121 034E                           u1041 01C2  
                         u1201 0714                           u1130 03F6                           u1050 01F8  
                         u1210 072C                           u1131 03F2                           u1051 01F4  
                         u1211 0728                           u1140 04A0                           u1060 022A  
                         u1141 049C                           u1061 0226                           u1301 07C6  
                         u1221 0736                           u1150 04D8                           u1070 025C  
                         u1310 07E0                           u1230 0750                           u1151 04D4  
                         u1071 0258                           u1311 07DC                           u1231 074C  
                         u1160 0516                           u1080 028E                           u1161 0512  
                         u1081 028A                           u1321 07EA                           u1241 075A  
                         u1170 0C90                           u1090 02C0                           u1330 0804  
                         u1250 0774                           u1171 0C8C                           u1091 02BC  
                         u1331 0800                           u1251 0770                           u1341 080E  
                         u1261 077E                           u1350 085A                           u1270 0798  
                         u1190 070A                           u1351 0856                           u1271 0794  
                         u1191 0706                   _BAUD4CONbits 000EE9                           u1281 07A2  
                         u1290 07BC                           u1291 07B8                           u1437 0838  
                         u1447 0976                           u1457 0CAE                           _main 06D4  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 004F                           prodh 000FF4  
                         prodl 000FF3                           start 009A         __end_of_color_read_Red 0B02  
              __end_of_HighISR 009A                   ___param_bank 000000                          ?_main 0001  
              __end_of___lwdiv 0A52                          i2l281 0D76                          i2l186 008E  
                        i2l295 0E1A                          i2l288 0CF8                          _Light 0A52  
   __end_of_I2C_2_Master_Start 0E64     __end_of_I2C_2_Master_Write 0E46                          main@j 00AA  
                        tablat 000FF5                          plusw1 000FE3                          plusw2 000FDB  
                        ttemp5 0050                          ttemp6 0053                          ttemp7 0057  
                        status 000FD8                          wtemp8 0050        __end_of_color_read_Blue 0BA2  
        _I2C_2_Master_RepStart 0E46             putCharToRxBuf@byte 0001                ?_color_read_Red 000A  
              __initialization 0BA2                   __end_of_main 0862             putCharToTxBuf@byte 0006  
                       ??_main 0031                  __activetblptr 000000                         ?_Light 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RD5PPS 000E6F  
                       _RD6PPS 000E70                         i2l1344 0E04                         i2l1360 0D64  
                       i2l1362 0D74                         i2l1356 0D50                         i2l1358 0D60  
                       i2l1804 0CCE                         i2l1806 0CDE                         i2l1808 0CE2  
                       i2l1880 0050                         i2l1890 0084                         i2l1882 0054  
                       i2l1874 0012                         i2l1892 008A                         i2l1884 0068  
                       i2l1876 0038                         i2l1878 004C                         i2l1886 0070  
                       i2l1888 0080                      ??_HighISR 0003       __end_of_color_click_init 0CCE  
                       _RX4PPS 000E15                         _TX4REG 000EE4               __end_of___xxtofl 06D4  
                       ___flge 0862               _getCharFromTxBuf 0CCE                         ___wmul 0DA0  
                    ??___lwdiv 0010                         _levels 0966                         clear_0 0BC8  
                       clear_1 0BD4               __end_of_readcard 0520                         isa$std 000001  
            ?_TxBufferedString 0007                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 0009                     ___flge@ff1 0006  
                   ___flge@ff2 000A                   ___xxtofl@arg 001D                   ___xxtofl@exp 001C  
                 ___xxtofl@val 0013          __end_of_isDataInTxBuf 0E1C                     __accesstop 0060  
      __end_of__initialization 0BDA       __end_of_color_read_Green 0B52         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 000A                _Interrupts_init 0E1C  
                __end_of_Light 0AB2                 __pcstackCOMRAM 0001                   __pidataBANK0 0C26  
            __end_of_LightInit 0E3A                        ??_Light 0006                     __pbssBANK1 0100  
            _color_writetoaddr 0DC6                        ?___flge 0006             ?_color_writetoaddr 0008  
                      ?___wmul 0006                        ?_levels 0011            ??_color_writetoaddr 0009  
                    ?___xxtofl 0013                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      i2u43_40 0E18                        i2u43_41 0E12                        i2u44_40 0E1A  
                      i2u46_40 0D60                        i2u46_41 0D5C                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 0E2C         color_writetoaddr@value 0008  
             ??_color_read_Red 000C                        _HighISR 0008                      ?_readcard 0021  
    __end_of_color_writetoaddr 0DE6             _I2C_2_Master_Start 0E5A                     _initUSART4 0DE6  
           _I2C_2_Master_Write 0E3A                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000F            ?_I2C_2_Master_Start 0001                        ___lwdiv 09DE  
          ?_I2C_2_Master_Write 0001                        __pcinit 0BA2                        __ramtop 0E00  
                      __ptext0 06D4                        __ptext1 009E                        __ptext2 0966  
                      __ptext3 0AB2                        __ptext4 0B02                        __ptext5 0B52  
                      __ptext6 0E46                        __ptext7 0BE4                        __ptext8 0A52  
                      __ptext9 0520                     ??___xxtofl 0017                  _RxBufWriteCnt 004C  
     __end_of_getCharFromTxBuf 0CFA                        main@buf 008A           ??_I2C_2_Master_Start 0007  
         ??_I2C_2_Master_Write 0007           end_of_initialization 0BDA                        levels@i 0011  
                   ??_readcard 0023              ?_color_click_init 0001             ??_color_click_init 000A  
                 levels@colorL 0013                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                     main@F14601 00DC  
                   main@F14603 00C6                     main@F14605 00BE                     main@F14607 00B2  
                   main@F14593 00D5                     main@F14595 00E8                     main@F14597 00E2  
                   main@F14599 00CE                  ___xxtofl@sign 001B                      _TRISAbits 000F81  
                    _TRISDbits 000F84                      _TRISFbits 000F86                      _TRISGbits 000F87  
     color_writetoaddr@address 0009        ??_I2C_2_Master_RepStart 0007               ?_Interrupts_init 0001  
                   main@buf_91 00A5                     main@buf_93 0099                     main@buf_95 0083  
                   main@buf_97 009F                     main@buf_89 007C                     main@buf_99 006C  
                   main@colorL 00AB                   _EUSART4RXbuf 0033                   _EUSART4TXbuf 0100  
                 _EUSART4VXbuf 0164              ?_color_read_Green 000A                    ?_initUSART4 0001  
           ??_color_read_Green 000C                 __end_of___flge 0966                 __end_of___wmul 0DC6  
               __end_of_levels 09DE            start_initialization 0BA2                      _LightInit 0E2C  
                _TxBufWriteCnt 004A            color_read_Green@tmp 000F                       ??___flge 000E  
                     ??___wmul 000A                 _putCharToRxBuf 0D4E                 _putCharToTxBuf 0D24  
                  __pdataBANK0 00B2                       ??_levels 0015                    __pbssCOMRAM 0033  
                __pcstackBANK0 0060                     ?_LightInit 0001                       ?_HighISR 0001  
             ___lwdiv@dividend 000C         __end_of_putCharToRxBuf 0D78         __end_of_putCharToTxBuf 0D4E  
                    __pintcode 0008                       ?___lwdiv 000C         TxBufferedString@string 0007  
         I2C_2_Master_Read@ack 0008                 Light@colorcode 0006           I2C_2_Master_Read@tmp 0009  
            _I2C_2_Master_Idle 0D78              _I2C_2_Master_Init 0CFA              _I2C_2_Master_Read 0BE4  
            _I2C_2_Master_Stop 0E50                   _RxBufReadCnt 004B             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 0010                  _VxBufWriteCnt 0048              ?_getCharFromTxBuf 0001  
           ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 0006            ??_I2C_2_Master_Init 0006  
          ??_I2C_2_Master_Read 0007                 ___wmul@product 000A                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0007                  _isDataInTxBuf 0E04                       _LATFbits 000F7E  
             _TxBufferedString 0C62                       _LATGbits 000F7F                       _PIE0bits 000E29  
                     _PIE4bits 000E2D                       i2u140_40 0080                       i2u140_41 007C  
                     i2u118_40 0CDE                       i2u118_41 0CDA                       i2u136_40 0024  
                     i2u136_41 001E                       i2u136_46 0026                       i2u137_40 0038  
                     i2u137_41 0034                       i2u138_40 004C                       i2u138_41 0048  
                     i2u139_40 0068                       i2u139_41 0064                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA  
                     _SSP2STAT 000ED8      __end_of_I2C_2_Master_Idle 0DA0      __end_of_I2C_2_Master_Init 0D24  
    __end_of_I2C_2_Master_Read 0C26              ___wmul@multiplier 0006      __end_of_I2C_2_Master_Stop 0E5A  
  I2C_2_Master_Write@data_byte 0007                      main@color 00B1              ??_color_read_Blue 000C  
                  ??_LightInit 0006                   _TxBufReadCnt 0049                      copy_data0 0BB6  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 0E50             color_read_Blue@tmp 000F  
                 ??_initUSART4 0006                       __Hrparam 0000                       __Lrparam 0000  
                     _charFLAG 004E                     _ANSELDbits 000EA7                       ___xxtofl 0520  
              ___lwdiv@divisor 000E             __end_of_initUSART4 0E04                   _VxBufReadCnt 0047  
              ___lwdiv@counter 0012                       __ptext10 0DA0                       __ptext11 09DE  
                     __ptext20 0CFA                       __ptext12 0862                       __ptext21 0C62  
                     __ptext13 0DE6                       __ptext22 0D24                       __ptext14 0C9A  
                     __ptext23 0E2C                       __ptext15 0DC6                       __ptext24 0E1C  
                     __ptext16 0E3A                       __ptext17 0E50                       __ptext26 0D4E  
                     __ptext18 0E5A                       __ptext27 0E04                       __ptext19 0D78  
                     __ptext28 0CCE                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     _readcard 009E                       _sendFLAG 004D                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 004F                 readcard@colorL 0021  
               readcard@ratio1 0029                 readcard@ratio2 002D                 readcard@ratio3 0025  
                   _INTCONbits 000FF2                ??_isDataInTxBuf 0001                       intlevel2 0000  
                   HighISR@reg 0005               _color_click_init 0C9A       __end_of_TxBufferedString 0C9A  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
             ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0006  
